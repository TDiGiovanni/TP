OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-09-20T10:06:17.53941+02:00' ],		#prior : OmReference [ 'Pharo7.0-SNAPSHOT-32bit-a2a2b23.3qkrrljoimpar8v6yn2c07wg9', '16263' ],		#self : OmReference [ '1' ]	},	#content : EpCategoryAddition {		#classCategoryName : #Metaprogrammation,		#affectedPackageName : #Metaprogrammation	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-09-20T10:06:17.545649+02:00' ],		#prior : OmReference [ '1' ],		#self : OmReference [ '2' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#traitCompositionSource : '{}',				#superclassName : 'PackageManifest',				#definitionSource : 'PackageManifest subclass: #ManifestMetaprogrammation\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Metaprogrammation\''			},			#name : #ManifestMetaprogrammation,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'ManifestMetaprogrammation class\r\tinstanceVariableNames: \'\''				},				#name : #'ManifestMetaprogrammation class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #ManifestMetaprogrammation,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Metaprogrammation,			#package : #Metaprogrammation,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-09-20T10:06:17.550592+02:00' ],		#prior : OmReference [ '2' ],		#self : OmReference [ '3' ]	},	#content : EpCategoryAddition {		#classCategoryName : #Metaprogrammation-Manifest,		#affectedPackageName : #Metaprogrammation	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-09-20T10:06:17.553923+02:00' ],		#prior : OmReference [ '3' ],		#self : OmReference [ '4' ]	},	#content : EpBehaviorCategoryChange {		#oldCategory : #Metaprogrammation,		#newCategory : #Metaprogrammation-Manifest,		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#traitCompositionSource : '{}',				#superclassName : 'PackageManifest',				#definitionSource : 'PackageManifest subclass: #ManifestMetaprogrammation\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Metaprogrammation-Manifest\''			},			#name : #ManifestMetaprogrammation,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'ManifestMetaprogrammation class\r\tinstanceVariableNames: \'\''				},				#name : #'ManifestMetaprogrammation class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #ManifestMetaprogrammation,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Metaprogrammation-Manifest,			#package : #Metaprogrammation,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-09-20T10:06:17.601151+02:00' ],		#prior : OmReference [ '4' ],		#self : OmReference [ '5' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#traitCompositionSource : '{}',				#superclassName : 'PackageManifest',				#definitionSource : 'PackageManifest subclass: #ManifestMetaprogrammation\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Metaprogrammation-Manifest\''			},			#name : #ManifestMetaprogrammation,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'ManifestMetaprogrammation class\r\tinstanceVariableNames: \'\''				},				#name : #'ManifestMetaprogrammation class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #ManifestMetaprogrammation,					#isMetaSide : false				},				#parent : @7,				#content : 'I store metadata for this package. These meta data are used by other tools such as the SmalllintManifestChecker and the critics Browser',				#stamp : '<historical>'			},			#classVariables : OrderedCollection [ ],			#category : #Metaprogrammation-Manifest,			#package : #Metaprogrammation,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'I store metadata for this package. These meta data are used by other tools such as the SmalllintManifestChecker and the critics Browser',		#newStamp : '<historical>'	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-20T10:06:28.410595+02:00' ],		#prior : OmReference [ '5' ],		#self : OmReference [ '6' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#traitCompositionSource : '{}',				#superclassName : 'PackageManifest',				#definitionSource : 'PackageManifest subclass: #ManifestMetaprogrammation\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Metaprogrammation-Manifest\''			},			#name : #ManifestMetaprogrammation,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'ManifestMetaprogrammation class\r\tinstanceVariableNames: \'\''				},				#name : #'ManifestMetaprogrammation class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #ManifestMetaprogrammation,					#isMetaSide : false				},				#parent : @7,				#content : 'HMIN305 - Métaprogrammation et réflexivité',				#stamp : 'ThomasDiGiovanni 9/20/2019 10:06'			},			#classVariables : OrderedCollection [ ],			#category : #Metaprogrammation-Manifest,			#package : #Metaprogrammation,			#sharedPools : OrderedCollection [ ]		},		#oldComment : 'I store metadata for this package. These meta data are used by other tools such as the SmalllintManifestChecker and the critics Browser',		#newComment : 'HMIN305 - Métaprogrammation et réflexivité',		#oldStamp : '<historical>',		#newStamp : 'ThomasDiGiovanni 9/20/2019 10:06'	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-20T10:07:03.661825+02:00' ],		#prior : OmReference [ '6' ],		#self : OmReference [ '7' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#traitCompositionSource : '{}',				#superclassName : 'Object',				#definitionSource : 'Object subclass: #Pile\r\tinstanceVariableNames: \'contenu index capacite\'\r\tclassVariableNames: \'tailleDefaut\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Metaprogrammation\''			},			#name : #Pile,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Pile,						#isMetaSide : false					},					#name : #contenu,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Pile,						#isMetaSide : false					},					#name : #index,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Pile,						#isMetaSide : false					},					#name : #capacite,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'Pile class\r\tinstanceVariableNames: \'\''				},				#name : #'Pile class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Pile,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #Pile,						#isMetaSide : false					},					#name : #tailleDefaut,					#parent : @7				}			],			#category : #Metaprogrammation,			#package : #Metaprogrammation,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-20T10:08:46.263207+02:00' ],		#prior : OmReference [ '7' ],		#self : OmReference [ '8' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pile,				#isMetaSide : false			},			#name : #'initialize:',			#protocol : #'as yet unclassified',			#sourceCode : 'initialize: taille\r"la pile est vide quand index = 0"\rindex := 0.\r"la pile est pleine quand index = capacite"\rcapacite := taille.\r"le contenu est stocké dans un tableau"\rcontenu := Array new: capacite.\r"pour les tests, enlever le commentaire quand isEmpty est écrite"\r"self assert: (self isEmpty)."',			#stamp : 'ThomasDiGiovanni 9/20/2019 10:08',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-20T10:08:46.287453+02:00' ],		#prior : OmReference [ '8' ],		#self : OmReference [ '9' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pile,				#isMetaSide : false			},			#name : #'initialize:',			#protocol : #'as yet unclassified',			#sourceCode : 'initialize: taille\r"la pile est vide quand index = 0"\rindex := 0.\r"la pile est pleine quand index = capacite"\rcapacite := taille.\r"le contenu est stocké dans un tableau"\rcontenu := Array new: capacite.\r"pour les tests, enlever le commentaire quand isEmpty est écrite"\r"self assert: (self isEmpty)."',			#stamp : 'ThomasDiGiovanni 9/20/2019 10:08',			#package : #Metaprogrammation		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pile,				#isMetaSide : false			},			#name : #'initialize:',			#protocol : #initialization,			#sourceCode : 'initialize: taille\r"la pile est vide quand index = 0"\rindex := 0.\r"la pile est pleine quand index = capacite"\rcapacite := taille.\r"le contenu est stocké dans un tableau"\rcontenu := Array new: capacite.\r"pour les tests, enlever le commentaire quand isEmpty est écrite"\r"self assert: (self isEmpty)."',			#stamp : 'ThomasDiGiovanni 9/20/2019 10:08',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-20T10:09:40.440477+02:00' ],		#prior : OmReference [ '9' ],		#self : OmReference [ '10' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pile,				#isMetaSide : false			},			#name : #'initialize:',			#protocol : #initialization,			#sourceCode : 'initialize: taille\r"la pile est vide quand index = 0"\rindex := 0.\r"la pile est pleine quand index = capacite"\rcapacite := taille.\r"le contenu est stocké dans un tableau"\rcontenu := Array new: capacite.\r"pour les tests, enlever le commentaire quand isEmpty est écrite"\r"self assert: (self isEmpty)."',			#stamp : 'ThomasDiGiovanni 9/20/2019 10:08',			#package : #Metaprogrammation		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pile,				#isMetaSide : false			},			#name : #'initialize:',			#protocol : #initialization,			#sourceCode : 'initialize: taille\r\t"La pile est vide quand index = 0, la pile est pleine quand index = capacite"\r\r\tindex := 0.\r\tcapacite := taille.\r\t\r\t"Le contenu est stocké dans un tableau"\r\tcontenu := Array new: capacite\r\t\r\t"pour les tests, enlever le commentaire quand isEmpty est écrite"\r\t"self assert: (self isEmpty)."',			#stamp : 'ThomasDiGiovanni 9/20/2019 10:09',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-20T10:09:45.130552+02:00' ],		#prior : OmReference [ '10' ],		#self : OmReference [ '11' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pile,				#isMetaSide : false			},			#name : #'initialize:',			#protocol : #initialization,			#sourceCode : 'initialize: taille\r\t"La pile est vide quand index = 0, la pile est pleine quand index = capacite"\r\r\tindex := 0.\r\tcapacite := taille.\r\t\r\t"Le contenu est stocké dans un tableau"\r\tcontenu := Array new: capacite\r\t\r\t"pour les tests, enlever le commentaire quand isEmpty est écrite"\r\t"self assert: (self isEmpty)."',			#stamp : 'ThomasDiGiovanni 9/20/2019 10:09',			#package : #Metaprogrammation		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pile,				#isMetaSide : false			},			#name : #'initialize:',			#protocol : #initialization,			#sourceCode : 'initialize: taille\r\t"La pile est vide quand index = 0, la pile est pleine quand index = capacite"\r\r\tindex := 0.\r\tcapacite := taille.\r\r\t"Le contenu est stocké dans un tableau"\r\tcontenu := Array new: capacite\r\r\t"Pour les tests, enlever le commentaire quand isEmpty est écrite"\r\t"self assert: (self isEmpty)."',			#stamp : 'ThomasDiGiovanni 9/20/2019 10:09',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-20T10:10:30.898378+02:00' ],		#prior : OmReference [ '11' ],		#self : OmReference [ '12' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pile,				#isMetaSide : false			},			#name : #'printOn:',			#protocol : #initialization,			#sourceCode : 'printOn: aStream\raStream nextPutAll: \'une Pile, de taille: \'.\rcapacite printOn: aStream.\raStream nextPutAll: \' contenant: \'.\rindex printOn: aStream.\raStream nextPutAll: \' objets : (\'.\rcontenu do: [ :each | each printOn: aStream. aStream space ].\raStream nextPut: $).\raStream nextPut: $..',			#stamp : 'ThomasDiGiovanni 9/20/2019 10:10',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-20T10:13:32.674592+02:00' ],		#prior : OmReference [ '12' ],		#self : OmReference [ '13' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pile,				#isMetaSide : false			},			#name : #isEmpty,			#protocol : #initialization,			#sourceCode : 'isEmpty\r',			#stamp : 'ThomasDiGiovanni 9/20/2019 10:13',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-20T10:13:45.599302+02:00' ],		#prior : OmReference [ '13' ],		#self : OmReference [ '14' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pile,				#isMetaSide : false			},			#name : #isEmpty,			#protocol : #initialization,			#sourceCode : 'isEmpty\r',			#stamp : 'ThomasDiGiovanni 9/20/2019 10:13',			#package : #Metaprogrammation		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pile,				#isMetaSide : false			},			#name : #isEmpty,			#protocol : #'as yet unclassified',			#sourceCode : 'isEmpty\r',			#stamp : 'ThomasDiGiovanni 9/20/2019 10:13',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-20T10:13:45.617561+02:00' ],		#prior : OmReference [ '14' ],		#self : OmReference [ '15' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pile,				#isMetaSide : false			},			#name : #isEmpty,			#protocol : #initialization,			#sourceCode : 'isEmpty\r',			#stamp : 'ThomasDiGiovanni 9/20/2019 10:13',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-20T10:13:56.432452+02:00' ],		#prior : OmReference [ '15' ],		#self : OmReference [ '16' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pile,				#isMetaSide : false			},			#name : #'printOn:',			#protocol : #initialization,			#sourceCode : 'printOn: aStream\raStream nextPutAll: \'une Pile, de taille: \'.\rcapacite printOn: aStream.\raStream nextPutAll: \' contenant: \'.\rindex printOn: aStream.\raStream nextPutAll: \' objets : (\'.\rcontenu do: [ :each | each printOn: aStream. aStream space ].\raStream nextPut: $).\raStream nextPut: $..',			#stamp : 'ThomasDiGiovanni 9/20/2019 10:10',			#package : #Metaprogrammation		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pile,				#isMetaSide : false			},			#name : #'printOn:',			#protocol : #'as yet unclassified',			#sourceCode : 'printOn: aStream\raStream nextPutAll: \'une Pile, de taille: \'.\rcapacite printOn: aStream.\raStream nextPutAll: \' contenant: \'.\rindex printOn: aStream.\raStream nextPutAll: \' objets : (\'.\rcontenu do: [ :each | each printOn: aStream. aStream space ].\raStream nextPut: $).\raStream nextPut: $..',			#stamp : 'ThomasDiGiovanni 9/20/2019 10:10',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-20T10:13:56.492121+02:00' ],		#prior : OmReference [ '16' ],		#self : OmReference [ '17' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pile,				#isMetaSide : false			},			#name : #'printOn:',			#protocol : #initialization,			#sourceCode : 'printOn: aStream\raStream nextPutAll: \'une Pile, de taille: \'.\rcapacite printOn: aStream.\raStream nextPutAll: \' contenant: \'.\rindex printOn: aStream.\raStream nextPutAll: \' objets : (\'.\rcontenu do: [ :each | each printOn: aStream. aStream space ].\raStream nextPut: $).\raStream nextPut: $..',			#stamp : 'ThomasDiGiovanni 9/20/2019 10:10',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-20T10:14:27.867683+02:00' ],		#prior : OmReference [ '17' ],		#self : OmReference [ '18' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pile,				#isMetaSide : false			},			#name : #'printOn:',			#protocol : #'as yet unclassified',			#sourceCode : 'printOn: aStream\raStream nextPutAll: \'une Pile, de taille: \'.\rcapacite printOn: aStream.\raStream nextPutAll: \' contenant: \'.\rindex printOn: aStream.\raStream nextPutAll: \' objets : (\'.\rcontenu do: [ :each | each printOn: aStream. aStream space ].\raStream nextPut: $).\raStream nextPut: $.',			#stamp : 'ThomasDiGiovanni 9/20/2019 10:14',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-20T10:14:27.891002+02:00' ],		#prior : OmReference [ '18' ],		#self : OmReference [ '19' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pile,				#isMetaSide : false			},			#name : #'printOn:',			#protocol : #'as yet unclassified',			#sourceCode : 'printOn: aStream\raStream nextPutAll: \'une Pile, de taille: \'.\rcapacite printOn: aStream.\raStream nextPutAll: \' contenant: \'.\rindex printOn: aStream.\raStream nextPutAll: \' objets : (\'.\rcontenu do: [ :each | each printOn: aStream. aStream space ].\raStream nextPut: $).\raStream nextPut: $.',			#stamp : 'ThomasDiGiovanni 9/20/2019 10:14',			#package : #Metaprogrammation		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pile,				#isMetaSide : false			},			#name : #'printOn:',			#protocol : #printing,			#sourceCode : 'printOn: aStream\raStream nextPutAll: \'une Pile, de taille: \'.\rcapacite printOn: aStream.\raStream nextPutAll: \' contenant: \'.\rindex printOn: aStream.\raStream nextPutAll: \' objets : (\'.\rcontenu do: [ :each | each printOn: aStream. aStream space ].\raStream nextPut: $).\raStream nextPut: $.',			#stamp : 'ThomasDiGiovanni 9/20/2019 10:14',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-20T10:14:55.839796+02:00' ],		#prior : OmReference [ '19' ],		#self : OmReference [ '20' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pile,				#isMetaSide : false			},			#name : #isEmpty,			#protocol : #'as yet unclassified',			#sourceCode : 'isEmpty\r',			#stamp : 'ThomasDiGiovanni 9/20/2019 10:14',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-20T10:14:55.856176+02:00' ],		#prior : OmReference [ '20' ],		#self : OmReference [ '21' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pile,				#isMetaSide : false			},			#name : #isEmpty,			#protocol : #'as yet unclassified',			#sourceCode : 'isEmpty\r',			#stamp : 'ThomasDiGiovanni 9/20/2019 10:14',			#package : #Metaprogrammation		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pile,				#isMetaSide : false			},			#name : #isEmpty,			#protocol : #testing,			#sourceCode : 'isEmpty\r',			#stamp : 'ThomasDiGiovanni 9/20/2019 10:14',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-20T10:15:33.57962+02:00' ],		#prior : OmReference [ '21' ],		#self : OmReference [ '22' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pile,				#isMetaSide : false			},			#name : #isEmpty,			#protocol : #testing,			#sourceCode : 'isEmpty\r',			#stamp : 'ThomasDiGiovanni 9/20/2019 10:14',			#package : #Metaprogrammation		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pile,				#isMetaSide : false			},			#name : #isEmpty,			#protocol : #testing,			#sourceCode : 'isEmpty\r\r\t^(contenu = 0)',			#stamp : 'ThomasDiGiovanni 9/20/2019 10:15',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-20T10:16:15.541712+02:00' ],		#prior : OmReference [ '22' ],		#self : OmReference [ '23' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pile,				#isMetaSide : false			},			#name : #isFull,			#protocol : #testing,			#sourceCode : 'isFull\r\t^ contenu = capacite',			#stamp : 'ThomasDiGiovanni 9/20/2019 10:16',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-20T10:16:48.394503+02:00' ],		#prior : OmReference [ '23' ],		#self : OmReference [ '24' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#traitCompositionSource : '{}',				#superclassName : 'Object',				#definitionSource : 'Object subclass: #Pile\r\tinstanceVariableNames: \'contenu index capacite\'\r\tclassVariableNames: \'tailleDefaut\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Metaprogrammation\''			},			#name : #Pile,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Pile,						#isMetaSide : false					},					#name : #contenu,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Pile,						#isMetaSide : false					},					#name : #index,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Pile,						#isMetaSide : false					},					#name : #capacite,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'Pile class\r\tinstanceVariableNames: \'\''				},				#name : #'Pile class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Pile,					#isMetaSide : false				},				#parent : @7,				#content : 'Implémentation d\'une pile',				#stamp : 'ThomasDiGiovanni 9/20/2019 10:16'			},			#classVariables : OrderedCollection [				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #Pile,						#isMetaSide : false					},					#name : #tailleDefaut,					#parent : @7				}			],			#category : #Metaprogrammation,			#package : #Metaprogrammation,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'Implémentation d\'une pile',		#newStamp : 'ThomasDiGiovanni 9/20/2019 10:16'	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-20T10:18:19.542606+02:00' ],		#prior : OmReference [ '24' ],		#self : OmReference [ '25' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pile,				#isMetaSide : false			},			#name : #'push:',			#protocol : #'as yet unclassified',			#sourceCode : 'push: object\r\tcontenu := object',			#stamp : 'ThomasDiGiovanni 9/20/2019 10:18',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-20T10:18:19.584115+02:00' ],		#prior : OmReference [ '25' ],		#self : OmReference [ '26' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pile,				#isMetaSide : false			},			#name : #'push:',			#protocol : #'as yet unclassified',			#sourceCode : 'push: object\r\tcontenu := object',			#stamp : 'ThomasDiGiovanni 9/20/2019 10:18',			#package : #Metaprogrammation		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pile,				#isMetaSide : false			},			#name : #'push:',			#protocol : #adding,			#sourceCode : 'push: object\r\tcontenu := object',			#stamp : 'ThomasDiGiovanni 9/20/2019 10:18',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-20T10:18:26.519926+02:00' ],		#prior : OmReference [ '26' ],		#self : OmReference [ '27' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pile,				#isMetaSide : false			},			#name : #isFull,			#protocol : #testing,			#sourceCode : 'isFull\r\t^ contenu = capacite',			#stamp : 'ThomasDiGiovanni 9/20/2019 10:16',			#package : #Metaprogrammation		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pile,				#isMetaSide : false			},			#name : #isFull,			#protocol : #testing,			#sourceCode : 'isFull\r\t^ index = capacite',			#stamp : 'ThomasDiGiovanni 9/20/2019 10:18',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-20T10:18:43.814526+02:00' ],		#prior : OmReference [ '27' ],		#self : OmReference [ '28' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pile,				#isMetaSide : false			},			#name : #isEmpty,			#protocol : #testing,			#sourceCode : 'isEmpty\r\r\t^(contenu = 0)',			#stamp : 'ThomasDiGiovanni 9/20/2019 10:15',			#package : #Metaprogrammation		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pile,				#isMetaSide : false			},			#name : #isEmpty,			#protocol : #testing,			#sourceCode : 'isEmpty\r\t^ index = 0',			#stamp : 'ThomasDiGiovanni 9/20/2019 10:18',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-20T10:19:48.705618+02:00' ],		#prior : OmReference [ '28' ],		#self : OmReference [ '29' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pile,				#isMetaSide : false			},			#name : #'push:',			#protocol : #adding,			#sourceCode : 'push: object\r\tcontenu := object',			#stamp : 'ThomasDiGiovanni 9/20/2019 10:18',			#package : #Metaprogrammation		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pile,				#isMetaSide : false			},			#name : #'push:',			#protocol : #adding,			#sourceCode : 'push: object\r\tself isFull\r\tifTrue: [ ^\'Error: pile is full\' ] ifFalse: [ contenu := object ]\r\t',			#stamp : 'ThomasDiGiovanni 9/20/2019 10:19',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-20T10:20:27.906987+02:00' ],		#prior : OmReference [ '29' ],		#self : OmReference [ '30' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pile,				#isMetaSide : false			},			#name : #'push:',			#protocol : #adding,			#sourceCode : 'push: object\r\tself isFull\r\tifTrue: [ ^\'Error: pile is full\' ] ifFalse: [ contenu := object ]\r\t',			#stamp : 'ThomasDiGiovanni 9/20/2019 10:19',			#package : #Metaprogrammation		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pile,				#isMetaSide : false			},			#name : #'push:',			#protocol : #adding,			#sourceCode : 'push: object\r\tself isFull\r\t\tifTrue: [ ^ \'Error: pile is full\' ]\r\t\tifFalse: [ contenu push: object ]',			#stamp : 'ThomasDiGiovanni 9/20/2019 10:20',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-20T10:20:45.445629+02:00' ],		#prior : OmReference [ '30' ],		#self : OmReference [ '31' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pile,				#isMetaSide : false			},			#name : #'push:',			#protocol : #adding,			#sourceCode : 'push: object\r\tself isFull\r\t\tifTrue: [ ^ \'Error: pile is full\' ]\r\t\tifFalse: [ contenu push: object ]',			#stamp : 'ThomasDiGiovanni 9/20/2019 10:20',			#package : #Metaprogrammation		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pile,				#isMetaSide : false			},			#name : #'push:',			#protocol : #adding,			#sourceCode : 'push: object\r\tself isFull\r\t\tifTrue: [ ^ \'Error: pile is full\' ]\r\t\tifFalse: [ contenu add: object ]',			#stamp : 'ThomasDiGiovanni 9/20/2019 10:20',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-20T10:21:00.835977+02:00' ],		#prior : OmReference [ '31' ],		#self : OmReference [ '32' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pile,				#isMetaSide : false			},			#name : #pop,			#protocol : #'as yet unclassified',			#sourceCode : 'pop \r',			#stamp : 'ThomasDiGiovanni 9/20/2019 10:21',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-20T10:21:00.876501+02:00' ],		#prior : OmReference [ '32' ],		#self : OmReference [ '33' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pile,				#isMetaSide : false			},			#name : #pop,			#protocol : #'as yet unclassified',			#sourceCode : 'pop \r',			#stamp : 'ThomasDiGiovanni 9/20/2019 10:21',			#package : #Metaprogrammation		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pile,				#isMetaSide : false			},			#name : #pop,			#protocol : #removing,			#sourceCode : 'pop \r',			#stamp : 'ThomasDiGiovanni 9/20/2019 10:21',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-20T10:21:50.555924+02:00' ],		#prior : OmReference [ '33' ],		#self : OmReference [ '34' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pile,				#isMetaSide : false			},			#name : #pop,			#protocol : #removing,			#sourceCode : 'pop \r',			#stamp : 'ThomasDiGiovanni 9/20/2019 10:21',			#package : #Metaprogrammation		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pile,				#isMetaSide : false			},			#name : #pop,			#protocol : #removing,			#sourceCode : 'pop\r\tcontenu at: index',			#stamp : 'ThomasDiGiovanni 9/20/2019 10:21',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-20T10:27:44.39817+02:00' ],		#prior : OmReference [ '34' ],		#self : OmReference [ '35' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pile,				#isMetaSide : false			},			#name : #'push:',			#protocol : #adding,			#sourceCode : 'push: object\r\tself isFull\r\t\tifTrue: [ ^ \'Error: pile is full\' ]\r\t\tifFalse: [ contenu add: object ]',			#stamp : 'ThomasDiGiovanni 9/20/2019 10:20',			#package : #Metaprogrammation		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pile,				#isMetaSide : false			},			#name : #'push:',			#protocol : #adding,			#sourceCode : 'push: object\r\tself isFull\r\t\tifTrue: [ ^ \'Error: pile is full\' ]\r\t\tifFalse: [ contenu add: object.\r\t\t\tindex := index + 1 ]',			#stamp : 'ThomasDiGiovanni 9/20/2019 10:27',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-20T10:29:29.852226+02:00' ],		#prior : OmReference [ '35' ],		#self : OmReference [ '36' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pile,				#isMetaSide : false			},			#name : #pop,			#protocol : #removing,			#sourceCode : 'pop\r\tcontenu at: index',			#stamp : 'ThomasDiGiovanni 9/20/2019 10:21',			#package : #Metaprogrammation		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pile,				#isMetaSide : false			},			#name : #pop,			#protocol : #removing,			#sourceCode : 'pop\r\tcontenu at: index.\r\t',			#stamp : 'ThomasDiGiovanni 9/20/2019 10:29',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-20T10:30:10.54635+02:00' ],		#prior : OmReference [ '36' ],		#self : OmReference [ '37' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pile,				#isMetaSide : false			},			#name : #pop,			#protocol : #removing,			#sourceCode : 'pop\r\tcontenu at: index.\r\t',			#stamp : 'ThomasDiGiovanni 9/20/2019 10:29',			#package : #Metaprogrammation		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pile,				#isMetaSide : false			},			#name : #pop,			#protocol : #removing,			#sourceCode : 'pop\r\tself isEmpty ifTrue: [  ] ifFalse: [  ]',			#stamp : 'ThomasDiGiovanni 9/20/2019 10:30',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-20T10:30:32.514931+02:00' ],		#prior : OmReference [ '37' ],		#self : OmReference [ '38' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pile,				#isMetaSide : false			},			#name : #pop,			#protocol : #removing,			#sourceCode : 'pop\r\tself isEmpty ifTrue: [  ] ifFalse: [  ]',			#stamp : 'ThomasDiGiovanni 9/20/2019 10:30',			#package : #Metaprogrammation		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pile,				#isMetaSide : false			},			#name : #pop,			#protocol : #removing,			#sourceCode : 'pop\r\tself isEmpty\r\t\tifTrue: [ ^\'Error: pile is empty\' ]\r\t\tifFalse: [  ]',			#stamp : 'ThomasDiGiovanni 9/20/2019 10:30',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-20T10:31:14.000518+02:00' ],		#prior : OmReference [ '38' ],		#self : OmReference [ '39' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pile,				#isMetaSide : false			},			#name : #pop,			#protocol : #removing,			#sourceCode : 'pop\r\tself isEmpty\r\t\tifTrue: [ ^\'Error: pile is empty\' ]\r\t\tifFalse: [  ]',			#stamp : 'ThomasDiGiovanni 9/20/2019 10:30',			#package : #Metaprogrammation		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pile,				#isMetaSide : false			},			#name : #pop,			#protocol : #removing,			#sourceCode : 'pop\r\tself isEmpty\r\t\tifTrue: [ ^ \'Error: pile is empty\' ]\r\t\tifFalse: [ contenu removeAtIndex: index ]',			#stamp : 'ThomasDiGiovanni 9/20/2019 10:31',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-20T10:32:25.479806+02:00' ],		#prior : OmReference [ '39' ],		#self : OmReference [ '40' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pile,				#isMetaSide : false			},			#name : #pop,			#protocol : #removing,			#sourceCode : 'pop\r\tself isEmpty\r\t\tifTrue: [ ^ \'Error: pile is empty\' ]\r\t\tifFalse: [ contenu removeAtIndex: index ]',			#stamp : 'ThomasDiGiovanni 9/20/2019 10:31',			#package : #Metaprogrammation		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pile,				#isMetaSide : false			},			#name : #pop,			#protocol : #removing,			#sourceCode : 'pop\r\tself isEmpty\r\t\tifTrue: [ ^ \'Error: pile is empty\' ]\r\t\tifFalse: [ contenu remove: index ]',			#stamp : 'ThomasDiGiovanni 9/20/2019 10:32',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-20T10:32:53.380799+02:00' ],		#prior : OmReference [ '40' ],		#self : OmReference [ '41' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pile,				#isMetaSide : false			},			#name : #pop,			#protocol : #removing,			#sourceCode : 'pop\r\tself isEmpty\r\t\tifTrue: [ ^ \'Error: pile is empty\' ]\r\t\tifFalse: [ contenu remove: index ]',			#stamp : 'ThomasDiGiovanni 9/20/2019 10:32',			#package : #Metaprogrammation		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pile,				#isMetaSide : false			},			#name : #pop,			#protocol : #removing,			#sourceCode : 'pop\r\tself isEmpty\r\t\tifTrue: [ ^ \'Error: pile is empty\' ]\r\t\tifFalse: [ contenu remove: index.\r\t\t\tindex := index - 1 ]',			#stamp : 'ThomasDiGiovanni 9/20/2019 10:32',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-20T10:33:08.457802+02:00' ],		#prior : OmReference [ '41' ],		#self : OmReference [ '42' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pile,				#isMetaSide : false			},			#name : #top,			#protocol : #'as yet unclassified',			#sourceCode : 'top \r',			#stamp : 'ThomasDiGiovanni 9/20/2019 10:33',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-20T10:33:08.498265+02:00' ],		#prior : OmReference [ '42' ],		#self : OmReference [ '43' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pile,				#isMetaSide : false			},			#name : #top,			#protocol : #'as yet unclassified',			#sourceCode : 'top \r',			#stamp : 'ThomasDiGiovanni 9/20/2019 10:33',			#package : #Metaprogrammation		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pile,				#isMetaSide : false			},			#name : #top,			#protocol : #accessing,			#sourceCode : 'top \r',			#stamp : 'ThomasDiGiovanni 9/20/2019 10:33',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-20T10:33:27.661847+02:00' ],		#prior : OmReference [ '43' ],		#self : OmReference [ '44' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pile,				#isMetaSide : false			},			#name : #top,			#protocol : #accessing,			#sourceCode : 'top \r',			#stamp : 'ThomasDiGiovanni 9/20/2019 10:33',			#package : #Metaprogrammation		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pile,				#isMetaSide : false			},			#name : #top,			#protocol : #accessing,			#sourceCode : 'top\r^contenu at: index\t',			#stamp : 'ThomasDiGiovanni 9/20/2019 10:33',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-20T10:33:35.712701+02:00' ],		#prior : OmReference [ '44' ],		#self : OmReference [ '45' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pile,				#isMetaSide : false			},			#name : #top,			#protocol : #accessing,			#sourceCode : 'top\r^contenu at: index\t',			#stamp : 'ThomasDiGiovanni 9/20/2019 10:33',			#package : #Metaprogrammation		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pile,				#isMetaSide : false			},			#name : #top,			#protocol : #accessing,			#sourceCode : 'top\r\t^ contenu at: index - 1',			#stamp : 'ThomasDiGiovanni 9/20/2019 10:33',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-20T10:35:35.361254+02:00' ],		#prior : OmReference [ '45' ],		#self : OmReference [ '46' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pile,				#isMetaSide : false			},			#name : #pop,			#protocol : #removing,			#sourceCode : 'pop\r\tself isEmpty\r\t\tifTrue: [ ^ \'Error: pile is empty\' ]\r\t\tifFalse: [ contenu remove: index.\r\t\t\tindex := index - 1 ]',			#stamp : 'ThomasDiGiovanni 9/20/2019 10:32',			#package : #Metaprogrammation		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pile,				#isMetaSide : false			},			#name : #pop,			#protocol : #removing,			#sourceCode : 'pop\r\tself isEmpty\r\t\tifTrue: [ ^ \'Error: pile is empty\' ]\r\t\tifFalse: [ index := index - 1 ]',			#stamp : 'ThomasDiGiovanni 9/20/2019 10:35',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-20T10:37:23.46913+02:00' ],		#prior : OmReference [ '46' ],		#self : OmReference [ '47' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pile,				#isMetaSide : false			},			#name : #pop,			#protocol : #removing,			#sourceCode : 'pop\r\tself isEmpty\r\t\tifTrue: [ ^ \'Error: pile is empty\' ]\r\t\tifFalse: [ index := index - 1 ]',			#stamp : 'ThomasDiGiovanni 9/20/2019 10:35',			#package : #Metaprogrammation		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pile,				#isMetaSide : false			},			#name : #pop,			#protocol : #removing,			#sourceCode : 'pop\r\tself isEmpty\r\t\tifTrue: [ self error: \'pile is empty\' ]\r\t\tifFalse: [ index := index - 1 ]',			#stamp : 'ThomasDiGiovanni 9/20/2019 10:37',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-20T10:37:36.533554+02:00' ],		#prior : OmReference [ '47' ],		#self : OmReference [ '48' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pile,				#isMetaSide : false			},			#name : #'push:',			#protocol : #adding,			#sourceCode : 'push: object\r\tself isFull\r\t\tifTrue: [ ^ \'Error: pile is full\' ]\r\t\tifFalse: [ contenu add: object.\r\t\t\tindex := index + 1 ]',			#stamp : 'ThomasDiGiovanni 9/20/2019 10:27',			#package : #Metaprogrammation		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pile,				#isMetaSide : false			},			#name : #'push:',			#protocol : #adding,			#sourceCode : 'push: object\r\tself isFull\r\t\tifTrue: [ self error: \'pile is full\' ]\r\t\tifFalse: [ contenu add: object.\r\t\t\tindex := index + 1 ]',			#stamp : 'ThomasDiGiovanni 9/20/2019 10:37',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-20T10:37:56.49819+02:00' ],		#prior : OmReference [ '48' ],		#self : OmReference [ '49' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pile,				#isMetaSide : false			},			#name : #'printOn:',			#protocol : #printing,			#sourceCode : 'printOn: aStream\raStream nextPutAll: \'une Pile, de taille: \'.\rcapacite printOn: aStream.\raStream nextPutAll: \' contenant: \'.\rindex printOn: aStream.\raStream nextPutAll: \' objets : (\'.\rcontenu do: [ :each | each printOn: aStream. aStream space ].\raStream nextPut: $).\raStream nextPut: $.',			#stamp : 'ThomasDiGiovanni 9/20/2019 10:14',			#package : #Metaprogrammation		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pile,				#isMetaSide : false			},			#name : #'printOn:',			#protocol : #printing,			#sourceCode : 'printOn: aStream\r\taStream nextPutAll: \'Pile de taille : \'.\r\tcapacite printOn: aStream.\r\taStream nextPutAll: \' contenant : \'.\r\tindex printOn: aStream.\r\taStream nextPutAll: \' objets : (\'.\r\tcontenu\r\t\tdo: [ :each | \r\t\t\teach printOn: aStream.\r\t\t\taStream space ].\r\taStream nextPut: $).\r\taStream nextPut: $.',			#stamp : 'ThomasDiGiovanni 9/20/2019 10:37',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-20T10:40:53.273014+02:00' ],		#prior : OmReference [ '49' ],		#self : OmReference [ '50' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pile,				#isMetaSide : false			},			#name : #'push:',			#protocol : #adding,			#sourceCode : 'push: object\r\tself isFull\r\t\tifTrue: [ self error: \'pile is full\' ]\r\t\tifFalse: [ contenu add: object.\r\t\t\tindex := index + 1 ]',			#stamp : 'ThomasDiGiovanni 9/20/2019 10:37',			#package : #Metaprogrammation		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pile,				#isMetaSide : false			},			#name : #'push:',			#protocol : #adding,			#sourceCode : 'push: object\r\tself isFull\r\t\tifTrue: [ self error: \'pile is full\' ]\r\t\tifFalse: [ contenu at: index put: object.\r\t\t\tindex := index + 1 ]',			#stamp : 'ThomasDiGiovanni 9/20/2019 10:40',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-20T10:44:24.029202+02:00' ],		#prior : OmReference [ '50' ],		#self : OmReference [ '51' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pile,				#isMetaSide : false			},			#name : #grow,			#protocol : #'as yet unclassified',			#sourceCode : 'grow \r',			#stamp : 'ThomasDiGiovanni 9/20/2019 10:44',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-20T10:44:24.068362+02:00' ],		#prior : OmReference [ '51' ],		#self : OmReference [ '52' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pile,				#isMetaSide : false			},			#name : #grow,			#protocol : #'as yet unclassified',			#sourceCode : 'grow \r',			#stamp : 'ThomasDiGiovanni 9/20/2019 10:44',			#package : #Metaprogrammation		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pile,				#isMetaSide : false			},			#name : #grow,			#protocol : #private,			#sourceCode : 'grow \r',			#stamp : 'ThomasDiGiovanni 9/20/2019 10:44',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-20T10:44:41.720059+02:00' ],		#prior : OmReference [ '52' ],		#self : OmReference [ '53' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pile,				#isMetaSide : false			},			#name : #grow,			#protocol : #private,			#sourceCode : 'grow \r',			#stamp : 'ThomasDiGiovanni 9/20/2019 10:44',			#package : #Metaprogrammation		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pile,				#isMetaSide : false			},			#name : #grow,			#protocol : #private,			#sourceCode : 'grow\r\tcapacite := capacite * 2',			#stamp : 'ThomasDiGiovanni 9/20/2019 10:44',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-20T10:46:48.722133+02:00' ],		#prior : OmReference [ '53' ],		#self : OmReference [ '54' ]	},	#content : EpClassModification {		#oldClass : RGClassDefinition {			#annotations : IdentityDictionary {				#traitCompositionSource : '{}',				#superclassName : 'Object',				#definitionSource : 'Object subclass: #Pile\r\tinstanceVariableNames: \'contenu index capacite\'\r\tclassVariableNames: \'tailleDefaut\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Metaprogrammation\''			},			#name : #Pile,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Pile,						#isMetaSide : false					},					#name : #contenu,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Pile,						#isMetaSide : false					},					#name : #index,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Pile,						#isMetaSide : false					},					#name : #capacite,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'Pile class\r\tinstanceVariableNames: \'\''				},				#name : #'Pile class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Pile,					#isMetaSide : false				},				#parent : @7,				#content : 'Implémentation d\'une pile',				#stamp : 'ThomasDiGiovanni 9/20/2019 10:16'			},			#classVariables : OrderedCollection [				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #Pile,						#isMetaSide : false					},					#name : #tailleDefaut,					#parent : @7				}			],			#category : #Metaprogrammation,			#package : #Metaprogrammation,			#sharedPools : OrderedCollection [ ]		},		#newClass : RGClassDefinition {			#annotations : IdentityDictionary {				#traitCompositionSource : '{}',				#superclassName : 'Object',				#definitionSource : 'Object subclass: #Pile\r\tinstanceVariableNames: \'contenu index capacite\'\r\tclassVariableNames: \'TailleDefaut\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Metaprogrammation\''			},			#name : #Pile,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Pile,						#isMetaSide : false					},					#name : #contenu,					#parent : @29				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Pile,						#isMetaSide : false					},					#name : #index,					#parent : @29				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Pile,						#isMetaSide : false					},					#name : #capacite,					#parent : @29				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'Pile class\r\tinstanceVariableNames: \'\''				},				#name : #'Pile class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @29			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Pile,					#isMetaSide : false				},				#parent : @29,				#content : 'Implémentation d\'une pile',				#stamp : 'ThomasDiGiovanni 9/20/2019 10:16'			},			#classVariables : OrderedCollection [				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #Pile,						#isMetaSide : false					},					#name : #TailleDefaut,					#parent : @29				}			],			#category : #Metaprogrammation,			#package : #Metaprogrammation,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-20T10:47:12.503318+02:00' ],		#prior : OmReference [ '54' ],		#self : OmReference [ '55' ]	},	#content : EpClassModification {		#oldClass : RGClassDefinition {			#annotations : IdentityDictionary {				#traitCompositionSource : '{}',				#superclassName : 'Object',				#definitionSource : 'Object subclass: #Pile\r\tinstanceVariableNames: \'contenu index capacite\'\r\tclassVariableNames: \'TailleDefaut\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Metaprogrammation\''			},			#name : #Pile,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Pile,						#isMetaSide : false					},					#name : #contenu,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Pile,						#isMetaSide : false					},					#name : #index,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Pile,						#isMetaSide : false					},					#name : #capacite,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'Pile class\r\tinstanceVariableNames: \'\''				},				#name : #'Pile class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Pile,					#isMetaSide : false				},				#parent : @7,				#content : 'Implémentation d\'une pile',				#stamp : 'ThomasDiGiovanni 9/20/2019 10:16'			},			#classVariables : OrderedCollection [				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #Pile,						#isMetaSide : false					},					#name : #TailleDefaut,					#parent : @7				}			],			#category : #Metaprogrammation,			#package : #Metaprogrammation,			#sharedPools : OrderedCollection [ ]		},		#newClass : RGClassDefinition {			#annotations : IdentityDictionary {				#traitCompositionSource : '{}',				#superclassName : 'Object',				#definitionSource : 'Object subclass: #Pile\r\tinstanceVariableNames: \'contenu index capacite\'\r\tclassVariableNames: \'DefaultSize\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Metaprogrammation\''			},			#name : #Pile,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Pile,						#isMetaSide : false					},					#name : #contenu,					#parent : @29				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Pile,						#isMetaSide : false					},					#name : #index,					#parent : @29				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Pile,						#isMetaSide : false					},					#name : #capacite,					#parent : @29				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'Pile class\r\tinstanceVariableNames: \'\''				},				#name : #'Pile class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @29			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Pile,					#isMetaSide : false				},				#parent : @29,				#content : 'Implémentation d\'une pile',				#stamp : 'ThomasDiGiovanni 9/20/2019 10:16'			},			#classVariables : OrderedCollection [				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #Pile,						#isMetaSide : false					},					#name : #DefaultSize,					#parent : @29				}			],			#category : #Metaprogrammation,			#package : #Metaprogrammation,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-20T10:51:17.541458+02:00' ],		#prior : OmReference [ '55' ],		#self : OmReference [ '56' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#traitCompositionSource : '{}',				#superclassName : 'Object',				#definitionSource : 'Object subclass: #TestPile\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Metaprogrammation\''			},			#name : #TestPile,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'TestPile class\r\tinstanceVariableNames: \'\''				},				#name : #'TestPile class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #TestPile,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Metaprogrammation,			#package : #Metaprogrammation,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-20T10:52:25.240937+02:00' ],		#prior : OmReference [ '56' ],		#self : OmReference [ '57' ]	},	#content : EpClassModification {		#oldClass : RGClassDefinition {			#annotations : IdentityDictionary {				#traitCompositionSource : '{}',				#superclassName : 'Object',				#definitionSource : 'Object subclass: #TestPile\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Metaprogrammation\''			},			#name : #TestPile,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'TestPile class\r\tinstanceVariableNames: \'\''				},				#name : #'TestPile class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #TestPile,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Metaprogrammation,			#package : #Metaprogrammation,			#sharedPools : OrderedCollection [ ]		},		#newClass : RGClassDefinition {			#annotations : IdentityDictionary {				#traitCompositionSource : '{}',				#superclassName : 'TestCase',				#definitionSource : 'TestCase subclass: #TestPile\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Metaprogrammation\''			},			#name : #TestPile,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'TestPile class\r\tinstanceVariableNames: \'\''				},				#name : #'TestPile class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @21			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #TestPile,					#isMetaSide : false				},				#parent : @21,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Metaprogrammation,			#package : #Metaprogrammation,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-20T10:53:47.467219+02:00' ],		#prior : OmReference [ '57' ],		#self : OmReference [ '58' ]	},	#content : EpClassModification {		#oldClass : RGClassDefinition {			#annotations : IdentityDictionary {				#traitCompositionSource : '{}',				#superclassName : 'TestCase',				#definitionSource : 'TestCase subclass: #TestPile\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Metaprogrammation\''			},			#name : #TestPile,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'TestPile class\r\tinstanceVariableNames: \'\''				},				#name : #'TestPile class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #TestPile,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Metaprogrammation,			#package : #Metaprogrammation,			#sharedPools : OrderedCollection [ ]		},		#newClass : RGClassDefinition {			#annotations : IdentityDictionary {				#traitCompositionSource : '{}',				#superclassName : 'TestCase',				#definitionSource : 'TestCase subclass: #TestPile\r\tinstanceVariableNames: \'empty full\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Metaprogrammation\''			},			#name : #TestPile,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #TestPile,						#isMetaSide : false					},					#name : #empty,					#parent : @21				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #TestPile,						#isMetaSide : false					},					#name : #full,					#parent : @21				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'TestPile class\r\tinstanceVariableNames: \'\''				},				#name : #'TestPile class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @21			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #TestPile,					#isMetaSide : false				},				#parent : @21,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Metaprogrammation,			#package : #Metaprogrammation,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-20T10:54:21.832496+02:00' ],		#prior : OmReference [ '58' ],		#self : OmReference [ '59' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TestPile,				#isMetaSide : false			},			#name : #setUp,			#protocol : #running,			#sourceCode : 'setUp\r\tempty := Pile new initialize: 0\r\t',			#stamp : 'ThomasDiGiovanni 9/20/2019 10:54',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-20T10:54:56.689925+02:00' ],		#prior : OmReference [ '59' ],		#self : OmReference [ '60' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TestPile,				#isMetaSide : false			},			#name : #setUp,			#protocol : #running,			#sourceCode : 'setUp\r\tempty := Pile new initialize: 0\r\t',			#stamp : 'ThomasDiGiovanni 9/20/2019 10:54',			#package : #Metaprogrammation		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TestPile,				#isMetaSide : false			},			#name : #setUp,			#protocol : #running,			#sourceCode : 'setUp\r\tempty := Pile new initialize: 3.\r\tfull := Pile new initialize: 1.',			#stamp : 'ThomasDiGiovanni 9/20/2019 10:54',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-20T10:55:22.361804+02:00' ],		#prior : OmReference [ '60' ],		#self : OmReference [ '61' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TestPile,				#isMetaSide : false			},			#name : #setUp,			#protocol : #running,			#sourceCode : 'setUp\r\tempty := Pile new initialize: 3.\r\tfull := Pile new initialize: 1.',			#stamp : 'ThomasDiGiovanni 9/20/2019 10:54',			#package : #Metaprogrammation		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TestPile,				#isMetaSide : false			},			#name : #setUp,			#protocol : #running,			#sourceCode : 'setUp\r\tempty := Pile new initialize: 3.\r\tfull := (Pile new initialize: 1) push: \'Test\'.',			#stamp : 'ThomasDiGiovanni 9/20/2019 10:55',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-20T10:56:26.261351+02:00' ],		#prior : OmReference [ '61' ],		#self : OmReference [ '62' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TestPile,				#isMetaSide : false			},			#name : #setUp,			#protocol : #running,			#sourceCode : 'setUp\r\tempty := Pile new initialize: 3.\r\tfull := (Pile new initialize: 1) push: \'Test\'.',			#stamp : 'ThomasDiGiovanni 9/20/2019 10:55',			#package : #Metaprogrammation		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TestPile,				#isMetaSide : false			},			#name : #setUp,			#protocol : #running,			#sourceCode : 'setUp\rsuper setUp.\r\tempty := Pile new initialize: 3.\r\tfull := (Pile new initialize: 1) push: \'Test\'',			#stamp : 'ThomasDiGiovanni 9/20/2019 10:56',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-20T10:56:35.184815+02:00' ],		#prior : OmReference [ '62' ],		#self : OmReference [ '63' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#traitCompositionSource : '{}',				#superclassName : 'TestCase',				#definitionSource : 'TestCase subclass: #PileTest\r\tinstanceVariableNames: \'empty full\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Metaprogrammation\''			},			#name : #PileTest,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PileTest,						#isMetaSide : false					},					#name : #empty,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PileTest,						#isMetaSide : false					},					#name : #full,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'PileTest class\r\tinstanceVariableNames: \'\''				},				#name : #'PileTest class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PileTest,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Metaprogrammation,			#package : #Metaprogrammation,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-20T10:56:44.492997+02:00' ],		#prior : OmReference [ '63' ],		#self : OmReference [ '64' ]	},	#content : EpGenericRefactoring {		#storeString : '(RBRemoveClassRefactoring classNames: #(#PileTest ))'	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#prior : OmReference [ '64' ],		#self : OmReference [ '65' ],		#time : DateAndTime [ '2019-09-20T10:56:44.556617+02:00' ],		#trigger : @3	},	#content : EpClassRemoval {		#classRemoved : RGClassDefinition {			#annotations : IdentityDictionary {				#traitCompositionSource : '{}',				#superclassName : 'TestCase',				#definitionSource : 'TestCase subclass: #PileTest\r\tinstanceVariableNames: \'empty full\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: #Metaprogrammation'			},			#name : #PileTest,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #AnObsoletePileTest,						#isMetaSide : false					},					#name : #empty,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #AnObsoletePileTest,						#isMetaSide : false					},					#name : #full,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'PileTest class\r\tinstanceVariableNames: \'\''				},				#name : #'AnObsoletePileTest class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #AnObsoletePileTest,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Metaprogrammation,			#package : #Metaprogrammation,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-20T10:56:53.060135+02:00' ],		#prior : OmReference [ '65' ],		#self : OmReference [ '66' ]	},	#content : EpBehaviorNameChange {		#oldName : #TestPile,		#newName : #PileTest,		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#traitCompositionSource : '{}',				#superclassName : 'TestCase',				#definitionSource : 'TestCase subclass: #PileTest\r\tinstanceVariableNames: \'empty full\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Metaprogrammation\''			},			#name : #PileTest,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PileTest,						#isMetaSide : false					},					#name : #empty,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PileTest,						#isMetaSide : false					},					#name : #full,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'PileTest class\r\tinstanceVariableNames: \'\''				},				#name : #'PileTest class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PileTest,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Metaprogrammation,			#package : #Metaprogrammation,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-20T10:57:48.940984+02:00' ],		#prior : OmReference [ '66' ],		#self : OmReference [ '67' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PileTest,				#isMetaSide : false			},			#name : #testInclude,			#protocol : #'as yet unclassified',			#sourceCode : 'testInclude',			#stamp : 'ThomasDiGiovanni 9/20/2019 10:57',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-20T10:57:48.958332+02:00' ],		#prior : OmReference [ '67' ],		#self : OmReference [ '68' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PileTest,				#isMetaSide : false			},			#name : #testInclude,			#protocol : #'as yet unclassified',			#sourceCode : 'testInclude',			#stamp : 'ThomasDiGiovanni 9/20/2019 10:57',			#package : #Metaprogrammation		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PileTest,				#isMetaSide : false			},			#name : #testInclude,			#protocol : #tests,			#sourceCode : 'testInclude',			#stamp : 'ThomasDiGiovanni 9/20/2019 10:57',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-20T10:58:03.857756+02:00' ],		#prior : OmReference [ '68' ],		#self : OmReference [ '69' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PileTest,				#isMetaSide : false			},			#name : #testOccurence,			#protocol : #tests,			#sourceCode : 'testOccurence\r\t',			#stamp : 'ThomasDiGiovanni 9/20/2019 10:58',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-20T10:58:15.76518+02:00' ],		#prior : OmReference [ '69' ],		#self : OmReference [ '70' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PileTest,				#isMetaSide : false			},			#name : #testRemove,			#protocol : #tests,			#sourceCode : 'testRemove\r\t',			#stamp : 'ThomasDiGiovanni 9/20/2019 10:58',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-20T10:59:15.160482+02:00' ],		#prior : OmReference [ '70' ],		#self : OmReference [ '71' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PileTest,				#isMetaSide : false			},			#name : #testInclude,			#protocol : #tests,			#sourceCode : 'testInclude',			#stamp : 'ThomasDiGiovanni 9/20/2019 10:57',			#package : #Metaprogrammation		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PileTest,				#isMetaSide : false			},			#name : #testInclude,			#protocol : #tests,			#sourceCode : 'testInclude\r\tself assert: (full includes: \'Test\')',			#stamp : 'ThomasDiGiovanni 9/20/2019 10:59',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-20T10:59:59.850968+02:00' ],		#prior : OmReference [ '71' ],		#self : OmReference [ '72' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PileTest,				#isMetaSide : false			},			#name : #testOccurence,			#protocol : #tests,			#sourceCode : 'testOccurence\r\t',			#stamp : 'ThomasDiGiovanni 9/20/2019 10:58',			#package : #Metaprogrammation		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PileTest,				#isMetaSide : false			},			#name : #testOccurence,			#protocol : #tests,			#sourceCode : 'testOccurence\r\t self assert: (empty occurrencesOf: \'Test\') = 0. \r    self assert: (full occurrencesOf: 5) = 1. \r    full add: 5. \r    self assert: (full occurrencesOf: 5) = 1',			#stamp : 'ThomasDiGiovanni 9/20/2019 10:59',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-20T11:00:17.398216+02:00' ],		#prior : OmReference [ '72' ],		#self : OmReference [ '73' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PileTest,				#isMetaSide : false			},			#name : #testOccurence,			#protocol : #tests,			#sourceCode : 'testOccurence\r\t self assert: (empty occurrencesOf: \'Test\') = 0. \r    self assert: (full occurrencesOf: 5) = 1. \r    full add: 5. \r    self assert: (full occurrencesOf: 5) = 1',			#stamp : 'ThomasDiGiovanni 9/20/2019 10:59',			#package : #Metaprogrammation		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PileTest,				#isMetaSide : false			},			#name : #testOccurence,			#protocol : #tests,			#sourceCode : 'testOccurence\r\tself assert: (empty occurrencesOf: \'Test\') equals: 0.\r\tself assert: (full occurrencesOf: 5) = 1.\r\tfull add: 5.\r\tself assert: (full occurrencesOf: 5) = 1',			#stamp : 'ThomasDiGiovanni 9/20/2019 11:00',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-20T11:00:21.322682+02:00' ],		#prior : OmReference [ '73' ],		#self : OmReference [ '74' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PileTest,				#isMetaSide : false			},			#name : #testOccurence,			#protocol : #tests,			#sourceCode : 'testOccurence\r\tself assert: (empty occurrencesOf: \'Test\') equals: 0.\r\tself assert: (full occurrencesOf: 5) = 1.\r\tfull add: 5.\r\tself assert: (full occurrencesOf: 5) = 1',			#stamp : 'ThomasDiGiovanni 9/20/2019 11:00',			#package : #Metaprogrammation		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PileTest,				#isMetaSide : false			},			#name : #testOccurence,			#protocol : #tests,			#sourceCode : 'testOccurence\r\tself assert: (empty occurrencesOf: \'Test\') equals: 0.\r\tself assert: (full occurrencesOf: 5) equals: 1.\r\tfull add: 5.\r\tself assert: (full occurrencesOf: 5) = 1',			#stamp : 'ThomasDiGiovanni 9/20/2019 11:00',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-20T11:00:25.46955+02:00' ],		#prior : OmReference [ '74' ],		#self : OmReference [ '75' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PileTest,				#isMetaSide : false			},			#name : #testOccurence,			#protocol : #tests,			#sourceCode : 'testOccurence\r\tself assert: (empty occurrencesOf: \'Test\') equals: 0.\r\tself assert: (full occurrencesOf: 5) equals: 1.\r\tfull add: 5.\r\tself assert: (full occurrencesOf: 5) = 1',			#stamp : 'ThomasDiGiovanni 9/20/2019 11:00',			#package : #Metaprogrammation		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PileTest,				#isMetaSide : false			},			#name : #testOccurence,			#protocol : #tests,			#sourceCode : 'testOccurence\r\tself assert: (empty occurrencesOf: \'Test\') equals: 0.\r\tself assert: (full occurrencesOf: 5) equals: 1.\r\tfull add: 5.\r\tself assert: (full occurrencesOf: 5) equals: 1',			#stamp : 'ThomasDiGiovanni 9/20/2019 11:00',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-20T11:01:06.355218+02:00' ],		#prior : OmReference [ '75' ],		#self : OmReference [ '76' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PileTest,				#isMetaSide : false			},			#name : #testOccurence,			#protocol : #tests,			#sourceCode : 'testOccurence\r\tself assert: (empty occurrencesOf: \'Test\') equals: 0.\r\tself assert: (full occurrencesOf: 5) equals: 1.\r\tfull add: 5.\r\tself assert: (full occurrencesOf: 5) equals: 1',			#stamp : 'ThomasDiGiovanni 9/20/2019 11:00',			#package : #Metaprogrammation		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PileTest,				#isMetaSide : false			},			#name : #testOccurence,			#protocol : #tests,			#sourceCode : 'testOccurence\r\tself assert: (empty occurrencesOf: \'Test\') equals: 0.\r\tself assert: (full occurrencesOf: 5) equals: 1.\r\tfull at: 0 put:  \'Pile\'.\r\tself assert: (full occurrencesOf: 5) equals: 1',			#stamp : 'ThomasDiGiovanni 9/20/2019 11:01',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-20T11:01:32.857674+02:00' ],		#prior : OmReference [ '76' ],		#self : OmReference [ '77' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PileTest,				#isMetaSide : false			},			#name : #testOccurence,			#protocol : #tests,			#sourceCode : 'testOccurence\r\tself assert: (empty occurrencesOf: \'Test\') equals: 0.\r\tself assert: (full occurrencesOf: 5) equals: 1.\r\tfull at: 0 put:  \'Pile\'.\r\tself assert: (full occurrencesOf: 5) equals: 1',			#stamp : 'ThomasDiGiovanni 9/20/2019 11:01',			#package : #Metaprogrammation		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PileTest,				#isMetaSide : false			},			#name : #testOccurence,			#protocol : #tests,			#sourceCode : 'testOccurence\r\tself assert: (empty occurrencesOf: \'Test\') equals: 0.\r\tself assert: (full occurrencesOf: \'Test\') equals: 1.\r\tfull at: 0 put: \'Pile\'.\r\tself assert: (full occurrencesOf: \'Pile\') equals: 1',			#stamp : 'ThomasDiGiovanni 9/20/2019 11:01',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-20T11:01:50.473192+02:00' ],		#prior : OmReference [ '77' ],		#self : OmReference [ '78' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PileTest,				#isMetaSide : false			},			#name : #testOccurence,			#protocol : #tests,			#sourceCode : 'testOccurence\r\tself assert: (empty occurrencesOf: \'Test\') equals: 0.\r\tself assert: (full occurrencesOf: \'Test\') equals: 1.\r\tfull at: 0 put: \'Pile\'.\r\tself assert: (full occurrencesOf: \'Pile\') equals: 1',			#stamp : 'ThomasDiGiovanni 9/20/2019 11:01',			#package : #Metaprogrammation		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PileTest,				#isMetaSide : false			},			#name : #testOccurence,			#protocol : #tests,			#sourceCode : 'testOccurence\r\tself assert: (empty occurrencesOf: \'Test\') equals: 0.\r\tself assert: (full occurrencesOf: \'Test\') equals: 1.\r\tfull at: 0 put: \'Pile\'.\r\tself assert: (full occurrencesOf: \'Pile\') equals: 1.\r\tself assert: (full occurrencesOf: \'Test\') equals: 0.',			#stamp : 'ThomasDiGiovanni 9/20/2019 11:01',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-20T11:02:17.314276+02:00' ],		#prior : OmReference [ '78' ],		#self : OmReference [ '79' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PileTest,				#isMetaSide : false			},			#name : #testRemove,			#protocol : #tests,			#sourceCode : 'testRemove\r\t',			#stamp : 'ThomasDiGiovanni 9/20/2019 10:58',			#package : #Metaprogrammation		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PileTest,				#isMetaSide : false			},			#name : #testRemove,			#protocol : #tests,			#sourceCode : 'testRemove\r\t    full remove: 5. \r    self assert: (full includes: 6). \r    self deny: (full includes: 5)',			#stamp : 'ThomasDiGiovanni 9/20/2019 11:02',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-20T11:03:08.046725+02:00' ],		#prior : OmReference [ '79' ],		#self : OmReference [ '80' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PileTest,				#isMetaSide : false			},			#name : #testOccurence,			#protocol : #tests,			#sourceCode : 'testOccurence\r\tself assert: (empty occurrencesOf: \'Test\') equals: 0.\r\tself assert: (full occurrencesOf: \'Test\') equals: 1.\r\tfull at: 0 put: \'Pile\'.\r\tself assert: (full occurrencesOf: \'Pile\') equals: 1.\r\tself assert: (full occurrencesOf: \'Test\') equals: 0.',			#stamp : 'ThomasDiGiovanni 9/20/2019 11:01',			#package : #Metaprogrammation		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PileTest,				#isMetaSide : false			},			#name : #testOccurence,			#protocol : #tests,			#sourceCode : 'testOccurence\r\tself assert: (empty occurrencesOf: \'Test\') equals: 0.\r\tself assert: (full occurrencesOf: \'Test\') equals: 1.\r\tfull pop.\r\tfull push: \'Pile\'.\r\tself assert: (full occurrencesOf: \'Pile\') equals: 1.\r\tself assert: (full occurrencesOf: \'Test\') equals: 0',			#stamp : 'ThomasDiGiovanni 9/20/2019 11:03',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-20T11:03:48.121644+02:00' ],		#prior : OmReference [ '80' ],		#self : OmReference [ '81' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PileTest,				#isMetaSide : false			},			#name : #testRemove,			#protocol : #tests,			#sourceCode : 'testRemove\r\t    full remove: 5. \r    self assert: (full includes: 6). \r    self deny: (full includes: 5)',			#stamp : 'ThomasDiGiovanni 9/20/2019 11:02',			#package : #Metaprogrammation		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PileTest,				#isMetaSide : false			},			#name : #testRemove,			#protocol : #tests,			#sourceCode : 'testRemove\r\tfull pop.\r\tself assert: (full includes: 6).\r\tself deny: (full includes: 5)',			#stamp : 'ThomasDiGiovanni 9/20/2019 11:03',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-20T11:04:20.558196+02:00' ],		#prior : OmReference [ '81' ],		#self : OmReference [ '82' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PileTest,				#isMetaSide : false			},			#name : #setUp,			#protocol : #running,			#sourceCode : 'setUp\rsuper setUp.\r\tempty := Pile new initialize: 3.\r\tfull := (Pile new initialize: 1) push: \'Test\'',			#stamp : 'ThomasDiGiovanni 9/20/2019 10:56',			#package : #Metaprogrammation		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PileTest,				#isMetaSide : false			},			#name : #setUp,			#protocol : #running,			#sourceCode : 'setUp\r\tsuper setUp.\r\tempty := Pile new initialize: 3.\r\tfull := (Pile new initialize: 2) push: \'Test\'.\r\tfull push: \'Pile\'',			#stamp : 'ThomasDiGiovanni 9/20/2019 11:04',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-20T11:04:30.977166+02:00' ],		#prior : OmReference [ '82' ],		#self : OmReference [ '83' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PileTest,				#isMetaSide : false			},			#name : #testOccurence,			#protocol : #tests,			#sourceCode : 'testOccurence\r\tself assert: (empty occurrencesOf: \'Test\') equals: 0.\r\tself assert: (full occurrencesOf: \'Test\') equals: 1.\r\tfull pop.\r\tfull push: \'Pile\'.\r\tself assert: (full occurrencesOf: \'Pile\') equals: 1.\r\tself assert: (full occurrencesOf: \'Test\') equals: 0',			#stamp : 'ThomasDiGiovanni 9/20/2019 11:03',			#package : #Metaprogrammation		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PileTest,				#isMetaSide : false			},			#name : #testOccurence,			#protocol : #tests,			#sourceCode : 'testOccurence\r\tself assert: (empty occurrencesOf: \'Test\') equals: 0.\r\tself assert: (full occurrencesOf: \'Test\') equals: 1.\r\tself assert: (full occurrencesOf: \'Pile\') equals: 1',			#stamp : 'ThomasDiGiovanni 9/20/2019 11:04',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-20T11:05:05.400495+02:00' ],		#prior : OmReference [ '83' ],		#self : OmReference [ '84' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PileTest,				#isMetaSide : false			},			#name : #testRemove,			#protocol : #tests,			#sourceCode : 'testRemove\r\tfull pop.\r\tself assert: (full includes: 6).\r\tself deny: (full includes: 5)',			#stamp : 'ThomasDiGiovanni 9/20/2019 11:03',			#package : #Metaprogrammation		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PileTest,				#isMetaSide : false			},			#name : #testRemove,			#protocol : #tests,			#sourceCode : 'testRemove\r\tfull pop.\r\tself assert: (full occurrencesOf: \'Test\') equals: 1.\r\tself deny: (full includes: \'Pile\')',			#stamp : 'ThomasDiGiovanni 9/20/2019 11:05',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-20T11:05:21.229707+02:00' ],		#prior : OmReference [ '84' ],		#self : OmReference [ '85' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PileTest,				#isMetaSide : false			},			#name : #testInclude,			#protocol : #tests,			#sourceCode : 'testInclude\r\tself assert: (full includes: \'Test\')',			#stamp : 'ThomasDiGiovanni 9/20/2019 10:59',			#package : #Metaprogrammation		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PileTest,				#isMetaSide : false			},			#name : #testInclude,			#protocol : #tests,			#sourceCode : 'testInclude\r\tself assert: (full includes: \'Test\')\r\tself assert: (full includes: \'Pile\')',			#stamp : 'ThomasDiGiovanni 9/20/2019 11:05',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-20T11:05:24.574872+02:00' ],		#prior : OmReference [ '85' ],		#self : OmReference [ '86' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PileTest,				#isMetaSide : false			},			#name : #testInclude,			#protocol : #tests,			#sourceCode : 'testInclude\r\tself assert: (full includes: \'Test\')\r\tself assert: (full includes: \'Pile\')',			#stamp : 'ThomasDiGiovanni 9/20/2019 11:05',			#package : #Metaprogrammation		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PileTest,				#isMetaSide : false			},			#name : #testInclude,			#protocol : #tests,			#sourceCode : 'testInclude\r\tself assert: (full includes: \'Test\').\r\tself assert: (full includes: \'Pile\')',			#stamp : 'ThomasDiGiovanni 9/20/2019 11:05',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-20T11:06:57.491192+02:00' ],		#prior : OmReference [ '86' ],		#self : OmReference [ '87' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PileTest,				#isMetaSide : false			},			#name : #setUp,			#protocol : #running,			#sourceCode : 'setUp\r\tsuper setUp.\r\tempty := Pile new initialize: 3.\r\tfull := (Pile new initialize: 2) push: \'Test\'.\r\tfull push: \'Pile\'',			#stamp : 'ThomasDiGiovanni 9/20/2019 11:04',			#package : #Metaprogrammation		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PileTest,				#isMetaSide : false			},			#name : #setUp,			#protocol : #running,			#sourceCode : 'setUp\r\tsuper setUp.\r\tempty := Pile new initialize: 2.\r\tfull := (Pile new initialize: 2) push: \'Test\'.\r\tfull push: \'Pile\'',			#stamp : 'ThomasDiGiovanni 9/20/2019 11:06',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-20T11:12:25.98368+02:00' ],		#prior : OmReference [ '87' ],		#self : OmReference [ '88' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Pile class',				#isMetaSide : true			},			#name : #initialize,			#protocol : #'as yet unclassified',			#sourceCode : 'initialize\rDefaultSize := 5',			#stamp : 'ThomasDiGiovanni 9/20/2019 11:12',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-20T11:12:26.002269+02:00' ],		#prior : OmReference [ '88' ],		#self : OmReference [ '89' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Pile class',				#isMetaSide : true			},			#name : #initialize,			#protocol : #'as yet unclassified',			#sourceCode : 'initialize\rDefaultSize := 5',			#stamp : 'ThomasDiGiovanni 9/20/2019 11:12',			#package : #Metaprogrammation		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Pile class',				#isMetaSide : true			},			#name : #initialize,			#protocol : #'class initialization',			#sourceCode : 'initialize\rDefaultSize := 5',			#stamp : 'ThomasDiGiovanni 9/20/2019 11:12',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-20T11:14:39.645217+02:00' ],		#prior : OmReference [ '89' ],		#self : OmReference [ '90' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pile,				#isMetaSide : false			},			#name : #new,			#protocol : #'as yet unclassified',			#sourceCode : 'new',			#stamp : 'ThomasDiGiovanni 9/20/2019 11:14',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-20T11:14:39.674174+02:00' ],		#prior : OmReference [ '90' ],		#self : OmReference [ '91' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pile,				#isMetaSide : false			},			#name : #new,			#protocol : #'as yet unclassified',			#sourceCode : 'new',			#stamp : 'ThomasDiGiovanni 9/20/2019 11:14',			#package : #Metaprogrammation		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pile,				#isMetaSide : false			},			#name : #new,			#protocol : #'instance creation',			#sourceCode : 'new',			#stamp : 'ThomasDiGiovanni 9/20/2019 11:14',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-20T11:15:30.760804+02:00' ],		#prior : OmReference [ '91' ],		#self : OmReference [ '92' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pile,				#isMetaSide : false			},			#name : #new,			#protocol : #'instance creation',			#sourceCode : 'new',			#stamp : 'ThomasDiGiovanni 9/20/2019 11:14',			#package : #Metaprogrammation		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pile,				#isMetaSide : false			},			#name : #new,			#protocol : #'instance creation',			#sourceCode : 'new\r\tself initialize: DefaultSize \t',			#stamp : 'ThomasDiGiovanni 9/20/2019 11:15',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-20T11:16:29.408518+02:00' ],		#prior : OmReference [ '92' ],		#self : OmReference [ '93' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pile,				#isMetaSide : false			},			#name : #example,			#protocol : #'as yet unclassified',			#sourceCode : 'example',			#stamp : 'ThomasDiGiovanni 9/20/2019 11:16',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-20T11:16:29.452318+02:00' ],		#prior : OmReference [ '93' ],		#self : OmReference [ '94' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pile,				#isMetaSide : false			},			#name : #example,			#protocol : #'as yet unclassified',			#sourceCode : 'example',			#stamp : 'ThomasDiGiovanni 9/20/2019 11:16',			#package : #Metaprogrammation		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pile,				#isMetaSide : false			},			#name : #example,			#protocol : #example,			#sourceCode : 'example',			#stamp : 'ThomasDiGiovanni 9/20/2019 11:16',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-20T11:16:44.621672+02:00' ],		#prior : OmReference [ '94' ],		#self : OmReference [ '95' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pile,				#isMetaSide : false			},			#name : #example,			#protocol : #example,			#sourceCode : 'example',			#stamp : 'ThomasDiGiovanni 9/20/2019 11:16',			#package : #Metaprogrammation		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pile,				#isMetaSide : false			},			#name : #example,			#protocol : #example,			#sourceCode : 'example\r\t| testPile |\rtestPile := Pile new initialize: 2.\rtestPile isEmpty.\rtestPile push: \'test\'.\rtestPile top.\rtestPile pop.\rtestPile push: \'pile\'.\rtestPile printOn: Transcript open',			#stamp : 'ThomasDiGiovanni 9/20/2019 11:16',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-20T11:17:02.701168+02:00' ],		#prior : OmReference [ '95' ],		#self : OmReference [ '96' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pile,				#isMetaSide : false			},			#name : #example,			#protocol : #example,			#sourceCode : 'example\r\t| testPile |\rtestPile := Pile new initialize: 2.\rtestPile isEmpty.\rtestPile push: \'test\'.\rtestPile top.\rtestPile pop.\rtestPile push: \'pile\'.\rtestPile printOn: Transcript open',			#stamp : 'ThomasDiGiovanni 9/20/2019 11:16',			#package : #Metaprogrammation		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pile,				#isMetaSide : false			},			#name : #example,			#protocol : #example,			#sourceCode : 'example\r\t| testPile |\r\ttestPile := self new.\r\ttestPile isEmpty.\r\ttestPile push: \'test\'.\r\ttestPile top.\r\ttestPile pop.\r\ttestPile push: \'pile\'.\r\ttestPile printOn: Transcript open',			#stamp : 'ThomasDiGiovanni 9/20/2019 11:17',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-20T11:17:34.463375+02:00' ],		#prior : OmReference [ '96' ],		#self : OmReference [ '97' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pile,				#isMetaSide : false			},			#name : #example,			#protocol : #example,			#sourceCode : 'example\r\t| testPile |\r\ttestPile := self new.\r\ttestPile isEmpty.\r\ttestPile push: \'test\'.\r\ttestPile top.\r\ttestPile pop.\r\ttestPile push: \'pile\'.\r\ttestPile printOn: Transcript open',			#stamp : 'ThomasDiGiovanni 9/20/2019 11:17',			#package : #Metaprogrammation		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pile,				#isMetaSide : false			},			#name : #example,			#protocol : #example,			#sourceCode : 'example\r\t| testPile |\r\ttestPile := self new.\r\ttestPile isEmpty.\r\ttestPile push: 1.\r\ttestPile pop.\r\ttestPile push: 2.\r\ttestPile printOn: Transcript open',			#stamp : 'ThomasDiGiovanni 9/20/2019 11:17',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-20T11:18:06.72899+02:00' ],		#prior : OmReference [ '97' ],		#self : OmReference [ '98' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pile,				#isMetaSide : false			},			#name : #example,			#protocol : #example,			#sourceCode : 'example\r\t| testPile |\r\ttestPile := self new.\r\ttestPile isEmpty.\r\ttestPile push: 1.\r\ttestPile pop.\r\ttestPile push: 2.\r\ttestPile printOn: Transcript open',			#stamp : 'ThomasDiGiovanni 9/20/2019 11:17',			#package : #Metaprogrammation		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pile,				#isMetaSide : false			},			#name : #example,			#protocol : #'as yet unclassified',			#sourceCode : 'example\r\t| testPile |\r\ttestPile := self new.\r\ttestPile isEmpty.\r\ttestPile push: 1.\r\ttestPile pop.\r\ttestPile push: 2.\r\ttestPile printOn: Transcript open',			#stamp : 'ThomasDiGiovanni 9/20/2019 11:17',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-20T11:18:06.750496+02:00' ],		#prior : OmReference [ '98' ],		#self : OmReference [ '99' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pile,				#isMetaSide : false			},			#name : #example,			#protocol : #example,			#sourceCode : 'example\r\t| testPile |\r\ttestPile := self new.\r\ttestPile isEmpty.\r\ttestPile push: 1.\r\ttestPile pop.\r\ttestPile push: 2.\r\ttestPile printOn: Transcript open',			#stamp : 'ThomasDiGiovanni 9/20/2019 11:17',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-20T11:18:06.752956+02:00' ],		#prior : OmReference [ '99' ],		#self : OmReference [ '100' ]	},	#content : EpProtocolRemoval {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#traitCompositionSource : '{}',				#superclassName : 'Object',				#definitionSource : 'Object subclass: #Pile\r\tinstanceVariableNames: \'contenu index capacite\'\r\tclassVariableNames: \'DefaultSize\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Metaprogrammation\''			},			#name : #Pile,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Pile,						#isMetaSide : false					},					#name : #contenu,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Pile,						#isMetaSide : false					},					#name : #index,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Pile,						#isMetaSide : false					},					#name : #capacite,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'Pile class\r\tinstanceVariableNames: \'\''				},				#name : #'Pile class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Pile,					#isMetaSide : false				},				#parent : @7,				#content : 'Implémentation d\'une pile',				#stamp : 'ThomasDiGiovanni 9/20/2019 10:16'			},			#classVariables : OrderedCollection [				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #Pile,						#isMetaSide : false					},					#name : #DefaultSize,					#parent : @7				}			],			#category : #Metaprogrammation,			#package : #Metaprogrammation,			#sharedPools : OrderedCollection [ ]		},		#protocol : #example	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-20T11:18:14.73244+02:00' ],		#prior : OmReference [ '100' ],		#self : OmReference [ '101' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Pile class',				#isMetaSide : true			},			#name : #example,			#protocol : #'as yet unclassified',			#sourceCode : 'example\r\t| testPile |\r\ttestPile := self new.\r\ttestPile isEmpty.\r\ttestPile push: 1.\r\ttestPile pop.\r\ttestPile push: 2.\r\ttestPile printOn: Transcript open',			#stamp : 'ThomasDiGiovanni 9/20/2019 11:18',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-20T11:18:14.773682+02:00' ],		#prior : OmReference [ '101' ],		#self : OmReference [ '102' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Pile class',				#isMetaSide : true			},			#name : #example,			#protocol : #'as yet unclassified',			#sourceCode : 'example\r\t| testPile |\r\ttestPile := self new.\r\ttestPile isEmpty.\r\ttestPile push: 1.\r\ttestPile pop.\r\ttestPile push: 2.\r\ttestPile printOn: Transcript open',			#stamp : 'ThomasDiGiovanni 9/20/2019 11:18',			#package : #Metaprogrammation		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Pile class',				#isMetaSide : true			},			#name : #example,			#protocol : #example,			#sourceCode : 'example\r\t| testPile |\r\ttestPile := self new.\r\ttestPile isEmpty.\r\ttestPile push: 1.\r\ttestPile pop.\r\ttestPile push: 2.\r\ttestPile printOn: Transcript open',			#stamp : 'ThomasDiGiovanni 9/20/2019 11:18',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-20T11:18:59.422515+02:00' ],		#prior : OmReference [ '102' ],		#self : OmReference [ '103' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Pile class',				#isMetaSide : true			},			#name : #example,			#protocol : #example,			#sourceCode : 'example\r\t| testPile |\r\ttestPile := self new.\r\ttestPile isEmpty.\r\ttestPile push: 1.\r\ttestPile pop.\r\ttestPile push: 2.\r\ttestPile printOn: Transcript open',			#stamp : 'ThomasDiGiovanni 9/20/2019 11:18',			#package : #Metaprogrammation		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Pile class',				#isMetaSide : true			},			#name : #example,			#protocol : #example,			#sourceCode : 'example\r\t| testPile |\r\ttestPile := self new.\r\tself assert: testPile isEmpty.\r\ttestPile push: 1.\r\ttestPile pop.\r\ttestPile push: 2.\r\ttestPile printOn: Transcript open',			#stamp : 'ThomasDiGiovanni 9/20/2019 11:18',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-20T11:19:35.724579+02:00' ],		#prior : OmReference [ '103' ],		#self : OmReference [ '104' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pile,				#isMetaSide : false			},			#name : #'printOn:',			#protocol : #printing,			#sourceCode : 'printOn: aStream\r\taStream nextPutAll: \'Pile de taille : \'.\r\tcapacite printOn: aStream.\r\taStream nextPutAll: \' contenant : \'.\r\tindex printOn: aStream.\r\taStream nextPutAll: \' objets : (\'.\r\tcontenu\r\t\tdo: [ :each | \r\t\t\teach printOn: aStream.\r\t\t\taStream space ].\r\taStream nextPut: $).\r\taStream nextPut: $.',			#stamp : 'ThomasDiGiovanni 9/20/2019 10:37',			#package : #Metaprogrammation		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pile,				#isMetaSide : false			},			#name : #'printOn:',			#protocol : #printing,			#sourceCode : 'printOn: aStream\r\taStream nextPutAll: \'Pile de taille \'.\r\tcapacite printOn: aStream.\r\taStream nextPutAll: \' contenant \'.\r\tindex printOn: aStream.\r\taStream nextPutAll: \' objets : (\'.\r\tcontenu\r\t\tdo: [ :each | \r\t\t\teach printOn: aStream.\r\t\t\taStream space ].\r\taStream nextPut: $).\r\taStream nextPut: $.',			#stamp : 'ThomasDiGiovanni 9/20/2019 11:19',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-20T11:21:19.130191+02:00' ],		#prior : OmReference [ '104' ],		#self : OmReference [ '105' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Pile class',				#isMetaSide : true			},			#name : #example,			#protocol : #example,			#sourceCode : 'example\r\t| testPile |\r\ttestPile := self new.\r\tself assert: testPile isEmpty.\r\ttestPile push: 1.\r\ttestPile pop.\r\ttestPile push: 2.\r\ttestPile printOn: Transcript open',			#stamp : 'ThomasDiGiovanni 9/20/2019 11:18',			#package : #Metaprogrammation		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Pile class',				#isMetaSide : true			},			#name : #example,			#protocol : #example,			#sourceCode : 'example\r\t| testPile |\r\tPile initialize .\r\ttestPile := self new.\r\tself assert: testPile isEmpty.\r\ttestPile push: 1.\r\ttestPile pop.\r\ttestPile push: 2.\r\ttestPile printOn: Transcript open',			#stamp : 'ThomasDiGiovanni 9/20/2019 11:21',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-20T11:21:27.957492+02:00' ],		#prior : OmReference [ '105' ],		#self : OmReference [ '106' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Pile class',				#isMetaSide : true			},			#name : #example,			#protocol : #example,			#sourceCode : 'example\r\t| testPile |\r\tPile initialize .\r\ttestPile := self new.\r\tself assert: testPile isEmpty.\r\ttestPile push: 1.\r\ttestPile pop.\r\ttestPile push: 2.\r\ttestPile printOn: Transcript open',			#stamp : 'ThomasDiGiovanni 9/20/2019 11:21',			#package : #Metaprogrammation		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Pile class',				#isMetaSide : true			},			#name : #example,			#protocol : #example,			#sourceCode : 'example\r\t| testPile |\r\tself initialize.\r\ttestPile := self new.\r\tself assert: testPile isEmpty.\r\ttestPile push: 1.\r\ttestPile pop.\r\ttestPile push: 2.\r\ttestPile printOn: Transcript open',			#stamp : 'ThomasDiGiovanni 9/20/2019 11:21',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-20T11:22:19.031917+02:00' ],		#prior : OmReference [ '106' ],		#self : OmReference [ '107' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pile,				#isMetaSide : false			},			#name : #'initialize:',			#protocol : #initialization,			#sourceCode : 'initialize: taille\r\t"La pile est vide quand index = 0, la pile est pleine quand index = capacite"\r\r\tindex := 0.\r\tcapacite := taille.\r\r\t"Le contenu est stocké dans un tableau"\r\tcontenu := Array new: capacite\r\r\t"Pour les tests, enlever le commentaire quand isEmpty est écrite"\r\t"self assert: (self isEmpty)."',			#stamp : 'ThomasDiGiovanni 9/20/2019 10:09',			#package : #Metaprogrammation		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pile,				#isMetaSide : false			},			#name : #'initialize:',			#protocol : #initialization,			#sourceCode : 'initialize: taille\r\t"La pile est vide quand index = 0, la pile est pleine quand index = capacite"\r\tindex := 0.\r\tcapacite := taille.\r\r\t"Le contenu est stocké dans un tableau"\r\tcontenu := Array new: capacite',			#stamp : 'ThomasDiGiovanni 9/20/2019 11:22',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-20T11:25:30.13045+02:00' ],		#prior : OmReference [ '107' ],		#self : OmReference [ '108' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PileTest,				#isMetaSide : false			},			#name : #testOccurence,			#protocol : #tests,			#sourceCode : 'testOccurence\r\tself assert: (empty occurrencesOf: \'Test\') equals: 0.\r\tself assert: (full occurrencesOf: \'Test\') equals: 1.\r\tself assert: (full occurrencesOf: \'Pile\') equals: 1',			#stamp : 'ThomasDiGiovanni 9/20/2019 11:04',			#package : #Metaprogrammation		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PileTest,				#isMetaSide : false			},			#name : #testOccurence,			#protocol : #tests,			#sourceCode : 'testOccurence\r\tself assert: (empty occurrencesOf: 1) equals: 0.\r\tself assert: (full occurrencesOf: 1) equals: 1.\r\tself assert: (full occurrencesOf: 2) equals: 1',			#stamp : 'ThomasDiGiovanni 9/20/2019 11:25',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-20T11:25:38.316963+02:00' ],		#prior : OmReference [ '108' ],		#self : OmReference [ '109' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PileTest,				#isMetaSide : false			},			#name : #testRemove,			#protocol : #tests,			#sourceCode : 'testRemove\r\tfull pop.\r\tself assert: (full occurrencesOf: \'Test\') equals: 1.\r\tself deny: (full includes: \'Pile\')',			#stamp : 'ThomasDiGiovanni 9/20/2019 11:05',			#package : #Metaprogrammation		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PileTest,				#isMetaSide : false			},			#name : #testRemove,			#protocol : #tests,			#sourceCode : 'testRemove\r\tfull pop.\r\tself assert: (full occurrencesOf: 1) equals: 1.\r\tself deny: (full includes: 2)',			#stamp : 'ThomasDiGiovanni 9/20/2019 11:25',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-20T11:25:50.740184+02:00' ],		#prior : OmReference [ '109' ],		#self : OmReference [ '110' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PileTest,				#isMetaSide : false			},			#name : #testInclude,			#protocol : #tests,			#sourceCode : 'testInclude\r\tself assert: (full includes: \'Test\').\r\tself assert: (full includes: \'Pile\')',			#stamp : 'ThomasDiGiovanni 9/20/2019 11:05',			#package : #Metaprogrammation		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PileTest,				#isMetaSide : false			},			#name : #testInclude,			#protocol : #tests,			#sourceCode : 'testInclude\r\tself assert: (full includes: 1).\r\tself assert: (full includes: 2)',			#stamp : 'ThomasDiGiovanni 9/20/2019 11:25',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-20T11:27:09.313943+02:00' ],		#prior : OmReference [ '110' ],		#self : OmReference [ '111' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pile,				#isMetaSide : false			},			#name : #'push:',			#protocol : #adding,			#sourceCode : 'push: object\r\tself isFull\r\t\tifTrue: [ self error: \'pile is full\' ]\r\t\tifFalse: [ contenu at: index put: object.\r\t\t\tindex := index + 1 ]',			#stamp : 'ThomasDiGiovanni 9/20/2019 10:40',			#package : #Metaprogrammation		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pile,				#isMetaSide : false			},			#name : #'push:',			#protocol : #adding,			#sourceCode : 'push: object\r\tself isFull\r\t\tifTrue: [ self error: \'pile is full\' ]\r\t\tifFalse: [ contenu at: index + 1 put: object.\r\t\t\tindex := index + 1 ]',			#stamp : 'ThomasDiGiovanni 9/20/2019 11:27',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-20T11:27:32.513717+02:00' ],		#prior : OmReference [ '111' ],		#self : OmReference [ '112' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pile,				#isMetaSide : false			},			#name : #top,			#protocol : #accessing,			#sourceCode : 'top\r\t^ contenu at: index - 1',			#stamp : 'ThomasDiGiovanni 9/20/2019 10:33',			#package : #Metaprogrammation		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pile,				#isMetaSide : false			},			#name : #top,			#protocol : #accessing,			#sourceCode : 'top\r\t^ contenu at: index',			#stamp : 'ThomasDiGiovanni 9/20/2019 11:27',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-20T11:28:47.163552+02:00' ],		#prior : OmReference [ '112' ],		#self : OmReference [ '113' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PileTest,				#isMetaSide : false			},			#name : #testInclude,			#protocol : #tests,			#sourceCode : 'testInclude\r\tself assert: (full includes: 1).\r\tself assert: (full includes: 2)',			#stamp : 'ThomasDiGiovanni 9/20/2019 11:25',			#package : #Metaprogrammation		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PileTest,				#isMetaSide : false			},			#name : #testInclude,			#protocol : #tests,			#sourceCode : 'testInclude\r\tself assert: (full includes: \'Test\').\r\tself assert: (full includes: \'Pile\')',			#stamp : 'ThomasDiGiovanni 9/20/2019 11:28',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-20T11:28:59.424358+02:00' ],		#prior : OmReference [ '113' ],		#self : OmReference [ '114' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PileTest,				#isMetaSide : false			},			#name : #testOccurence,			#protocol : #tests,			#sourceCode : 'testOccurence\r\tself assert: (empty occurrencesOf: 1) equals: 0.\r\tself assert: (full occurrencesOf: 1) equals: 1.\r\tself assert: (full occurrencesOf: 2) equals: 1',			#stamp : 'ThomasDiGiovanni 9/20/2019 11:25',			#package : #Metaprogrammation		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PileTest,				#isMetaSide : false			},			#name : #testOccurence,			#protocol : #tests,			#sourceCode : 'testOccurence\r\tself assert: (empty occurrencesOf: \'Test\') equals: 0.\r\tself assert: (full occurrencesOf: \'Test\') equals: 1.\r\tself assert: (full occurrencesOf: \'Pile\') equals: 1',			#stamp : 'ThomasDiGiovanni 9/20/2019 11:28',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-20T11:29:33.221687+02:00' ],		#prior : OmReference [ '114' ],		#self : OmReference [ '115' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PileTest,				#isMetaSide : false			},			#name : #testRemove,			#protocol : #tests,			#sourceCode : 'testRemove\r\tfull pop.\r\tself assert: (full occurrencesOf: 1) equals: 1.\r\tself deny: (full includes: 2)',			#stamp : 'ThomasDiGiovanni 9/20/2019 11:25',			#package : #Metaprogrammation		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PileTest,				#isMetaSide : false			},			#name : #testRemove,			#protocol : #tests,			#sourceCode : 'testRemove\r\tfull pop.\r\tself assert: (full occurrencesOf: \'Test\') equals: 1.\r\tself deny: (full includes: \'Pile\')',			#stamp : 'ThomasDiGiovanni 9/20/2019 11:29',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-20T11:31:10.668337+02:00' ],		#prior : OmReference [ '115' ],		#self : OmReference [ '116' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PileTest,				#isMetaSide : false			},			#name : #testOccurence,			#protocol : #tests,			#sourceCode : 'testOccurence\r\tself assert: (empty occurrencesOf: \'Test\') equals: 0.\r\tself assert: (full occurrencesOf: \'Test\') equals: 1.\r\tself assert: (full occurrencesOf: \'Pile\') equals: 1',			#stamp : 'ThomasDiGiovanni 9/20/2019 11:28',			#package : #Metaprogrammation		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PileTest,				#isMetaSide : false			},			#name : #testOccurence,			#protocol : #'as yet unclassified',			#sourceCode : 'testOccurence\r\tself assert: (empty occurrencesOf: \'Test\') equals: 0.\r\tself assert: (full occurrencesOf: \'Test\') equals: 1.\r\tself assert: (full occurrencesOf: \'Pile\') equals: 1',			#stamp : 'ThomasDiGiovanni 9/20/2019 11:28',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-20T11:31:10.685137+02:00' ],		#prior : OmReference [ '116' ],		#self : OmReference [ '117' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PileTest,				#isMetaSide : false			},			#name : #testOccurence,			#protocol : #tests,			#sourceCode : 'testOccurence\r\tself assert: (empty occurrencesOf: \'Test\') equals: 0.\r\tself assert: (full occurrencesOf: \'Test\') equals: 1.\r\tself assert: (full occurrencesOf: \'Pile\') equals: 1',			#stamp : 'ThomasDiGiovanni 9/20/2019 11:28',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-20T11:31:52.632632+02:00' ],		#prior : OmReference [ '117' ],		#self : OmReference [ '118' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PileTest,				#isMetaSide : false			},			#name : #testRemove,			#protocol : #tests,			#sourceCode : 'testRemove\r\tfull pop.\r\tself assert: (full occurrencesOf: \'Test\') equals: 1.\r\tself deny: (full includes: \'Pile\')',			#stamp : 'ThomasDiGiovanni 9/20/2019 11:29',			#package : #Metaprogrammation		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PileTest,				#isMetaSide : false			},			#name : #testRemove,			#protocol : #'as yet unclassified',			#sourceCode : 'testRemove\r\tfull pop.\r\tself assert: (full occurrencesOf: \'Test\') equals: 1.\r\tself deny: (full includes: \'Pile\')',			#stamp : 'ThomasDiGiovanni 9/20/2019 11:29',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-20T11:31:52.696792+02:00' ],		#prior : OmReference [ '118' ],		#self : OmReference [ '119' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PileTest,				#isMetaSide : false			},			#name : #testRemove,			#protocol : #tests,			#sourceCode : 'testRemove\r\tfull pop.\r\tself assert: (full occurrencesOf: \'Test\') equals: 1.\r\tself deny: (full includes: \'Pile\')',			#stamp : 'ThomasDiGiovanni 9/20/2019 11:29',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-20T11:33:47.307907+02:00' ],		#prior : OmReference [ '119' ],		#self : OmReference [ '120' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Pile class',				#isMetaSide : true			},			#name : #example,			#protocol : #example,			#sourceCode : 'example\r\t| testPile |\r\tself initialize.\r\ttestPile := self new.\r\tself assert: testPile isEmpty.\r\ttestPile push: 1.\r\ttestPile pop.\r\ttestPile push: 2.\r\ttestPile printOn: Transcript open',			#stamp : 'ThomasDiGiovanni 9/20/2019 11:21',			#package : #Metaprogrammation		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Pile class',				#isMetaSide : true			},			#name : #example,			#protocol : #example,			#sourceCode : 'example\r\t| testPile |\r\tself initialize.\r\ttestPile := Pile new.\r\tself assert: testPile isEmpty.\r\ttestPile push: 1.\r\ttestPile pop.\r\ttestPile push: 2.\r\ttestPile printOn: Transcript open',			#stamp : 'ThomasDiGiovanni 9/20/2019 11:33',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-20T11:34:14.142905+02:00' ],		#prior : OmReference [ '120' ],		#self : OmReference [ '121' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Pile class',				#isMetaSide : true			},			#name : #example,			#protocol : #example,			#sourceCode : 'example\r\t| testPile |\r\tself initialize.\r\ttestPile := Pile new.\r\tself assert: testPile isEmpty.\r\ttestPile push: 1.\r\ttestPile pop.\r\ttestPile push: 2.\r\ttestPile printOn: Transcript open',			#stamp : 'ThomasDiGiovanni 9/20/2019 11:33',			#package : #Metaprogrammation		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Pile class',				#isMetaSide : true			},			#name : #example,			#protocol : #example,			#sourceCode : 'example\r\t| testPile |\r\tself initialize.\r\ttestPile := self new.\r\tself assert: testPile isEmpty.\r\ttestPile push: 1.\r\ttestPile pop.\r\ttestPile push: 2.\r\ttestPile printOn: Transcript open',			#stamp : 'ThomasDiGiovanni 9/20/2019 11:34',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-20T11:34:49.039877+02:00' ],		#prior : OmReference [ '121' ],		#self : OmReference [ '122' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Pile class',				#isMetaSide : true			},			#name : #example,			#protocol : #example,			#sourceCode : 'example\r\t| testPile |\r\tself initialize.\r\ttestPile := self new.\r\tself assert: testPile isEmpty.\r\ttestPile push: 1.\r\ttestPile pop.\r\ttestPile push: 2.\r\ttestPile printOn: Transcript open',			#stamp : 'ThomasDiGiovanni 9/20/2019 11:34',			#package : #Metaprogrammation		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Pile class',				#isMetaSide : true			},			#name : #example,			#protocol : #example,			#sourceCode : 'example\r\t| testPile |\r\tself initialize.\r\ttestPile := self new.\r\tself assert: testPile isEmpty.\r\ttestPile push: 1.\r\ttestPile push: 2.\r\ttestPile pop.\r\ttestPile push: 3.\r\ttestPile printOn: Transcript open',			#stamp : 'ThomasDiGiovanni 9/20/2019 11:34',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-20T11:40:57.157169+02:00' ],		#prior : OmReference [ '122' ],		#self : OmReference [ '123' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#traitCompositionSource : '{}',				#superclassName : 'TestCase',				#definitionSource : 'TestCase subclass: #PileTest\r\tinstanceVariableNames: \'empty full\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Metaprogrammation\''			},			#name : #PileTest,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PileTest,						#isMetaSide : false					},					#name : #empty,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PileTest,						#isMetaSide : false					},					#name : #full,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'PileTest class\r\tinstanceVariableNames: \'\''				},				#name : #'PileTest class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PileTest,					#isMetaSide : false				},				#parent : @7,				#content : 'Test de pile',				#stamp : 'ThomasDiGiovanni 9/20/2019 11:40'			},			#classVariables : OrderedCollection [ ],			#category : #Metaprogrammation,			#package : #Metaprogrammation,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'Test de pile',		#newStamp : 'ThomasDiGiovanni 9/20/2019 11:40'	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-20T11:43:36.436894+02:00' ],		#prior : OmReference [ '123' ],		#self : OmReference [ '124' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Pile class',				#isMetaSide : true			},			#name : #example,			#protocol : #example,			#sourceCode : 'example\r\t| testPile |\r\tself initialize.\r\ttestPile := self new.\r\tself assert: testPile isEmpty.\r\ttestPile push: 1.\r\ttestPile push: 2.\r\ttestPile pop.\r\ttestPile push: 3.\r\ttestPile printOn: Transcript open',			#stamp : 'ThomasDiGiovanni 9/20/2019 11:34',			#package : #Metaprogrammation		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Pile class',				#isMetaSide : true			},			#name : #example,			#protocol : #example,			#sourceCode : 'example\r\t| testPile |\r\tself initialize.\r\ttestPile := self new initialize: 2.\r\tself assert: testPile isEmpty.\r\ttestPile push: 1.\r\ttestPile push: 2.\r\ttestPile pop.\r\ttestPile push: 3.\r\ttestPile printOn: Transcript open',			#stamp : 'ThomasDiGiovanni 9/20/2019 11:43',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-20T11:44:13.060707+02:00' ],		#prior : OmReference [ '124' ],		#self : OmReference [ '125' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Pile class',				#isMetaSide : true			},			#name : #example,			#protocol : #example,			#sourceCode : 'example\r\t| testPile |\r\tself initialize.\r\ttestPile := self new initialize: 2.\r\tself assert: testPile isEmpty.\r\ttestPile push: 1.\r\ttestPile push: 2.\r\ttestPile pop.\r\ttestPile push: 3.\r\ttestPile printOn: Transcript open',			#stamp : 'ThomasDiGiovanni 9/20/2019 11:43',			#package : #Metaprogrammation		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Pile class',				#isMetaSide : true			},			#name : #example,			#protocol : #example,			#sourceCode : 'example\r\t| testPile |\r\tself initialize.\r\ttestPile := self new initialize: 2.\r\tself assert: testPile isEmpty.\r\ttestPile push: 1.\r\ttestPile push: 2.\r\ttestPile pop.\r\ttestPile push: 3.\r\ttestPile printOn: Transcript',			#stamp : 'ThomasDiGiovanni 9/20/2019 11:44',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-20T11:45:04.563765+02:00' ],		#prior : OmReference [ '125' ],		#self : OmReference [ '126' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Pile class',				#isMetaSide : true			},			#name : #example,			#protocol : #example,			#sourceCode : 'example\r\t| testPile |\r\tself initialize.\r\ttestPile := self new initialize: 2.\r\tself assert: testPile isEmpty.\r\ttestPile push: 1.\r\ttestPile push: 2.\r\ttestPile pop.\r\ttestPile push: 3.\r\ttestPile printOn: Transcript',			#stamp : 'ThomasDiGiovanni 9/20/2019 11:44',			#package : #Metaprogrammation		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Pile class',				#isMetaSide : true			},			#name : #example,			#protocol : #example,			#sourceCode : 'example\r\t| testPile transcript |\r\tself initialize.\r\ttestPile := self new initialize: 2.\r\tself assert: testPile isEmpty.\r\ttestPile push: 1.\r\ttestPile push: 2.\r\ttestPile pop.\r\ttestPile push: 3.\r\ttranscript := Transcript open.\r\ttestPile printOn: transcript',			#stamp : 'ThomasDiGiovanni 9/20/2019 11:45',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-20T11:45:32.959924+02:00' ],		#prior : OmReference [ '126' ],		#self : OmReference [ '127' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Pile class',				#isMetaSide : true			},			#name : #example,			#protocol : #example,			#sourceCode : 'example\r\t| testPile transcript |\r\tself initialize.\r\ttestPile := self new initialize: 2.\r\tself assert: testPile isEmpty.\r\ttestPile push: 1.\r\ttestPile push: 2.\r\ttestPile pop.\r\ttestPile push: 3.\r\ttranscript := Transcript open.\r\ttestPile printOn: transcript',			#stamp : 'ThomasDiGiovanni 9/20/2019 11:45',			#package : #Metaprogrammation		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Pile class',				#isMetaSide : true			},			#name : #example,			#protocol : #example,			#sourceCode : 'example\r\t| testPile |\r\tself initialize.\r\ttestPile := self new initialize: 2.\r\tself assert: testPile isEmpty.\r\ttestPile push: 1.\r\ttestPile push: 2.\r\ttestPile pop.\r\ttestPile push: 3.\r\ttestPile printOn: Transcript open',			#stamp : 'ThomasDiGiovanni 9/20/2019 11:45',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-20T11:48:15.834179+02:00' ],		#prior : OmReference [ '127' ],		#self : OmReference [ '128' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#traitCompositionSource : '{}',				#superclassName : 'Object',				#definitionSource : 'Object subclass: #LinkedListe\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Metaprogrammation\''			},			#name : #LinkedListe,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'LinkedListe class\r\tinstanceVariableNames: \'\''				},				#name : #'LinkedListe class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #LinkedListe,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Metaprogrammation,			#package : #Metaprogrammation,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-20T11:56:18.524855+02:00' ],		#prior : OmReference [ '128' ],		#self : OmReference [ '129' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pile,				#isMetaSide : false			},			#name : #new,			#protocol : #'instance creation',			#sourceCode : 'new\r\tself initialize: DefaultSize \t',			#stamp : 'ThomasDiGiovanni 9/20/2019 11:15',			#package : #Metaprogrammation		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pile,				#isMetaSide : false			},			#name : #new,			#protocol : #'as yet unclassified',			#sourceCode : 'new\r\tself initialize: DefaultSize \t',			#stamp : 'ThomasDiGiovanni 9/20/2019 11:15',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-20T11:56:18.594786+02:00' ],		#prior : OmReference [ '129' ],		#self : OmReference [ '130' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pile,				#isMetaSide : false			},			#name : #new,			#protocol : #'instance creation',			#sourceCode : 'new\r\tself initialize: DefaultSize \t',			#stamp : 'ThomasDiGiovanni 9/20/2019 11:15',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-20T11:56:18.598018+02:00' ],		#prior : OmReference [ '130' ],		#self : OmReference [ '131' ]	},	#content : EpProtocolRemoval {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#traitCompositionSource : '{}',				#superclassName : 'Object',				#definitionSource : 'Object subclass: #Pile\r\tinstanceVariableNames: \'contenu index capacite\'\r\tclassVariableNames: \'DefaultSize\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Metaprogrammation\''			},			#name : #Pile,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Pile,						#isMetaSide : false					},					#name : #contenu,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Pile,						#isMetaSide : false					},					#name : #index,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Pile,						#isMetaSide : false					},					#name : #capacite,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'Pile class\r\tinstanceVariableNames: \'\''				},				#name : #'Pile class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Pile,					#isMetaSide : false				},				#parent : @7,				#content : 'Implémentation d\'une pile',				#stamp : 'ThomasDiGiovanni 9/20/2019 10:16'			},			#classVariables : OrderedCollection [				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #Pile,						#isMetaSide : false					},					#name : #DefaultSize,					#parent : @7				}			],			#category : #Metaprogrammation,			#package : #Metaprogrammation,			#sharedPools : OrderedCollection [ ]		},		#protocol : #'instance creation'	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-20T11:56:25.111933+02:00' ],		#prior : OmReference [ '131' ],		#self : OmReference [ '132' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Pile class',				#isMetaSide : true			},			#name : #new,			#protocol : #'as yet unclassified',			#sourceCode : 'new\r\tself initialize: DefaultSize',			#stamp : 'ThomasDiGiovanni 9/20/2019 11:56',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-20T11:56:25.130147+02:00' ],		#prior : OmReference [ '132' ],		#self : OmReference [ '133' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Pile class',				#isMetaSide : true			},			#name : #new,			#protocol : #'as yet unclassified',			#sourceCode : 'new\r\tself initialize: DefaultSize',			#stamp : 'ThomasDiGiovanni 9/20/2019 11:56',			#package : #Metaprogrammation		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Pile class',				#isMetaSide : true			},			#name : #new,			#protocol : #'instance creation',			#sourceCode : 'new\r\tself initialize: DefaultSize',			#stamp : 'ThomasDiGiovanni 9/20/2019 11:56',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-20T11:56:32.83673+02:00' ],		#prior : OmReference [ '133' ],		#self : OmReference [ '134' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Pile class',				#isMetaSide : true			},			#name : #example,			#protocol : #example,			#sourceCode : 'example\r\t| testPile |\r\tself initialize.\r\ttestPile := self new initialize: 2.\r\tself assert: testPile isEmpty.\r\ttestPile push: 1.\r\ttestPile push: 2.\r\ttestPile pop.\r\ttestPile push: 3.\r\ttestPile printOn: Transcript open',			#stamp : 'ThomasDiGiovanni 9/20/2019 11:45',			#package : #Metaprogrammation		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Pile class',				#isMetaSide : true			},			#name : #example,			#protocol : #example,			#sourceCode : 'example\r\t| testPile |\r\tself initialize.\r\ttestPile := self new.\r\tself assert: testPile isEmpty.\r\ttestPile push: 1.\r\ttestPile push: 2.\r\ttestPile pop.\r\ttestPile push: 3.\r\ttestPile printOn: Transcript open',			#stamp : 'ThomasDiGiovanni 9/20/2019 11:56',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-20T11:57:18.023845+02:00' ],		#prior : OmReference [ '134' ],		#self : OmReference [ '135' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Pile class',				#isMetaSide : true			},			#name : #example,			#protocol : #example,			#sourceCode : 'example\r\t| testPile |\r\tself initialize.\r\ttestPile := self new.\r\tself assert: testPile isEmpty.\r\ttestPile push: 1.\r\ttestPile push: 2.\r\ttestPile pop.\r\ttestPile push: 3.\r\ttestPile printOn: Transcript open',			#stamp : 'ThomasDiGiovanni 9/20/2019 11:56',			#package : #Metaprogrammation		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Pile class',				#isMetaSide : true			},			#name : #example,			#protocol : #example,			#sourceCode : 'example\r\t| testPile |\r\ttestPile := self new.\r\tself assert: testPile isEmpty.\r\ttestPile push: 1.\r\ttestPile push: 2.\r\ttestPile pop.\r\ttestPile push: 3.\r\ttestPile printOn: Transcript open',			#stamp : 'ThomasDiGiovanni 9/20/2019 11:57',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-20T11:58:54.834271+02:00' ],		#prior : OmReference [ '135' ],		#self : OmReference [ '136' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Pile class',				#isMetaSide : true			},			#name : #new,			#protocol : #'instance creation',			#sourceCode : 'new\r\tself initialize: DefaultSize',			#stamp : 'ThomasDiGiovanni 9/20/2019 11:56',			#package : #Metaprogrammation		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Pile class',				#isMetaSide : true			},			#name : #new,			#protocol : #'instance creation',			#sourceCode : 'new\r\tPile initialize: DefaultSize',			#stamp : 'ThomasDiGiovanni 9/20/2019 11:58',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-20T12:00:06.460193+02:00' ],		#prior : OmReference [ '136' ],		#self : OmReference [ '137' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Pile class',				#isMetaSide : true			},			#name : #new,			#protocol : #'instance creation',			#sourceCode : 'new\r\tPile initialize: DefaultSize',			#stamp : 'ThomasDiGiovanni 9/20/2019 11:58',			#package : #Metaprogrammation		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Pile class',				#isMetaSide : true			},			#name : #new,			#protocol : #'instance creation',			#sourceCode : 'new\r\t| newPile |\r\tnewPile := Pile new initialize: DefaultSize.\r\t^newPile',			#stamp : 'ThomasDiGiovanni 9/20/2019 12:00',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-20T12:00:22.604881+02:00' ],		#prior : OmReference [ '137' ],		#self : OmReference [ '138' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Pile class',				#isMetaSide : true			},			#name : #new,			#protocol : #'instance creation',			#sourceCode : 'new\r\t| newPile |\r\tnewPile := Pile new initialize: DefaultSize.\r\t^newPile',			#stamp : 'ThomasDiGiovanni 9/20/2019 12:00',			#package : #Metaprogrammation		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Pile class',				#isMetaSide : true			},			#name : #new,			#protocol : #'instance creation',			#sourceCode : 'new\r\t| newPile |\r\tnewPile := self new initialize: DefaultSize.\r\t^ newPile',			#stamp : 'ThomasDiGiovanni 9/20/2019 12:00',			#package : #Metaprogrammation		}	}}