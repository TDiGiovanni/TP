OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-27T09:57:27.627624+02:00' ],		#prior : OmReference [ 'Pharo7.0-SNAPSHOT-32bit-a2a2b23.2sc66s8w8yanl8o59s11il1fz', '28' ],		#self : OmReference [ '1' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #BlockClosure,				#isMetaSide : false			},			#name : #'repeatUntil:',			#protocol : #controlling,			#sourceCode : 'repeatUntil: block\r\t^ \'TODO\'',			#stamp : 'ThomasDiGiovanni 9/27/2019 09:57',			#package : #Kernel		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-27T09:57:44.623624+02:00' ],		#prior : OmReference [ '1' ],		#self : OmReference [ '2' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #BlockClosure,				#isMetaSide : false			},			#name : #'repeatUntil:',			#protocol : #controlling,			#sourceCode : 'repeatUntil: block\r\t^ \'TODO\'',			#stamp : 'ThomasDiGiovanni 9/27/2019 09:57',			#package : #Kernel		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #BlockClosure,				#isMetaSide : false			},			#name : #'repeatUntil:',			#protocol : #controlling,			#sourceCode : 'repeatUntil: block\r\r\t^ self value',			#stamp : 'ThomasDiGiovanni 9/27/2019 09:57',			#package : #Kernel		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-27T09:58:10.343624+02:00' ],		#prior : OmReference [ '2' ],		#self : OmReference [ '3' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #BlockClosure,				#isMetaSide : false			},			#name : #repeatUntil,			#protocol : #controlling,			#sourceCode : 'repeatUntil\r\r^ \'TODO\'',			#stamp : 'ThomasDiGiovanni 9/26/2019 23:08',			#package : #Kernel		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #BlockClosure,				#isMetaSide : false			},			#name : #repeatUntil,			#protocol : #'as yet unclassified',			#sourceCode : 'repeatUntil\r\r^ \'TODO\'',			#stamp : 'ThomasDiGiovanni 9/26/2019 23:08',			#package : #Kernel		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-27T09:58:10.474624+02:00' ],		#prior : OmReference [ '3' ],		#self : OmReference [ '4' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #BlockClosure,				#isMetaSide : false			},			#name : #repeatUntil,			#protocol : #controlling,			#sourceCode : 'repeatUntil\r\r^ \'TODO\'',			#stamp : 'ThomasDiGiovanni 9/26/2019 23:08',			#package : #Kernel		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-27T09:59:26.455624+02:00' ],		#prior : OmReference [ '4' ],		#self : OmReference [ '5' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #BlockClosure,				#isMetaSide : false			},			#name : #'repeatUntil:',			#protocol : #controlling,			#sourceCode : 'repeatUntil: block\r\r\t^ self value',			#stamp : 'ThomasDiGiovanni 9/27/2019 09:57',			#package : #Kernel		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #BlockClosure,				#isMetaSide : false			},			#name : #'repeatUntil:',			#protocol : #controlling,			#sourceCode : 'repeatUntil: block\r\rblock whileFalse: [ ^ self value ]\r\t',			#stamp : 'ThomasDiGiovanni 9/27/2019 09:59',			#package : #Kernel		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-27T10:02:39.485624+02:00' ],		#prior : OmReference [ '5' ],		#self : OmReference [ '6' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LinkedListe,				#isMetaSide : false			},			#name : #head,			#protocol : #'as yet unclassified',			#sourceCode : 'head\r\t^ value',			#stamp : 'ThomasDiGiovanni 9/27/2019 10:02',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-27T10:02:39.561624+02:00' ],		#prior : OmReference [ '6' ],		#self : OmReference [ '7' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LinkedListe,				#isMetaSide : false			},			#name : #head,			#protocol : #'as yet unclassified',			#sourceCode : 'head\r\t^ value',			#stamp : 'ThomasDiGiovanni 9/27/2019 10:02',			#package : #Metaprogrammation		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LinkedListe,				#isMetaSide : false			},			#name : #head,			#protocol : #accessing,			#sourceCode : 'head\r\t^ value',			#stamp : 'ThomasDiGiovanni 9/27/2019 10:02',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-27T10:02:54.247624+02:00' ],		#prior : OmReference [ '7' ],		#self : OmReference [ '8' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LinkedListe,				#isMetaSide : false			},			#name : #tail,			#protocol : #'as yet unclassified',			#sourceCode : 'tail \r^next',			#stamp : 'ThomasDiGiovanni 9/27/2019 10:02',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-27T10:02:54.306624+02:00' ],		#prior : OmReference [ '8' ],		#self : OmReference [ '9' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LinkedListe,				#isMetaSide : false			},			#name : #tail,			#protocol : #'as yet unclassified',			#sourceCode : 'tail \r^next',			#stamp : 'ThomasDiGiovanni 9/27/2019 10:02',			#package : #Metaprogrammation		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LinkedListe,				#isMetaSide : false			},			#name : #tail,			#protocol : #accessing,			#sourceCode : 'tail \r^next',			#stamp : 'ThomasDiGiovanni 9/27/2019 10:02',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-27T10:03:31.182624+02:00' ],		#prior : OmReference [ '9' ],		#self : OmReference [ '10' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#traitCompositionSource : '{}',				#superclassName : 'Object',				#definitionSource : 'Object subclass: #LinkedListe\r\tinstanceVariableNames: \'value next\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Metaprogrammation\''			},			#name : #LinkedListe,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LinkedListe,						#isMetaSide : false					},					#name : #value,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LinkedListe,						#isMetaSide : false					},					#name : #next,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'LinkedListe class\r\tinstanceVariableNames: \'\''				},				#name : #'LinkedListe class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #LinkedListe,					#isMetaSide : false				},				#parent : @7,				#content : 'Implementation d\'une liste chainee',				#stamp : 'ThomasDiGiovanni 9/27/2019 10:03'			},			#classVariables : OrderedCollection [ ],			#category : #Metaprogrammation,			#package : #Metaprogrammation,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'Implementation d\'une liste chainee',		#newStamp : 'ThomasDiGiovanni 9/27/2019 10:03'	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-27T10:04:07.364624+02:00' ],		#prior : OmReference [ '10' ],		#self : OmReference [ '11' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LinkedListe,				#isMetaSide : false			},			#name : #length,			#protocol : #'as yet unclassified',			#sourceCode : 'length \r^1 + self tail length',			#stamp : 'ThomasDiGiovanni 9/27/2019 10:04',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-27T10:04:07.403624+02:00' ],		#prior : OmReference [ '11' ],		#self : OmReference [ '12' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LinkedListe,				#isMetaSide : false			},			#name : #length,			#protocol : #'as yet unclassified',			#sourceCode : 'length \r^1 + self tail length',			#stamp : 'ThomasDiGiovanni 9/27/2019 10:04',			#package : #Metaprogrammation		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LinkedListe,				#isMetaSide : false			},			#name : #length,			#protocol : #accessing,			#sourceCode : 'length \r^1 + self tail length',			#stamp : 'ThomasDiGiovanni 9/27/2019 10:04',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-27T10:04:36.582624+02:00' ],		#prior : OmReference [ '12' ],		#self : OmReference [ '13' ]	},	#content : EpClassModification {		#oldClass : RGClassDefinition {			#annotations : IdentityDictionary {				#traitCompositionSource : '{}',				#superclassName : 'Object',				#definitionSource : 'Object subclass: #LinkedListe\r\tinstanceVariableNames: \'value next\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Metaprogrammation\''			},			#name : #LinkedListe,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LinkedListe,						#isMetaSide : false					},					#name : #value,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LinkedListe,						#isMetaSide : false					},					#name : #next,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'LinkedListe class\r\tinstanceVariableNames: \'\''				},				#name : #'LinkedListe class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #LinkedListe,					#isMetaSide : false				},				#parent : @7,				#content : 'Implementation d\'une liste chainee',				#stamp : 'ThomasDiGiovanni 9/27/2019 10:03'			},			#classVariables : OrderedCollection [ ],			#category : #Metaprogrammation,			#package : #Metaprogrammation,			#sharedPools : OrderedCollection [ ]		},		#newClass : RGClassDefinition {			#annotations : IdentityDictionary {				#traitCompositionSource : '{}',				#superclassName : 'Object',				#definitionSource : 'Object subclass: #LinkedListe\r\tinstanceVariableNames: \'head tail\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Metaprogrammation\''			},			#name : #LinkedListe,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LinkedListe,						#isMetaSide : false					},					#name : #head,					#parent : @25				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #LinkedListe,						#isMetaSide : false					},					#name : #tail,					#parent : @25				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'LinkedListe class\r\tinstanceVariableNames: \'\''				},				#name : #'LinkedListe class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @25			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #LinkedListe,					#isMetaSide : false				},				#parent : @25,				#content : 'Implementation d\'une liste chainee',				#stamp : 'ThomasDiGiovanni 9/27/2019 10:03'			},			#classVariables : OrderedCollection [ ],			#category : #Metaprogrammation,			#package : #Metaprogrammation,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-27T10:04:42.795624+02:00' ],		#prior : OmReference [ '13' ],		#self : OmReference [ '14' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LinkedListe,				#isMetaSide : false			},			#name : #tail,			#protocol : #accessing,			#sourceCode : 'tail \r^next',			#stamp : 'ThomasDiGiovanni 9/27/2019 10:02',			#package : #Metaprogrammation		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LinkedListe,				#isMetaSide : false			},			#name : #tail,			#protocol : #accessing,			#sourceCode : 'tail\r\t^ tail',			#stamp : 'ThomasDiGiovanni 9/27/2019 10:04',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-27T10:04:50.190624+02:00' ],		#prior : OmReference [ '14' ],		#self : OmReference [ '15' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LinkedListe,				#isMetaSide : false			},			#name : #head,			#protocol : #accessing,			#sourceCode : 'head\r\t^ value',			#stamp : 'ThomasDiGiovanni 9/27/2019 10:02',			#package : #Metaprogrammation		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LinkedListe,				#isMetaSide : false			},			#name : #head,			#protocol : #accessing,			#sourceCode : 'head\r\t^ head',			#stamp : 'ThomasDiGiovanni 9/27/2019 10:04',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-27T10:05:37.647624+02:00' ],		#prior : OmReference [ '15' ],		#self : OmReference [ '16' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LinkedListe,				#isMetaSide : false			},			#name : #'do:',			#protocol : #enumerating,			#sourceCode : 'do: block\r\t^\'TODO\'',			#stamp : 'ThomasDiGiovanni 9/20/2019 15:10',			#package : #Metaprogrammation		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LinkedListe,				#isMetaSide : false			},			#name : #'do:',			#protocol : #enumerating,			#sourceCode : 'do: block\r\t^ self head block value ',			#stamp : 'ThomasDiGiovanni 9/27/2019 10:05',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-27T10:06:48.525624+02:00' ],		#prior : OmReference [ '16' ],		#self : OmReference [ '17' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #UndefinedObject,				#isMetaSide : false			},			#name : #length,			#protocol : #'as yet unclassified',			#sourceCode : 'length \r^0',			#stamp : 'ThomasDiGiovanni 9/27/2019 10:06',			#package : #Kernel		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-27T10:06:48.593624+02:00' ],		#prior : OmReference [ '17' ],		#self : OmReference [ '18' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #UndefinedObject,				#isMetaSide : false			},			#name : #length,			#protocol : #'as yet unclassified',			#sourceCode : 'length \r^0',			#stamp : 'ThomasDiGiovanni 9/27/2019 10:06',			#package : #Kernel		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #UndefinedObject,				#isMetaSide : false			},			#name : #length,			#protocol : #accessing,			#sourceCode : 'length \r^0',			#stamp : 'ThomasDiGiovanni 9/27/2019 10:06',			#package : #Kernel		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-27T10:07:16.055624+02:00' ],		#prior : OmReference [ '18' ],		#self : OmReference [ '19' ]	},	#content : EpProtocolRemoval {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#traitCompositionSource : '{}',				#superclassName : 'Object',				#definitionSource : 'Object subclass: #UndefinedObject\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Kernel-Objects\''			},			#name : #UndefinedObject,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'UndefinedObject class\r\tinstanceVariableNames: \'\''				},				#name : #'UndefinedObject class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #UndefinedObject,					#isMetaSide : false				},				#parent : @7,				#content : 'I describe the behavior of my sole instance, nil. nil represents a prior value for variables that have not been initialized, or for results which are meaningless.',				#stamp : ''			},			#classVariables : OrderedCollection [ ],			#category : #Kernel-Objects,			#package : #Kernel,			#sharedPools : OrderedCollection [ ]		},		#protocol : #accessing	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-27T10:07:16.066624+02:00' ],		#prior : OmReference [ '19' ],		#self : OmReference [ '20' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #UndefinedObject,				#isMetaSide : false			},			#name : #length,			#protocol : #accessing,			#sourceCode : 'length \r^0',			#stamp : 'ThomasDiGiovanni 9/27/2019 10:06',			#package : #Kernel		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #UndefinedObject,				#isMetaSide : false			},			#name : #length,			#protocol : #list,			#sourceCode : 'length \r^0',			#stamp : 'ThomasDiGiovanni 9/27/2019 10:06',			#package : #Kernel		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-27T10:08:48.111624+02:00' ],		#prior : OmReference [ '20' ],		#self : OmReference [ '21' ]	},	#content : EpBehaviorCategoryChange {		#oldCategory : #Metaprogrammation,		#newCategory : #Metaprogrammation-Manifest,		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#traitCompositionSource : '{}',				#superclassName : 'PackageManifest',				#definitionSource : 'PackageManifest subclass: #ManifestMetaprogrammation\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Metaprogrammation-Manifest\''			},			#name : #ManifestMetaprogrammation,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'ManifestMetaprogrammation class\r\tinstanceVariableNames: \'\''				},				#name : #'ManifestMetaprogrammation class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #ManifestMetaprogrammation,					#isMetaSide : false				},				#parent : @7,				#content : 'HMIN305 - Metaprogrammation et reflexivite',				#stamp : 'ThomasDiGiovanni 9/26/2019 14:00'			},			#classVariables : OrderedCollection [ ],			#category : #Metaprogrammation-Manifest,			#package : #Metaprogrammation,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-27T10:11:19.913624+02:00' ],		#prior : OmReference [ '21' ],		#self : OmReference [ '22' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Counter class',				#isMetaSide : true			},			#name : #create,			#protocol : #'as yet unclassified',			#sourceCode : 'create\r\t| x |\r\tx := 0.\r\t^ [ x := x + 1 ]',			#stamp : 'ThomasDiGiovanni 9/27/2019 10:11',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-27T10:11:19.985624+02:00' ],		#prior : OmReference [ '22' ],		#self : OmReference [ '23' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Counter class',				#isMetaSide : true			},			#name : #create,			#protocol : #'as yet unclassified',			#sourceCode : 'create\r\t| x |\r\tx := 0.\r\t^ [ x := x + 1 ]',			#stamp : 'ThomasDiGiovanni 9/27/2019 10:11',			#package : #Metaprogrammation		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Counter class',				#isMetaSide : true			},			#name : #create,			#protocol : #operations,			#sourceCode : 'create\r\t| x |\r\tx := 0.\r\t^ [ x := x + 1 ]',			#stamp : 'ThomasDiGiovanni 9/27/2019 10:11',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-27T10:11:27.420624+02:00' ],		#prior : OmReference [ '23' ],		#self : OmReference [ '24' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Counter,				#isMetaSide : false			},			#name : #create,			#protocol : #operations,			#sourceCode : 'create\r\t|x|\r\tx := 0.\r\t^ [x :=x+ 1 ]',			#stamp : 'ThomasDiGiovanni 9/26/2019 14:02',			#package : #Metaprogrammation		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Counter,				#isMetaSide : false			},			#name : #create,			#protocol : #'as yet unclassified',			#sourceCode : 'create\r\t|x|\r\tx := 0.\r\t^ [x :=x+ 1 ]',			#stamp : 'ThomasDiGiovanni 9/26/2019 14:02',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-27T10:11:27.507624+02:00' ],		#prior : OmReference [ '24' ],		#self : OmReference [ '25' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Counter,				#isMetaSide : false			},			#name : #create,			#protocol : #operations,			#sourceCode : 'create\r\t|x|\r\tx := 0.\r\t^ [x :=x+ 1 ]',			#stamp : 'ThomasDiGiovanni 9/26/2019 14:02',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-27T10:11:27.509624+02:00' ],		#prior : OmReference [ '25' ],		#self : OmReference [ '26' ]	},	#content : EpProtocolRemoval {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#traitCompositionSource : '{}',				#superclassName : 'Object',				#definitionSource : 'Object subclass: #Counter\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Metaprogrammation\''			},			#name : #Counter,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'Counter class\r\tinstanceVariableNames: \'\''				},				#name : #'Counter class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Counter,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Metaprogrammation,			#package : #Metaprogrammation,			#sharedPools : OrderedCollection [ ]		},		#protocol : #operations	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-27T10:13:43.051624+02:00' ],		#prior : OmReference [ '26' ],		#self : OmReference [ '27' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #BlockClosure,				#isMetaSide : false			},			#name : #'repeatUntil:',			#protocol : #controlling,			#sourceCode : 'repeatUntil: block\r\rblock whileFalse: [ ^ self value ]\r\t',			#stamp : 'ThomasDiGiovanni 9/27/2019 09:59',			#package : #Kernel		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #BlockClosure,				#isMetaSide : false			},			#name : #'repeatUntil:',			#protocol : #controlling,			#sourceCode : 'repeatUntil: block\r\t',			#stamp : 'ThomasDiGiovanni 9/27/2019 10:13',			#package : #Kernel		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-27T10:23:03.304624+02:00' ],		#prior : OmReference [ '27' ],		#self : OmReference [ '28' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #BlockClosure,				#isMetaSide : false			},			#name : #'repeatUntil:',			#protocol : #controlling,			#sourceCode : 'repeatUntil: block\r\t',			#stamp : 'ThomasDiGiovanni 9/27/2019 10:13',			#package : #Kernel		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #BlockClosure,				#isMetaSide : false			},			#name : #'repeatUntil:',			#protocol : #controlling,			#sourceCode : 'repeatUntil: block\r\tblock value \r\tifTrue: [ self repeatUntil: block ]',			#stamp : 'ThomasDiGiovanni 9/27/2019 10:23',			#package : #Kernel		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-27T10:27:20.335624+02:00' ],		#prior : OmReference [ '28' ],		#self : OmReference [ '29' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LinkedListe,				#isMetaSide : false			},			#name : #'add:',			#protocol : #'as yet unclassified',			#sourceCode : 'add: element\r',			#stamp : 'ThomasDiGiovanni 9/27/2019 10:27',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-27T10:27:20.353624+02:00' ],		#prior : OmReference [ '29' ],		#self : OmReference [ '30' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LinkedListe,				#isMetaSide : false			},			#name : #'add:',			#protocol : #'as yet unclassified',			#sourceCode : 'add: element\r',			#stamp : 'ThomasDiGiovanni 9/27/2019 10:27',			#package : #Metaprogrammation		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LinkedListe,				#isMetaSide : false			},			#name : #'add:',			#protocol : #adding,			#sourceCode : 'add: element\r',			#stamp : 'ThomasDiGiovanni 9/27/2019 10:27',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-27T10:27:32.554624+02:00' ],		#prior : OmReference [ '30' ],		#self : OmReference [ '31' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LinkedListe,				#isMetaSide : false			},			#name : #'append:',			#protocol : #'as yet unclassified',			#sourceCode : 'append: list',			#stamp : 'ThomasDiGiovanni 9/27/2019 10:27',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-27T10:27:32.619624+02:00' ],		#prior : OmReference [ '31' ],		#self : OmReference [ '32' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LinkedListe,				#isMetaSide : false			},			#name : #'append:',			#protocol : #'as yet unclassified',			#sourceCode : 'append: list',			#stamp : 'ThomasDiGiovanni 9/27/2019 10:27',			#package : #Metaprogrammation		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LinkedListe,				#isMetaSide : false			},			#name : #'append:',			#protocol : #accessing,			#sourceCode : 'append: list',			#stamp : 'ThomasDiGiovanni 9/27/2019 10:27',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-27T10:28:33.659624+02:00' ],		#prior : OmReference [ '32' ],		#self : OmReference [ '33' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LinkedListe,				#isMetaSide : false			},			#name : #'append:',			#protocol : #accessing,			#sourceCode : 'append: list',			#stamp : 'ThomasDiGiovanni 9/27/2019 10:27',			#package : #Metaprogrammation		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #LinkedListe,				#isMetaSide : false			},			#name : #'append:',			#protocol : #accessing,			#sourceCode : 'append: list\r\t^ tail append: list',			#stamp : 'ThomasDiGiovanni 9/27/2019 10:28',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-27T10:29:27.105624+02:00' ],		#prior : OmReference [ '33' ],		#self : OmReference [ '34' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#traitCompositionSource : '{}',				#superclassName : 'Object',				#definitionSource : 'Object subclass: #List\r\tinstanceVariableNames: \'head tail\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Metaprogrammation\''			},			#name : #List,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #List,						#isMetaSide : false					},					#name : #head,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #List,						#isMetaSide : false					},					#name : #tail,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'List class\r\tinstanceVariableNames: \'\''				},				#name : #'List class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #List,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Metaprogrammation,			#package : #Metaprogrammation,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-27T10:29:36.751624+02:00' ],		#prior : OmReference [ '34' ],		#self : OmReference [ '35' ]	},	#content : EpGenericRefactoring {		#storeString : '(RBRemoveClassRefactoring classNames: #(#List ))'	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#prior : OmReference [ '35' ],		#self : OmReference [ '36' ],		#time : DateAndTime [ '2019-09-27T10:29:36.926624+02:00' ],		#trigger : @3	},	#content : EpClassRemoval {		#classRemoved : RGClassDefinition {			#annotations : IdentityDictionary {				#traitCompositionSource : '{}',				#superclassName : 'Object',				#definitionSource : 'Object subclass: #List\r\tinstanceVariableNames: \'head tail\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: #Metaprogrammation'			},			#name : #List,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #AnObsoleteList,						#isMetaSide : false					},					#name : #head,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #AnObsoleteList,						#isMetaSide : false					},					#name : #tail,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'List class\r\tinstanceVariableNames: \'\''				},				#name : #'AnObsoleteList class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #AnObsoleteList,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Metaprogrammation,			#package : #Metaprogrammation,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-27T10:29:43.163624+02:00' ],		#prior : OmReference [ '36' ],		#self : OmReference [ '37' ]	},	#content : EpBehaviorNameChange {		#oldName : #LinkedListe,		#newName : #List,		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#traitCompositionSource : '{}',				#superclassName : 'Object',				#definitionSource : 'Object subclass: #List\r\tinstanceVariableNames: \'head tail\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Metaprogrammation\''			},			#name : #List,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #List,						#isMetaSide : false					},					#name : #head,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #List,						#isMetaSide : false					},					#name : #tail,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'List class\r\tinstanceVariableNames: \'\''				},				#name : #'List class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #List,					#isMetaSide : false				},				#parent : @7,				#content : 'Implementation d\'une liste chainee',				#stamp : 'ThomasDiGiovanni 9/27/2019 10:03'			},			#classVariables : OrderedCollection [ ],			#category : #Metaprogrammation,			#package : #Metaprogrammation,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-27T10:30:33.391624+02:00' ],		#prior : OmReference [ '37' ],		#self : OmReference [ '38' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #List,				#isMetaSide : false			},			#name : #'addFirst:',			#protocol : #adding,			#sourceCode : 'addFirst: element\r\t^ List new head: element tail: self',			#stamp : 'ThomasDiGiovanni 9/27/2019 10:30',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-27T10:33:24.176624+02:00' ],		#prior : OmReference [ '38' ],		#self : OmReference [ '39' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ManifestMetaprogrammation class',				#isMetaSide : true			},			#name : #ruleReTestClassNotInPackageWithTestEndingNameV1FalsePositive,			#protocol : #code-critics,			#sourceCode : 'ruleReTestClassNotInPackageWithTestEndingNameV1FalsePositive\r\t^ #()',			#stamp : 'ThomasDiGiovanni 9/27/2019 10:33',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-27T10:33:24.196624+02:00' ],		#prior : OmReference [ '39' ],		#self : OmReference [ '40' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ManifestMetaprogrammation class',				#isMetaSide : true			},			#name : #ruleReTestClassNotInPackageWithTestEndingNameV1FalsePositive,			#protocol : #code-critics,			#sourceCode : 'ruleReTestClassNotInPackageWithTestEndingNameV1FalsePositive\r\t^ #()',			#stamp : 'ThomasDiGiovanni 9/27/2019 10:33',			#package : #Metaprogrammation		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ManifestMetaprogrammation class',				#isMetaSide : true			},			#name : #ruleReTestClassNotInPackageWithTestEndingNameV1FalsePositive,			#protocol : #code-critics,			#sourceCode : 'ruleReTestClassNotInPackageWithTestEndingNameV1FalsePositive\r\t^ #(#(#(#RGPackage #(#Metaprogrammation)) #\'2019-09-27T10:33:24.180624+02:00\') )',			#stamp : 'ThomasDiGiovanni 9/27/2019 10:33',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-27T10:33:38.469624+02:00' ],		#prior : OmReference [ '40' ],		#self : OmReference [ '41' ]	},	#content : EpClassModification {		#oldClass : RGClassDefinition {			#annotations : IdentityDictionary {				#traitCompositionSource : '{}',				#superclassName : 'TestCase',				#definitionSource : 'TestCase subclass: #PileTest\r\tinstanceVariableNames: \'empty full\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Metaprogrammation\''			},			#name : #PileTest,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PileTest,						#isMetaSide : false					},					#name : #empty,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PileTest,						#isMetaSide : false					},					#name : #full,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'PileTest class\r\tinstanceVariableNames: \'\''				},				#name : #'PileTest class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PileTest,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Metaprogrammation,			#package : #Metaprogrammation,			#sharedPools : OrderedCollection [ ]		},		#newClass : RGClassDefinition {			#annotations : IdentityDictionary {				#traitCompositionSource : '{}',				#superclassName : 'TestCase',				#definitionSource : 'TestCase subclass: #PileTest\r\tinstanceVariableNames: \'emptyInstance fullInstance\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Metaprogrammation\''			},			#name : #PileTest,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PileTest,						#isMetaSide : false					},					#name : #emptyInstance,					#parent : @25				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PileTest,						#isMetaSide : false					},					#name : #fullInstance,					#parent : @25				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'PileTest class\r\tinstanceVariableNames: \'\''				},				#name : #'PileTest class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @25			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PileTest,					#isMetaSide : false				},				#parent : @25,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Metaprogrammation,			#package : #Metaprogrammation,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-27T10:33:50.571624+02:00' ],		#prior : OmReference [ '41' ],		#self : OmReference [ '42' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PileTest,				#isMetaSide : false			},			#name : #testInclude,			#protocol : #tests,			#sourceCode : 'testInclude\r\tself assert: (full includes: \'Test\').\r\tself assert: (full includes: \'Pile\')',			#stamp : 'ThomasDiGiovanni 9/20/2019 12:13',			#package : #Metaprogrammation		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PileTest,				#isMetaSide : false			},			#name : #testInclude,			#protocol : #tests,			#sourceCode : 'testInclude\r\tself assert: (fullInstance includes: \'Test\').\r\tself assert: (fullInstance includes: \'Pile\')',			#stamp : 'ThomasDiGiovanni 9/27/2019 10:33',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-27T10:34:04.623624+02:00' ],		#prior : OmReference [ '42' ],		#self : OmReference [ '43' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PileTest,				#isMetaSide : false			},			#name : #setUp,			#protocol : #running,			#sourceCode : 'setUp\r\tsuper setUp.\r\tempty := Pile new initialize: 2.\r\tfull := (Pile new initialize: 2) push: \'Test\'.\r\tfull push: \'Pile\'',			#stamp : 'ThomasDiGiovanni 9/20/2019 12:13',			#package : #Metaprogrammation		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PileTest,				#isMetaSide : false			},			#name : #setUp,			#protocol : #running,			#sourceCode : 'setUp\r\tsuper setUp.\r\temptyInstance := Pile new initialize: 2.\r\tfullInstance := (Pile new initialize: 2) push: \'Test\'.\r\tfullInstance push: \'Pile\'',			#stamp : 'ThomasDiGiovanni 9/27/2019 10:34',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-27T10:34:57.414624+02:00' ],		#prior : OmReference [ '43' ],		#self : OmReference [ '44' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PileTest,				#isMetaSide : false			},			#name : #test,			#protocol : #tests,			#sourceCode : 'test\r\tself assert: (emptyInstance isEmpty).\r\tself assert: (fullInstance isFull).',			#stamp : 'ThomasDiGiovanni 9/27/2019 10:34',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-27T10:35:03.974624+02:00' ],		#prior : OmReference [ '44' ],		#self : OmReference [ '45' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PileTest,				#isMetaSide : false			},			#name : #testInclude,			#protocol : #tests,			#sourceCode : 'testInclude\r\tself assert: (fullInstance includes: \'Test\').\r\tself assert: (fullInstance includes: \'Pile\')',			#stamp : 'ThomasDiGiovanni 9/27/2019 10:33',			#package : #Metaprogrammation		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PileTest,				#isMetaSide : false			},			#name : #testInclude,			#protocol : #'as yet unclassified',			#sourceCode : 'testInclude\r\tself assert: (fullInstance includes: \'Test\').\r\tself assert: (fullInstance includes: \'Pile\')',			#stamp : 'ThomasDiGiovanni 9/27/2019 10:33',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-27T10:35:04.085624+02:00' ],		#prior : OmReference [ '45' ],		#self : OmReference [ '46' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PileTest,				#isMetaSide : false			},			#name : #testInclude,			#protocol : #tests,			#sourceCode : 'testInclude\r\tself assert: (fullInstance includes: \'Test\').\r\tself assert: (fullInstance includes: \'Pile\')',			#stamp : 'ThomasDiGiovanni 9/27/2019 10:33',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-27T10:35:31.934624+02:00' ],		#prior : OmReference [ '46' ],		#self : OmReference [ '47' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #List,				#isMetaSide : false			},			#name : #'do:',			#protocol : #enumerating,			#sourceCode : 'do: block\r\t^ self head block value ',			#stamp : 'ThomasDiGiovanni 9/27/2019 10:05',			#package : #Metaprogrammation		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #List,				#isMetaSide : false			},			#name : #'do:',			#protocol : #enumerating,			#sourceCode : 'do: block\r\t^ \'TODO\'',			#stamp : 'ThomasDiGiovanni 9/27/2019 10:35',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-27T10:35:41.766624+02:00' ],		#prior : OmReference [ '47' ],		#self : OmReference [ '48' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #List,				#isMetaSide : false			},			#name : #'add:',			#protocol : #adding,			#sourceCode : 'add: element\r',			#stamp : 'ThomasDiGiovanni 9/27/2019 10:27',			#package : #Metaprogrammation		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #List,				#isMetaSide : false			},			#name : #'add:',			#protocol : #'as yet unclassified',			#sourceCode : 'add: element\r',			#stamp : 'ThomasDiGiovanni 9/27/2019 10:27',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-27T10:35:41.796624+02:00' ],		#prior : OmReference [ '48' ],		#self : OmReference [ '49' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #List,				#isMetaSide : false			},			#name : #'add:',			#protocol : #adding,			#sourceCode : 'add: element\r',			#stamp : 'ThomasDiGiovanni 9/27/2019 10:27',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-27T10:37:02.072624+02:00' ],		#prior : OmReference [ '49' ],		#self : OmReference [ '50' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #List,				#isMetaSide : false			},			#name : #'head:tail:',			#protocol : #'as yet unclassified',			#sourceCode : 'head: newHead tail: newTail\rhead := newHead.\rtail := newTail.',			#stamp : 'ThomasDiGiovanni 9/27/2019 10:37',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-27T10:37:24.513624+02:00' ],		#prior : OmReference [ '50' ],		#self : OmReference [ '51' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #List,				#isMetaSide : false			},			#name : #'addFirst:',			#protocol : #adding,			#sourceCode : 'addFirst: element\r\t^ List new head: element tail: self',			#stamp : 'ThomasDiGiovanni 9/27/2019 10:30',			#package : #Metaprogrammation		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #List,				#isMetaSide : false			},			#name : #'addFirst:',			#protocol : #adding,			#sourceCode : 'addFirst: element\r\t^ self new head: element tail: self',			#stamp : 'ThomasDiGiovanni 9/27/2019 10:37',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-27T10:41:19.449624+02:00' ],		#prior : OmReference [ '51' ],		#self : OmReference [ '52' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #List,				#isMetaSide : false			},			#name : #'addFirst:',			#protocol : #adding,			#sourceCode : 'addFirst: element\r\t^ self new head: element tail: self',			#stamp : 'ThomasDiGiovanni 9/27/2019 10:37',			#package : #Metaprogrammation		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #List,				#isMetaSide : false			},			#name : #'addFirst:',			#protocol : #adding,			#sourceCode : 'addFirst: element\r\t^ List new head: element tail: self',			#stamp : 'ThomasDiGiovanni 9/27/2019 10:41',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-27T10:41:28.168624+02:00' ],		#prior : OmReference [ '52' ],		#self : OmReference [ '53' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #List,				#isMetaSide : false			},			#name : #'addFirst:',			#protocol : #adding,			#sourceCode : 'addFirst: element\r\t^ List new head: element tail: self',			#stamp : 'ThomasDiGiovanni 9/27/2019 10:41',			#package : #Metaprogrammation		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #List,				#isMetaSide : false			},			#name : #'addFirst:',			#protocol : #adding,			#sourceCode : 'addFirst: element\r\t^ self class new head: element tail: self',			#stamp : 'ThomasDiGiovanni 9/27/2019 10:41',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-27T10:42:20.787624+02:00' ],		#prior : OmReference [ '53' ],		#self : OmReference [ '54' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #List,				#isMetaSide : false			},			#name : #'head:tail:',			#protocol : #'as yet unclassified',			#sourceCode : 'head: newHead tail: newTail\rhead := newHead.\rtail := newTail.',			#stamp : 'ThomasDiGiovanni 9/27/2019 10:37',			#package : #Metaprogrammation		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #List,				#isMetaSide : false			},			#name : #'head:tail:',			#protocol : #accessing,			#sourceCode : 'head: newHead tail: newTail\rhead := newHead.\rtail := newTail.',			#stamp : 'ThomasDiGiovanni 9/27/2019 10:37',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-27T10:44:30.552624+02:00' ],		#prior : OmReference [ '54' ],		#self : OmReference [ '55' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PileTest,				#isMetaSide : false			},			#name : #setUp,			#protocol : #running,			#sourceCode : 'setUp\r\tsuper setUp.\r\temptyInstance := Pile new initialize: 2.\r\tfullInstance := (Pile new initialize: 2) push: \'Test\'.\r\tfullInstance push: \'Pile\'',			#stamp : 'ThomasDiGiovanni 9/27/2019 10:34',			#package : #Metaprogrammation		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PileTest,				#isMetaSide : false			},			#name : #setUp,			#protocol : #running,			#sourceCode : 'setUp\r\tsuper setUp.\r\temptyInstance := Pile new initialize: 2.\r\tfullInstance := Pile new initialize: 2.\r\tfullInstance push: \'Test\'.\r\tfullInstance push: \'Pile\'',			#stamp : 'ThomasDiGiovanni 9/27/2019 10:44',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-27T10:44:49.376624+02:00' ],		#prior : OmReference [ '55' ],		#self : OmReference [ '56' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PileTest,				#isMetaSide : false			},			#name : #test,			#protocol : #tests,			#sourceCode : 'test\r\tself assert: (emptyInstance isEmpty).\r\tself assert: (fullInstance isFull).',			#stamp : 'ThomasDiGiovanni 9/27/2019 10:34',			#package : #Metaprogrammation		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PileTest,				#isMetaSide : false			},			#name : #test,			#protocol : #tests,			#sourceCode : 'test\r\tself assert: emptyInstance isEmpty.\r\tself deny emptyInstance isFull.\r\tself assert: fullInstance isFull',			#stamp : 'ThomasDiGiovanni 9/27/2019 10:44',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-27T10:45:19.690624+02:00' ],		#prior : OmReference [ '56' ],		#self : OmReference [ '57' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PileTest,				#isMetaSide : false			},			#name : #test,			#protocol : #tests,			#sourceCode : 'test\r\tself assert: emptyInstance isEmpty.\r\tself deny emptyInstance isFull.\r\tself assert: fullInstance isFull',			#stamp : 'ThomasDiGiovanni 9/27/2019 10:44',			#package : #Metaprogrammation		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PileTest,				#isMetaSide : false			},			#name : #test,			#protocol : #tests,			#sourceCode : 'test\r\tself assert: emptyInstance isEmpty.\r\tself deny: emptyInstance isFull.\r\tself assert: fullInstance isFull.\r\tself deny: fullInstance isEmpty.',			#stamp : 'ThomasDiGiovanni 9/27/2019 10:45',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-27T10:45:42.869624+02:00' ],		#prior : OmReference [ '57' ],		#self : OmReference [ '58' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#traitCompositionSource : '{}',				#superclassName : 'TestCase',				#definitionSource : 'TestCase subclass: #PileTest\r\tinstanceVariableNames: \'emptyInstance fullInstance\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Metaprogrammation\''			},			#name : #PileTest,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PileTest,						#isMetaSide : false					},					#name : #emptyInstance,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PileTest,						#isMetaSide : false					},					#name : #fullInstance,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'PileTest class\r\tinstanceVariableNames: \'\''				},				#name : #'PileTest class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PileTest,					#isMetaSide : false				},				#parent : @7,				#content : 'Jeux de test de la classe Pile',				#stamp : 'ThomasDiGiovanni 9/27/2019 10:45'			},			#classVariables : OrderedCollection [ ],			#category : #Metaprogrammation,			#package : #Metaprogrammation,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'Jeux de test de la classe Pile',		#newStamp : 'ThomasDiGiovanni 9/27/2019 10:45'	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-27T10:45:55.380624+02:00' ],		#prior : OmReference [ '58' ],		#self : OmReference [ '59' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#traitCompositionSource : '{}',				#superclassName : 'Object',				#definitionSource : 'Object subclass: #Counter\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Metaprogrammation\''			},			#name : #Counter,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'Counter class\r\tinstanceVariableNames: \'\''				},				#name : #'Counter class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Counter,					#isMetaSide : false				},				#parent : @7,				#content : 'Standart implementation of a counter.',				#stamp : 'ThomasDiGiovanni 9/27/2019 10:45'			},			#classVariables : OrderedCollection [ ],			#category : #Metaprogrammation,			#package : #Metaprogrammation,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'Standart implementation of a counter.',		#newStamp : 'ThomasDiGiovanni 9/27/2019 10:45'	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-27T10:46:07.596624+02:00' ],		#prior : OmReference [ '59' ],		#self : OmReference [ '60' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#traitCompositionSource : '{}',				#superclassName : 'Object',				#definitionSource : 'Object subclass: #List\r\tinstanceVariableNames: \'head tail\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Metaprogrammation\''			},			#name : #List,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #List,						#isMetaSide : false					},					#name : #head,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #List,						#isMetaSide : false					},					#name : #tail,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'List class\r\tinstanceVariableNames: \'\''				},				#name : #'List class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #List,					#isMetaSide : false				},				#parent : @7,				#content : 'Standart implementation of a linked list.',				#stamp : 'ThomasDiGiovanni 9/27/2019 10:46'			},			#classVariables : OrderedCollection [ ],			#category : #Metaprogrammation,			#package : #Metaprogrammation,			#sharedPools : OrderedCollection [ ]		},		#oldComment : 'Implementation d\'une liste chainee',		#newComment : 'Standart implementation of a linked list.',		#oldStamp : 'ThomasDiGiovanni 9/27/2019 10:03',		#newStamp : 'ThomasDiGiovanni 9/27/2019 10:46'	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-27T10:47:47.194624+02:00' ],		#prior : OmReference [ '60' ],		#self : OmReference [ '61' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #List,				#isMetaSide : false			},			#name : #'append:',			#protocol : #accessing,			#sourceCode : 'append: list\r\t^ tail append: list',			#stamp : 'ThomasDiGiovanni 9/27/2019 10:28',			#package : #Metaprogrammation		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #List,				#isMetaSide : false			},			#name : #'append:',			#protocol : #accessing,			#sourceCode : 'append: list\r\t^ (tail append: list) addFirst: head',			#stamp : 'ThomasDiGiovanni 9/27/2019 10:47',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-27T10:48:24.138624+02:00' ],		#prior : OmReference [ '61' ],		#self : OmReference [ '62' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #UndefinedObject,				#isMetaSide : false			},			#name : #'addFirst:',			#protocol : #list,			#sourceCode : 'addFirst: element',			#stamp : 'ThomasDiGiovanni 9/27/2019 10:48',			#package : #Kernel		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-27T10:48:42.679624+02:00' ],		#prior : OmReference [ '62' ],		#self : OmReference [ '63' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #UndefinedObject,				#isMetaSide : false			},			#name : #head,			#protocol : #list,			#sourceCode : 'head\r^ nil',			#stamp : 'ThomasDiGiovanni 9/27/2019 10:48',			#package : #Kernel		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-27T10:48:49.790624+02:00' ],		#prior : OmReference [ '63' ],		#self : OmReference [ '64' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #UndefinedObject,				#isMetaSide : false			},			#name : #tail,			#protocol : #list,			#sourceCode : 'tail \r^nil',			#stamp : 'ThomasDiGiovanni 9/27/2019 10:48',			#package : #Kernel		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-27T10:49:07.215624+02:00' ],		#prior : OmReference [ '64' ],		#self : OmReference [ '65' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #UndefinedObject,				#isMetaSide : false			},			#name : #'append:',			#protocol : #list,			#sourceCode : 'append: list\r^ list',			#stamp : 'ThomasDiGiovanni 9/27/2019 10:49',			#package : #Kernel		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-27T10:50:33.711624+02:00' ],		#prior : OmReference [ '65' ],		#self : OmReference [ '66' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #UndefinedObject,				#isMetaSide : false			},			#name : #'addFirst:',			#protocol : #list,			#sourceCode : 'addFirst: element',			#stamp : 'ThomasDiGiovanni 9/27/2019 10:48',			#package : #Kernel		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #UndefinedObject,				#isMetaSide : false			},			#name : #'addFirst:',			#protocol : #list,			#sourceCode : 'addFirst: element\r\t^ List new head: element tail: nil',			#stamp : 'ThomasDiGiovanni 9/27/2019 10:50',			#package : #Kernel		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-27T10:50:52.144624+02:00' ],		#prior : OmReference [ '66' ],		#self : OmReference [ '67' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #UndefinedObject,				#isMetaSide : false			},			#name : #'do:',			#protocol : #list,			#sourceCode : 'do: block\r^\'TODO\'',			#stamp : 'ThomasDiGiovanni 9/27/2019 10:50',			#package : #Kernel		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-27T10:54:12.559624+02:00' ],		#prior : OmReference [ '67' ],		#self : OmReference [ '68' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #BlockClosure,				#isMetaSide : false			},			#name : #'repeatUntil:',			#protocol : #controlling,			#sourceCode : 'repeatUntil: block\r\tblock value \r\tifTrue: [ self repeatUntil: block ]',			#stamp : 'ThomasDiGiovanni 9/27/2019 10:23',			#package : #Kernel		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #BlockClosure,				#isMetaSide : false			},			#name : #'repeatUntil:',			#protocol : #controlling,			#sourceCode : 'repeatUntil: block\r\tblock value\r\t\tifTrue: [ self value.\r\t\t\tself repeatUntil: block ]',			#stamp : 'ThomasDiGiovanni 9/27/2019 10:54',			#package : #Kernel		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-27T10:54:25.019624+02:00' ],		#prior : OmReference [ '68' ],		#self : OmReference [ '69' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #BlockClosure,				#isMetaSide : false			},			#name : #'repeatUntil:',			#protocol : #controlling,			#sourceCode : 'repeatUntil: block\r\tblock value\r\t\tifTrue: [ self value.\r\t\t\tself repeatUntil: block ]',			#stamp : 'ThomasDiGiovanni 9/27/2019 10:54',			#package : #Kernel		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #BlockClosure,				#isMetaSide : false			},			#name : #'repeatUntil:',			#protocol : #controlling,			#sourceCode : 'repeatUntil: block\r\tblock value\r\t\tifFalse: [ self value.\r\t\t\tself repeatUntil: block ]',			#stamp : 'ThomasDiGiovanni 9/27/2019 10:54',			#package : #Kernel		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-27T10:54:57.440624+02:00' ],		#prior : OmReference [ '69' ],		#self : OmReference [ '70' ]	},	#content : EpCompositeRefactoring {		#childrenRefactorings : [ ]	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#prior : OmReference [ '70' ],		#self : OmReference [ '71' ],		#time : DateAndTime [ '2019-09-27T10:54:57.691624+02:00' ],		#trigger : @3	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #BlockClosure,				#isMetaSide : false			},			#name : #'repeatUntil:',			#protocol : #controlling,			#sourceCode : 'repeatUntil: block\r\tblock value\r\t\tifFalse: [ self value.\r\t\t\tself repeatUntil: block ]',			#stamp : 'ThomasDiGiovanni 9/27/2019 10:54',			#package : #Kernel		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #BlockClosure,				#isMetaSide : false			},			#name : #'repeatUntil:',			#protocol : #controlling,			#sourceCode : 'repeatUntil: block\r\tblock value\r\t\tifTrue: [ ^ self ].\r\tself value.\r\tself repeatUntil: block',			#stamp : 'ThomasDiGiovanni 9/27/2019 10:54',			#package : #Kernel		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-27T10:55:16.755624+02:00' ],		#prior : OmReference [ '71' ],		#self : OmReference [ '72' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #BlockClosure,				#isMetaSide : false			},			#name : #'repeatUntil:',			#protocol : #controlling,			#sourceCode : 'repeatUntil: block\r\tblock value\r\t\tifTrue: [ ^ self ].\r\tself value.\r\tself repeatUntil: block',			#stamp : 'ThomasDiGiovanni 9/27/2019 10:54',			#package : #Kernel		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #BlockClosure,				#isMetaSide : false			},			#name : #'repeatUntil:',			#protocol : #controlling,			#sourceCode : 'repeatUntil: block\r\r\tblock value\r\t\tifTrue: [ ^ self ].\r\tself value.\r\tself repeatUntil: block',			#stamp : 'ThomasDiGiovanni 9/27/2019 10:55',			#package : #Kernel		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-27T10:58:24.591624+02:00' ],		#prior : OmReference [ '72' ],		#self : OmReference [ '73' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PileTest,				#isMetaSide : false			},			#name : #testIsEmpty,			#protocol : #tests,			#sourceCode : 'testIsEmpty\r\tself assert: emptyInstance isEmpty.\r\tself deny: emptyInstance isFull.\r\tself assert: fullInstance isFull.\r\tself deny: fullInstance isEmpty',			#stamp : 'ThomasDiGiovanni 9/27/2019 10:58',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-27T10:58:31.621624+02:00' ],		#prior : OmReference [ '73' ],		#self : OmReference [ '74' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PileTest,				#isMetaSide : false			},			#name : #testIsEmpty,			#protocol : #tests,			#sourceCode : 'testIsEmpty\r\tself assert: emptyInstance isEmpty.\r\tself deny: emptyInstance isFull.\r\tself assert: fullInstance isFull.\r\tself deny: fullInstance isEmpty',			#stamp : 'ThomasDiGiovanni 9/27/2019 10:58',			#package : #Metaprogrammation		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PileTest,				#isMetaSide : false			},			#name : #testIsEmpty,			#protocol : #tests,			#sourceCode : 'testIsEmpty\r\tself assert: emptyInstance isEmpty.\r\tself deny: fullInstance isEmpty',			#stamp : 'ThomasDiGiovanni 9/27/2019 10:58',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-27T10:58:41.946624+02:00' ],		#prior : OmReference [ '74' ],		#self : OmReference [ '75' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PileTest,				#isMetaSide : false			},			#name : #testIsFull,			#protocol : #tests,			#sourceCode : 'testIsFull\r\tself deny: emptyInstance isFull.\r\tself assert: fullInstance isFull.',			#stamp : 'ThomasDiGiovanni 9/27/2019 10:58',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-27T10:58:47.459624+02:00' ],		#prior : OmReference [ '75' ],		#self : OmReference [ '76' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PileTest,				#isMetaSide : false			},			#name : #test,			#protocol : #tests,			#sourceCode : 'test\r\tself assert: emptyInstance isEmpty.\r\tself deny: emptyInstance isFull.\r\tself assert: fullInstance isFull.\r\tself deny: fullInstance isEmpty.',			#stamp : 'ThomasDiGiovanni 9/27/2019 10:45',			#package : #Metaprogrammation		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PileTest,				#isMetaSide : false			},			#name : #test,			#protocol : #'as yet unclassified',			#sourceCode : 'test\r\tself assert: emptyInstance isEmpty.\r\tself deny: emptyInstance isFull.\r\tself assert: fullInstance isFull.\r\tself deny: fullInstance isEmpty.',			#stamp : 'ThomasDiGiovanni 9/27/2019 10:45',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-27T10:58:47.537624+02:00' ],		#prior : OmReference [ '76' ],		#self : OmReference [ '77' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PileTest,				#isMetaSide : false			},			#name : #test,			#protocol : #tests,			#sourceCode : 'test\r\tself assert: emptyInstance isEmpty.\r\tself deny: emptyInstance isFull.\r\tself assert: fullInstance isFull.\r\tself deny: fullInstance isEmpty.',			#stamp : 'ThomasDiGiovanni 9/27/2019 10:45',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-27T11:12:12.110624+02:00' ],		#prior : OmReference [ '77' ],		#self : OmReference [ '78' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pile,				#isMetaSide : false			},			#name : #grow,			#protocol : #private,			#sourceCode : 'grow\r\tcapacite := capacite * 2',			#stamp : 'ThomasDiGiovanni 9/20/2019 12:13',			#package : #Metaprogrammation		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pile,				#isMetaSide : false			},			#name : #grow,			#protocol : #private,			#sourceCode : 'grow\r| newPile |\r\tnewPile := Pile new initialize: capacite * 2.',			#stamp : 'ThomasDiGiovanni 9/27/2019 11:12',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-27T11:12:45.225624+02:00' ],		#prior : OmReference [ '78' ],		#self : OmReference [ '79' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pile,				#isMetaSide : false			},			#name : #grow,			#protocol : #private,			#sourceCode : 'grow\r| newPile |\r\tnewPile := Pile new initialize: capacite * 2.',			#stamp : 'ThomasDiGiovanni 9/27/2019 11:12',			#package : #Metaprogrammation		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pile,				#isMetaSide : false			},			#name : #grow,			#protocol : #private,			#sourceCode : 'grow\r\t| newPile |\r\tnewPile := Pile new initialize: capacite * 2.\r\t^ newPile',			#stamp : 'ThomasDiGiovanni 9/27/2019 11:12',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-27T11:12:55.544624+02:00' ],		#prior : OmReference [ '79' ],		#self : OmReference [ '80' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pile,				#isMetaSide : false			},			#name : #grow,			#protocol : #private,			#sourceCode : 'grow\r\t| newPile |\r\tnewPile := Pile new initialize: capacite * 2.\r\t^ newPile',			#stamp : 'ThomasDiGiovanni 9/27/2019 11:12',			#package : #Metaprogrammation		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pile,				#isMetaSide : false			},			#name : #grow,			#protocol : #private,			#sourceCode : 'grow\r\t| newPile |\r\tnewPile := self class new initialize: capacite * 2.\r\t^ newPile',			#stamp : 'ThomasDiGiovanni 9/27/2019 11:12',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-27T11:16:58.853624+02:00' ],		#prior : OmReference [ '80' ],		#self : OmReference [ '81' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pile,				#isMetaSide : false			},			#name : #grow,			#protocol : #private,			#sourceCode : 'grow\r\t| newPile |\r\tnewPile := self class new initialize: capacite * 2.\r\t^ newPile',			#stamp : 'ThomasDiGiovanni 9/27/2019 11:15',			#package : #Metaprogrammation		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pile,				#isMetaSide : false			},			#name : #grow,			#protocol : #private,			#sourceCode : 'grow\r\tcapacite := capacite * 2.\r\tcontenu := Array new',			#stamp : 'ThomasDiGiovanni 9/27/2019 11:16',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-27T11:17:11.713624+02:00' ],		#prior : OmReference [ '81' ],		#self : OmReference [ '82' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pile,				#isMetaSide : false			},			#name : #grow,			#protocol : #private,			#sourceCode : 'grow\r\tcapacite := capacite * 2.\r\tcontenu := Array new',			#stamp : 'ThomasDiGiovanni 9/27/2019 11:16',			#package : #Metaprogrammation		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pile,				#isMetaSide : false			},			#name : #grow,			#protocol : #private,			#sourceCode : 'grow\r\tcapacite := capacite * 2.\r\tcontenu := Array new: capacite',			#stamp : 'ThomasDiGiovanni 9/27/2019 11:17',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-27T11:17:30.471624+02:00' ],		#prior : OmReference [ '82' ],		#self : OmReference [ '83' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pile,				#isMetaSide : false			},			#name : #grow,			#protocol : #private,			#sourceCode : 'grow\r\tcapacite := capacite * 2.\r\tcontenu := Array new: capacite',			#stamp : 'ThomasDiGiovanni 9/27/2019 11:17',			#package : #Metaprogrammation		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pile,				#isMetaSide : false			},			#name : #grow,			#protocol : #private,			#sourceCode : 'grow\r\tcapacite := capacite * 2.\r\tcontenu := (Array new: capacite) addAll: contenu.',			#stamp : 'ThomasDiGiovanni 9/27/2019 11:17',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-27T11:18:18.073624+02:00' ],		#prior : OmReference [ '83' ],		#self : OmReference [ '84' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pile,				#isMetaSide : false			},			#name : #grow,			#protocol : #private,			#sourceCode : 'grow\r\tcapacite := capacite * 2.\r\tcontenu := (Array new: capacite) addAll: contenu.',			#stamp : 'ThomasDiGiovanni 9/27/2019 11:17',			#package : #Metaprogrammation		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pile,				#isMetaSide : false			},			#name : #grow,			#protocol : #private,			#sourceCode : 'grow\r|newContenu|\r\tcapacite := capacite * 2.\r\tnewContenu := Array new: capacite.\r\tnewContenu addAll: contenu.',			#stamp : 'ThomasDiGiovanni 9/27/2019 11:18',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-27T11:18:52.269624+02:00' ],		#prior : OmReference [ '84' ],		#self : OmReference [ '85' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pile,				#isMetaSide : false			},			#name : #grow,			#protocol : #private,			#sourceCode : 'grow\r|newContenu|\r\tcapacite := capacite * 2.\r\tnewContenu := Array new: capacite.\r\tnewContenu addAll: contenu.',			#stamp : 'ThomasDiGiovanni 9/27/2019 11:18',			#package : #Metaprogrammation		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pile,				#isMetaSide : false			},			#name : #grow,			#protocol : #private,			#sourceCode : 'grow\r\t| newContenu |\r\tcapacite := capacite * 2.\r\tnewContenu := Array new: capacite.\r\tnewContenu addAll: contenu.\r\tcontenu := newContenu',			#stamp : 'ThomasDiGiovanni 9/27/2019 11:18',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-27T11:22:43.210624+02:00' ],		#prior : OmReference [ '85' ],		#self : OmReference [ '86' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pile,				#isMetaSide : false			},			#name : #'initialize:',			#protocol : #initialization,			#sourceCode : 'initialize: taille\r\t"La pile est vide quand index = 0, la pile est pleine quand index = capacite"\r\tindex := 0.\r\tcapacite := taille.\r\r\t"Le contenu est stocké dans un tableau"\r\tcontenu := Array new: capacite',			#stamp : 'ThomasDiGiovanni 9/20/2019 12:11',			#package : #Metaprogrammation		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pile,				#isMetaSide : false			},			#name : #'initialize:',			#protocol : #initialization,			#sourceCode : 'initialize: taille\r\t"La pile est vide quand index = 0, la pile est pleine quand index = capacite"\r\r\tindex := 0.\r\tcapacite := taille.\r\r\t"Le contenu est stocke dans un tableau"\r\tcontenu := Array new: capacite',			#stamp : 'ThomasDiGiovanni 9/27/2019 11:22',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-27T11:27:35.702624+02:00' ],		#prior : OmReference [ '86' ],		#self : OmReference [ '87' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Pile class',				#isMetaSide : true			},			#name : #example,			#protocol : #example,			#sourceCode : 'example\r\t| testPile |\r\ttestPile := self new.\r\tself assert: testPile isEmpty.\r\ttestPile push: 1.\r\ttestPile push: 2.\r\ttestPile pop.\r\ttestPile push: 3.\r\ttestPile printOn: Transcript',			#stamp : 'ThomasDiGiovanni 9/20/2019 15:04',			#package : #Metaprogrammation		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Pile class',				#isMetaSide : true			},			#name : #example,			#protocol : #example,			#sourceCode : 'example\r\t| testPile |\r\ttestPile := self new.\r\tself assert: testPile isEmpty.\r\ttestPile push: 1.\r\ttestPile push: 2.\r\ttestPile pop.\r\ttestPile push: 3.\r\ttestPile inspect',			#stamp : 'ThomasDiGiovanni 9/27/2019 11:27',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-27T11:37:10.886624+02:00' ],		#prior : OmReference [ '87' ],		#self : OmReference [ '88' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#traitCompositionSource : '{}',				#superclassName : 'Object',				#definitionSource : 'Object subclass: #Inspecter\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Metaprogrammation\''			},			#name : #Inspecter,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'Inspecter class\r\tinstanceVariableNames: \'\''				},				#name : #'Inspecter class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Inspecter,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Metaprogrammation,			#package : #Metaprogrammation,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-27T11:37:59.565624+02:00' ],		#prior : OmReference [ '88' ],		#self : OmReference [ '89' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Inspecter,				#isMetaSide : false			},			#name : #'inspect:',			#protocol : #'as yet unclassified',			#sourceCode : 'inspect: object\r',			#stamp : 'ThomasDiGiovanni 9/27/2019 11:37',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-27T11:37:59.629624+02:00' ],		#prior : OmReference [ '89' ],		#self : OmReference [ '90' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Inspecter,				#isMetaSide : false			},			#name : #'inspect:',			#protocol : #'as yet unclassified',			#sourceCode : 'inspect: object\r',			#stamp : 'ThomasDiGiovanni 9/27/2019 11:37',			#package : #Metaprogrammation		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Inspecter,				#isMetaSide : false			},			#name : #'inspect:',			#protocol : #actions,			#sourceCode : 'inspect: object\r',			#stamp : 'ThomasDiGiovanni 9/27/2019 11:37',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-27T11:38:39.399624+02:00' ],		#prior : OmReference [ '90' ],		#self : OmReference [ '91' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#traitCompositionSource : '{}',				#superclassName : 'Object',				#definitionSource : 'Object subclass: #Inspecter\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Metaprogrammation\''			},			#name : #Inspecter,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'Inspecter class\r\tinstanceVariableNames: \'\''				},				#name : #'Inspecter class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Inspecter,					#isMetaSide : false				},				#parent : @7,				#content : 'Class able to inspect any object and print its attributes and methods in the transcript.',				#stamp : 'ThomasDiGiovanni 9/27/2019 11:38'			},			#classVariables : OrderedCollection [ ],			#category : #Metaprogrammation,			#package : #Metaprogrammation,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'Class able to inspect any object and print its attributes and methods in the transcript.',		#newStamp : 'ThomasDiGiovanni 9/27/2019 11:38'	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-27T11:39:24.523624+02:00' ],		#prior : OmReference [ '91' ],		#self : OmReference [ '92' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#traitCompositionSource : '{}',				#superclassName : 'Object',				#definitionSource : 'Object subclass: #Inspecter\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Metaprogrammation\''			},			#name : #Inspecter,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'Inspecter class\r\tinstanceVariableNames: \'\''				},				#name : #'Inspecter class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Inspecter,					#isMetaSide : false				},				#parent : @7,				#content : 'Class able to inspect any object and print its attributes\' names and values in the transcript.',				#stamp : 'ThomasDiGiovanni 9/27/2019 11:39'			},			#classVariables : OrderedCollection [ ],			#category : #Metaprogrammation,			#package : #Metaprogrammation,			#sharedPools : OrderedCollection [ ]		},		#oldComment : 'Class able to inspect any object and print its attributes and methods in the transcript.',		#newComment : 'Class able to inspect any object and print its attributes\' names and values in the transcript.',		#oldStamp : 'ThomasDiGiovanni 9/27/2019 11:38',		#newStamp : 'ThomasDiGiovanni 9/27/2019 11:39'	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-27T11:39:56.007624+02:00' ],		#prior : OmReference [ '92' ],		#self : OmReference [ '93' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Inspecter,				#isMetaSide : false			},			#name : #'inspect:',			#protocol : #actions,			#sourceCode : 'inspect: object\r',			#stamp : 'ThomasDiGiovanni 9/27/2019 11:37',			#package : #Metaprogrammation		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Inspecter,				#isMetaSide : false			},			#name : #'inspect:',			#protocol : #actions,			#sourceCode : 'inspect: object\r\tTranscript.',			#stamp : 'ThomasDiGiovanni 9/27/2019 11:39',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-27T11:40:55.699624+02:00' ],		#prior : OmReference [ '93' ],		#self : OmReference [ '94' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Inspecter,				#isMetaSide : false			},			#name : #'inspect:',			#protocol : #actions,			#sourceCode : 'inspect: object\r\tTranscript.',			#stamp : 'ThomasDiGiovanni 9/27/2019 11:39',			#package : #Metaprogrammation		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Inspecter,				#isMetaSide : false			},			#name : #'inspect:',			#protocol : #actions,			#sourceCode : 'inspect: object\r\tTranscript show: \'TODO\'',			#stamp : 'ThomasDiGiovanni 9/27/2019 11:40',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-27T11:41:20.834624+02:00' ],		#prior : OmReference [ '94' ],		#self : OmReference [ '95' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Inspecter,				#isMetaSide : false			},			#name : #'inspect:',			#protocol : #actions,			#sourceCode : 'inspect: object\r\tTranscript show: \'TODO\'',			#stamp : 'ThomasDiGiovanni 9/27/2019 11:40',			#package : #Metaprogrammation		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Inspecter,				#isMetaSide : false			},			#name : #'inspect:',			#protocol : #actions,			#sourceCode : 'inspect: object\r\tTranscript show: \'Hello\'',			#stamp : 'ThomasDiGiovanni 9/27/2019 11:41',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-27T11:41:23.982624+02:00' ],		#prior : OmReference [ '95' ],		#self : OmReference [ '96' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Inspecter,				#isMetaSide : false			},			#name : #'inspect:',			#protocol : #actions,			#sourceCode : 'inspect: object\r\tTranscript show: \'Hello\'',			#stamp : 'ThomasDiGiovanni 9/27/2019 11:41',			#package : #Metaprogrammation		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Inspecter,				#isMetaSide : false			},			#name : #'inspect:',			#protocol : #actions,			#sourceCode : 'inspect: object\r\tTranscript show: \'Hello world\'',			#stamp : 'ThomasDiGiovanni 9/27/2019 11:41',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-27T11:42:47.330624+02:00' ],		#prior : OmReference [ '96' ],		#self : OmReference [ '97' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Inspecter,				#isMetaSide : false			},			#name : #'inspect:',			#protocol : #actions,			#sourceCode : 'inspect: object\r\tTranscript show: \'Hello world\'',			#stamp : 'ThomasDiGiovanni 9/27/2019 11:41',			#package : #Metaprogrammation		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Inspecter,				#isMetaSide : false			},			#name : #'inspect:',			#protocol : #actions,			#sourceCode : 'inspect: object\r\tTranscript show: object properties',			#stamp : 'ThomasDiGiovanni 9/27/2019 11:42',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-27T11:44:03.463624+02:00' ],		#prior : OmReference [ '97' ],		#self : OmReference [ '98' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ManifestMetaprogrammation class',				#isMetaSide : true			},			#name : #ruleRBCodeCruftLeftInMethodsRuleV1FalsePositive,			#protocol : #code-critics,			#sourceCode : 'ruleRBCodeCruftLeftInMethodsRuleV1FalsePositive\r\t^ #()',			#stamp : 'ThomasDiGiovanni 9/27/2019 11:44',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-27T11:44:03.483624+02:00' ],		#prior : OmReference [ '98' ],		#self : OmReference [ '99' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ManifestMetaprogrammation class',				#isMetaSide : true			},			#name : #ruleRBCodeCruftLeftInMethodsRuleV1FalsePositive,			#protocol : #code-critics,			#sourceCode : 'ruleRBCodeCruftLeftInMethodsRuleV1FalsePositive\r\t^ #()',			#stamp : 'ThomasDiGiovanni 9/27/2019 11:44',			#package : #Metaprogrammation		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ManifestMetaprogrammation class',				#isMetaSide : true			},			#name : #ruleRBCodeCruftLeftInMethodsRuleV1FalsePositive,			#protocol : #code-critics,			#sourceCode : 'ruleRBCodeCruftLeftInMethodsRuleV1FalsePositive\r\t^ #(#(#(#RGClassDefinition #(#Inspecter)) #\'2019-09-27T11:44:03.468624+02:00\') )',			#stamp : 'ThomasDiGiovanni 9/27/2019 11:44',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-27T11:44:33.289624+02:00' ],		#prior : OmReference [ '99' ],		#self : OmReference [ '100' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Inspecter,				#isMetaSide : false			},			#name : #'inspect:',			#protocol : #actions,			#sourceCode : 'inspect: object\r\tTranscript show: object properties',			#stamp : 'ThomasDiGiovanni 9/27/2019 11:42',			#package : #Metaprogrammation		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Inspecter,				#isMetaSide : false			},			#name : #'inspect:',			#protocol : #actions,			#sourceCode : 'inspect: object\r\tTranscript show: object properties; cr',			#stamp : 'ThomasDiGiovanni 9/27/2019 11:44',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-27T11:45:38.627624+02:00' ],		#prior : OmReference [ '100' ],		#self : OmReference [ '101' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Inspecter,				#isMetaSide : false			},			#name : #'inspect:',			#protocol : #actions,			#sourceCode : 'inspect: object\r\tTranscript show: object properties; cr',			#stamp : 'ThomasDiGiovanni 9/27/2019 11:44',			#package : #Metaprogrammation		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Inspecter,				#isMetaSide : false			},			#name : #'inspect:',			#protocol : #actions,			#sourceCode : 'inspect: object\r\tTranscript\r\t\tshow: object allClassVarNames;\r\t\tcr',			#stamp : 'ThomasDiGiovanni 9/27/2019 11:45',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-27T11:49:54.687624+02:00' ],		#prior : OmReference [ '101' ],		#self : OmReference [ '102' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Inspecter,				#isMetaSide : false			},			#name : #'inspect:',			#protocol : #actions,			#sourceCode : 'inspect: object\r\tTranscript\r\t\tshow: object allClassVarNames;\r\t\tcr',			#stamp : 'ThomasDiGiovanni 9/27/2019 11:45',			#package : #Metaprogrammation		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Inspecter,				#isMetaSide : false			},			#name : #'inspect:',			#protocol : #actions,			#sourceCode : 'inspect: object\r\tTranscript\r\t\tshow: object allInstVarNames;\r\t\tcr',			#stamp : 'ThomasDiGiovanni 9/27/2019 11:49',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-27T11:50:52.357624+02:00' ],		#prior : OmReference [ '102' ],		#self : OmReference [ '103' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Inspecter,				#isMetaSide : false			},			#name : #'inspect:',			#protocol : #actions,			#sourceCode : 'inspect: object\r\tTranscript\r\t\tshow: object allInstVarNames;\r\t\tcr',			#stamp : 'ThomasDiGiovanni 9/27/2019 11:49',			#package : #Metaprogrammation		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Inspecter,				#isMetaSide : false			},			#name : #'inspect:',			#protocol : #actions,			#sourceCode : 'inspect: object\r\tTranscript\r\tshow: object name, \' attributes are \';\r\t\tshow: object allInstVarNames;\r\t\tcr',			#stamp : 'ThomasDiGiovanni 9/27/2019 11:50',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-27T11:51:33.716624+02:00' ],		#prior : OmReference [ '103' ],		#self : OmReference [ '104' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Inspecter,				#isMetaSide : false			},			#name : #'inspect:',			#protocol : #actions,			#sourceCode : 'inspect: object\r\tTranscript\r\tshow: object name, \' attributes are \';\r\t\tshow: object allInstVarNames;\r\t\tcr',			#stamp : 'ThomasDiGiovanni 9/27/2019 11:50',			#package : #Metaprogrammation		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Inspecter,				#isMetaSide : false			},			#name : #'inspect:',			#protocol : #actions,			#sourceCode : 'inspect: object\r\tTranscript\r\t\tshow: object name , \' attributes are \', object allInstVarNames;\r\t\tcr',			#stamp : 'ThomasDiGiovanni 9/27/2019 11:51',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-27T11:52:39.196624+02:00' ],		#prior : OmReference [ '104' ],		#self : OmReference [ '105' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Inspecter,				#isMetaSide : false			},			#name : #'inspect:',			#protocol : #actions,			#sourceCode : 'inspect: object\r\tTranscript\r\t\tshow: object name , \' attributes are \', object allInstVarNames;\r\t\tcr',			#stamp : 'ThomasDiGiovanni 9/27/2019 11:51',			#package : #Metaprogrammation		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Inspecter,				#isMetaSide : false			},			#name : #'inspect:',			#protocol : #actions,			#sourceCode : 'inspect: object\r\tTranscript\r\t\tshow: object name , \' attributes are: \'; cr; show: object allInstVarNames;\r\t\tcr',			#stamp : 'ThomasDiGiovanni 9/27/2019 11:52',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-27T11:56:05.623624+02:00' ],		#prior : OmReference [ '105' ],		#self : OmReference [ '106' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Inspecter,				#isMetaSide : false			},			#name : #'inspect:',			#protocol : #actions,			#sourceCode : 'inspect: object\r\tTranscript\r\t\tshow: object name , \' attributes are: \'; cr; show: object allInstVarNames;\r\t\tcr',			#stamp : 'ThomasDiGiovanni 9/27/2019 11:52',			#package : #Metaprogrammation		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Inspecter,				#isMetaSide : false			},			#name : #'inspect:',			#protocol : #actions,			#sourceCode : 'inspect: object\r\tTranscript\r\t\tshow: object name , \' attributes are: \';\r\t\tcr.\r\t\t1 to: object allInstVarNames size do: [:varName |  Transcript show: varName, \' \', object instVarNamed: varName asSymbol; cr]\r\t\tshow: object allInstVarNames;\r\t\tcr',			#stamp : 'ThomasDiGiovanni 9/27/2019 11:56',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-27T11:56:30.963624+02:00' ],		#prior : OmReference [ '106' ],		#self : OmReference [ '107' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Inspecter,				#isMetaSide : false			},			#name : #'inspect:',			#protocol : #actions,			#sourceCode : 'inspect: object\r\tTranscript\r\t\tshow: object name , \' attributes are: \';\r\t\tcr.\r\t\t1 to: object allInstVarNames size do: [:varName |  Transcript show: varName, \' \', object instVarNamed: varName asSymbol; cr]\r\t\tshow: object allInstVarNames;\r\t\tcr',			#stamp : 'ThomasDiGiovanni 9/27/2019 11:56',			#package : #Metaprogrammation		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Inspecter,				#isMetaSide : false			},			#name : #'inspect:',			#protocol : #actions,			#sourceCode : 'inspect: object\r\tTranscript\r\t\tshow: object name , \' attributes are: \';\r\t\tcr.\r\t1\r\t\tto: object allInstVarNames size\r\t\t\tdo: [ :varName | \r\t\t\tTranscript\r\t\t\t\tshow: varName , \' \' , object instVarNamed: varName asSymbol;\r\t\t\t\tcr ]',			#stamp : 'ThomasDiGiovanni 9/27/2019 11:56',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-27T12:02:19.141624+02:00' ],		#prior : OmReference [ '107' ],		#self : OmReference [ '108' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Inspecter,				#isMetaSide : false			},			#name : #'inspect:',			#protocol : #actions,			#sourceCode : 'inspect: object\r\tTranscript\r\t\tshow: object name , \' attributes are: \';\r\t\tcr.\r\t1\r\t\tto: object allInstVarNames size\r\t\t\tdo: [ :varName | \r\t\t\tTranscript\r\t\t\t\tshow: varName , \' \' , object instVarNamed: varName asSymbol;\r\t\t\t\tcr ]',			#stamp : 'ThomasDiGiovanni 9/27/2019 11:56',			#package : #Metaprogrammation		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Inspecter,				#isMetaSide : false			},			#name : #'inspect:',			#protocol : #actions,			#sourceCode : 'inspect: object\r\tTranscript\r\t\tshow: object name , \' attributes are: \';\r\t\tcr.\r\t1 to: object allInstVarNames size do: [ :varName | \r\t\tTranscript\r\t\t\tshow: object allIsntVarNames at: varName , \' \' , object instVarNamed: varName asSymbol;\r\t\t\tcr ]',			#stamp : 'ThomasDiGiovanni 9/27/2019 12:02',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-27T12:02:28.832624+02:00' ],		#prior : OmReference [ '108' ],		#self : OmReference [ '109' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Inspecter,				#isMetaSide : false			},			#name : #'inspect:',			#protocol : #actions,			#sourceCode : 'inspect: object\r\tTranscript\r\t\tshow: object name , \' attributes are: \';\r\t\tcr.\r\t1 to: object allInstVarNames size do: [ :varName | \r\t\tTranscript\r\t\t\tshow: object allIsntVarNames at: varName , \' \' , object instVarNamed: varName asSymbol;\r\t\t\tcr ]',			#stamp : 'ThomasDiGiovanni 9/27/2019 12:02',			#package : #Metaprogrammation		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Inspecter,				#isMetaSide : false			},			#name : #'inspect:',			#protocol : #actions,			#sourceCode : 'inspect: object\r\tTranscript\r\t\tshow: object name , \' attributes are: \';\r\t\tcr.\r\t1 to: object allInstVarNames size do: [ :varName | \r\t\tTranscript\r\t\t\tshow: object allInstVarNames\r\t\t\t\tat: varName , \' \' , object\r\t\t\t\tinstVarNamed: varName asSymbol;\r\t\t\tcr ]',			#stamp : 'ThomasDiGiovanni 9/27/2019 12:02',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-27T12:02:51.905624+02:00' ],		#prior : OmReference [ '109' ],		#self : OmReference [ '110' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Inspecter,				#isMetaSide : false			},			#name : #'inspect:',			#protocol : #actions,			#sourceCode : 'inspect: object\r\tTranscript\r\t\tshow: object name , \' attributes are: \';\r\t\tcr.\r\t1 to: object allInstVarNames size do: [ :varName | \r\t\tTranscript\r\t\t\tshow: object allInstVarNames\r\t\t\t\tat: varName , \' \' , object\r\t\t\t\tinstVarNamed: varName asSymbol;\r\t\t\tcr ]',			#stamp : 'ThomasDiGiovanni 9/27/2019 12:02',			#package : #Metaprogrammation		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Inspecter,				#isMetaSide : false			},			#name : #'inspect:',			#protocol : #actions,			#sourceCode : 'inspect: object\r\tTranscript\r\t\tshow: object name asString , \' attributes are: \';\r\t\tcr.\r\t1 to: object allInstVarNames size do: [ :varName | \r\t\tTranscript\r\t\t\tshow: object allInstVarNames\r\t\t\t\tat: varName , \' \' , object\r\t\t\t\tinstVarNamed: varName asSymbol;\r\t\t\tcr ]',			#stamp : 'ThomasDiGiovanni 9/27/2019 12:02',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-27T12:02:57.387624+02:00' ],		#prior : OmReference [ '110' ],		#self : OmReference [ '111' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Inspecter,				#isMetaSide : false			},			#name : #'inspect:',			#protocol : #actions,			#sourceCode : 'inspect: object\r\tTranscript\r\t\tshow: object name asString , \' attributes are: \';\r\t\tcr.\r\t1 to: object allInstVarNames size do: [ :varName | \r\t\tTranscript\r\t\t\tshow: object allInstVarNames\r\t\t\t\tat: varName , \' \' , object\r\t\t\t\tinstVarNamed: varName asSymbol;\r\t\t\tcr ]',			#stamp : 'ThomasDiGiovanni 9/27/2019 12:02',			#package : #Metaprogrammation		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Inspecter,				#isMetaSide : false			},			#name : #'inspect:',			#protocol : #actions,			#sourceCode : 'inspect: object\r\tTranscript\r\t\tshow: object name, \' attributes are: \';\r\t\tcr.\r\t1 to: object allInstVarNames size do: [ :varName | \r\t\tTranscript\r\t\t\tshow: object allInstVarNames\r\t\t\t\tat: varName , \' \' , object\r\t\t\t\tinstVarNamed: varName asSymbol;\r\t\t\tcr ]',			#stamp : 'ThomasDiGiovanni 9/27/2019 12:02',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-27T12:03:48.887624+02:00' ],		#prior : OmReference [ '111' ],		#self : OmReference [ '112' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Inspecter,				#isMetaSide : false			},			#name : #'inspect:',			#protocol : #actions,			#sourceCode : 'inspect: object\r\tTranscript\r\t\tshow: object name, \' attributes are: \';\r\t\tcr.\r\t1 to: object allInstVarNames size do: [ :varName | \r\t\tTranscript\r\t\t\tshow: object allInstVarNames\r\t\t\t\tat: varName , \' \' , object\r\t\t\t\tinstVarNamed: varName asSymbol;\r\t\t\tcr ]',			#stamp : 'ThomasDiGiovanni 9/27/2019 12:02',			#package : #Metaprogrammation		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Inspecter,				#isMetaSide : false			},			#name : #'inspect:',			#protocol : #actions,			#sourceCode : 'inspect: object\r\tTranscript\r\t\tshow: object name , \' attributes are: \';\r\t\tcr.\r\t1 to: object allInstVarNames size do: [ :varNameIndex | \r\t\tTranscript\r\t\t\tshow: object allInstVarNames\r\t\t\t\tat: varNameIndex , \' \' , (object\r\t\t\t\tinstVarNamed: (object allInstVarNames\r\t\t\t\tat: varNameIndex)) asSymbol;\r\t\t\tcr ]',			#stamp : 'ThomasDiGiovanni 9/27/2019 12:03',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-27T12:03:58.829624+02:00' ],		#prior : OmReference [ '112' ],		#self : OmReference [ '113' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Inspecter,				#isMetaSide : false			},			#name : #'inspect:',			#protocol : #actions,			#sourceCode : 'inspect: object\r\tTranscript\r\t\tshow: object name , \' attributes are: \';\r\t\tcr.\r\t1 to: object allInstVarNames size do: [ :varNameIndex | \r\t\tTranscript\r\t\t\tshow: object allInstVarNames\r\t\t\t\tat: varNameIndex , \' \' , (object\r\t\t\t\tinstVarNamed: (object allInstVarNames\r\t\t\t\tat: varNameIndex)) asSymbol;\r\t\t\tcr ]',			#stamp : 'ThomasDiGiovanni 9/27/2019 12:03',			#package : #Metaprogrammation		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Inspecter,				#isMetaSide : false			},			#name : #'inspect:',			#protocol : #actions,			#sourceCode : 'inspect: object\r\tTranscript\r\t\tshow: object name , \' attributes are: \';\r\t\tcr.\r\t1 to: object allInstVarNames size do: [ :varNameIndex | \r\t\tTranscript\r\t\t\tshow: (object allInstVarNames\r\t\t\t\tat:\r\t\t\t\tvarNameIndex) , \' \'\r\t\t\t\t\t,\r\t\t\t\t\t\t(object instVarNamed: (object allInstVarNames at: varNameIndex))\r\t\t\t\t\t\t\tasSymbol;\r\t\t\tcr ]',			#stamp : 'ThomasDiGiovanni 9/27/2019 12:03',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-27T12:04:50.849624+02:00' ],		#prior : OmReference [ '113' ],		#self : OmReference [ '114' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Inspecter,				#isMetaSide : false			},			#name : #'inspect:',			#protocol : #actions,			#sourceCode : 'inspect: object\r\tTranscript\r\t\tshow: object name , \' attributes are: \';\r\t\tcr.\r\t1 to: object allInstVarNames size do: [ :varNameIndex | \r\t\tTranscript\r\t\t\tshow: (object allInstVarNames\r\t\t\t\tat:\r\t\t\t\tvarNameIndex) , \' \'\r\t\t\t\t\t,\r\t\t\t\t\t\t(object instVarNamed: (object allInstVarNames at: varNameIndex))\r\t\t\t\t\t\t\tasSymbol;\r\t\t\tcr ]',			#stamp : 'ThomasDiGiovanni 9/27/2019 12:03',			#package : #Metaprogrammation		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Inspecter,				#isMetaSide : false			},			#name : #'inspect:',			#protocol : #actions,			#sourceCode : 'inspect: object\r\tTranscript\r\t\tshow: object , \' attributes are: \';\r\t\tcr.\r\t1 to: object allInstVarNames size do: [ :varNameIndex | \r\t\tTranscript\r\t\t\tshow:\r\t\t\t\t(object allInstVarNames at: varNameIndex) , \' \'\r\t\t\t\t\t,\r\t\t\t\t\t\t(object instVarNamed: (object allInstVarNames at: varNameIndex))\r\t\t\t\t\t\t\tasSymbol;\r\t\t\tcr ]',			#stamp : 'ThomasDiGiovanni 9/27/2019 12:04',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-27T12:04:55.179624+02:00' ],		#prior : OmReference [ '114' ],		#self : OmReference [ '115' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Inspecter,				#isMetaSide : false			},			#name : #'inspect:',			#protocol : #actions,			#sourceCode : 'inspect: object\r\tTranscript\r\t\tshow: object , \' attributes are: \';\r\t\tcr.\r\t1 to: object allInstVarNames size do: [ :varNameIndex | \r\t\tTranscript\r\t\t\tshow:\r\t\t\t\t(object allInstVarNames at: varNameIndex) , \' \'\r\t\t\t\t\t,\r\t\t\t\t\t\t(object instVarNamed: (object allInstVarNames at: varNameIndex))\r\t\t\t\t\t\t\tasSymbol;\r\t\t\tcr ]',			#stamp : 'ThomasDiGiovanni 9/27/2019 12:04',			#package : #Metaprogrammation		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Inspecter,				#isMetaSide : false			},			#name : #'inspect:',			#protocol : #actions,			#sourceCode : 'inspect: object\r\tTranscript\r\t\tshow: object asString , \' attributes are: \';\r\t\tcr.\r\t1 to: object allInstVarNames size do: [ :varNameIndex | \r\t\tTranscript\r\t\t\tshow:\r\t\t\t\t(object allInstVarNames at: varNameIndex) , \' \'\r\t\t\t\t\t,\r\t\t\t\t\t\t(object instVarNamed: (object allInstVarNames at: varNameIndex))\r\t\t\t\t\t\t\tasSymbol;\r\t\t\tcr ]',			#stamp : 'ThomasDiGiovanni 9/27/2019 12:04',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-27T12:05:05.181624+02:00' ],		#prior : OmReference [ '115' ],		#self : OmReference [ '116' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Inspecter,				#isMetaSide : false			},			#name : #'inspect:',			#protocol : #actions,			#sourceCode : 'inspect: object\r\tTranscript\r\t\tshow: object asString , \' attributes are: \';\r\t\tcr.\r\t1 to: object allInstVarNames size do: [ :varNameIndex | \r\t\tTranscript\r\t\t\tshow:\r\t\t\t\t(object allInstVarNames at: varNameIndex) , \' \'\r\t\t\t\t\t,\r\t\t\t\t\t\t(object instVarNamed: (object allInstVarNames at: varNameIndex))\r\t\t\t\t\t\t\tasSymbol;\r\t\t\tcr ]',			#stamp : 'ThomasDiGiovanni 9/27/2019 12:04',			#package : #Metaprogrammation		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Inspecter,				#isMetaSide : false			},			#name : #'inspect:',			#protocol : #actions,			#sourceCode : 'inspect: object\r\tTranscript\r\t\tshow: object name , \' attributes are: \';\r\t\tcr.\r\t1 to: object allInstVarNames size do: [ :varNameIndex | \r\t\tTranscript\r\t\t\tshow:\r\t\t\t\t(object allInstVarNames at: varNameIndex) , \' \'\r\t\t\t\t\t,\r\t\t\t\t\t\t(object instVarNamed: (object allInstVarNames at: varNameIndex))\r\t\t\t\t\t\t\tasSymbol;\r\t\t\tcr ]',			#stamp : 'ThomasDiGiovanni 9/27/2019 12:05',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-27T12:06:45.013624+02:00' ],		#prior : OmReference [ '116' ],		#self : OmReference [ '117' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Inspecter,				#isMetaSide : false			},			#name : #'inspect:',			#protocol : #actions,			#sourceCode : 'inspect: object\r\tTranscript\r\t\tshow: object name , \' attributes are: \';\r\t\tcr.\r\t1 to: object allInstVarNames size do: [ :varNameIndex | \r\t\tTranscript\r\t\t\tshow:\r\t\t\t\t(object allInstVarNames at: varNameIndex) , \' \'\r\t\t\t\t\t,\r\t\t\t\t\t\t(object instVarNamed: (object allInstVarNames at: varNameIndex))\r\t\t\t\t\t\t\tasSymbol;\r\t\t\tcr ]',			#stamp : 'ThomasDiGiovanni 9/27/2019 12:05',			#package : #Metaprogrammation		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Inspecter,				#isMetaSide : false			},			#name : #'inspect:',			#protocol : #actions,			#sourceCode : 'inspect: object\r\tTranscript\r\t\tshow: object name , \' attributes are: \';\r\t\tcr.\r\t1 to: object allInstVarNames size do: [ :varNameIndex | \r\t\tTranscript\r\t\t\tshow:\r\t\t\t\t(object allInstVarNames at: varNameIndex) , \' \'\r\t\t\t\t\t,\r\t\t\t\t\t\t(object instVarNamed: (object allInstVarNames at: varNameIndex)\r\t\t\t\t\t\t\tasSymbol);\r\t\t\tcr ]',			#stamp : 'ThomasDiGiovanni 9/27/2019 12:06',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-27T12:14:28.382624+02:00' ],		#prior : OmReference [ '117' ],		#self : OmReference [ '118' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Inspecter,				#isMetaSide : false			},			#name : #'inspect:',			#protocol : #actions,			#sourceCode : 'inspect: object\r\tTranscript\r\t\tshow: object name , \' attributes are: \';\r\t\tcr.\r\t1 to: object allInstVarNames size do: [ :varNameIndex | \r\t\tTranscript\r\t\t\tshow:\r\t\t\t\t(object allInstVarNames at: varNameIndex) , \' \'\r\t\t\t\t\t,\r\t\t\t\t\t\t(object instVarNamed: (object allInstVarNames at: varNameIndex)\r\t\t\t\t\t\t\tasSymbol);\r\t\t\tcr ]',			#stamp : 'ThomasDiGiovanni 9/27/2019 12:06',			#package : #Metaprogrammation		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Inspecter,				#isMetaSide : false			},			#name : #'inspect:',			#protocol : #actions,			#sourceCode : 'inspect: object\r\tTranscript\r\t\tshow: object title , \' attributes are: \';\r\t\tcr.\r\t1 to: object allInstVarNames size do: [ :varNameIndex | \r\t\tTranscript\r\t\t\tshow:\r\t\t\t\t(object allInstVarNames at: varNameIndex) , \' \'\r\t\t\t\t\t,\r\t\t\t\t\t\t(object\r\t\t\t\t\t\t\tinstVarNamed: (object allInstVarNames at: varNameIndex) asSymbol);\r\t\t\tcr ]',			#stamp : 'ThomasDiGiovanni 9/27/2019 12:14',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-27T12:21:31.865624+02:00' ],		#prior : OmReference [ '118' ],		#self : OmReference [ '119' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Inspecter,				#isMetaSide : false			},			#name : #'inspect:',			#protocol : #actions,			#sourceCode : 'inspect: object\r\tTranscript\r\t\tshow: object title , \' attributes are: \';\r\t\tcr.\r\t1 to: object allInstVarNames size do: [ :varNameIndex | \r\t\tTranscript\r\t\t\tshow:\r\t\t\t\t(object allInstVarNames at: varNameIndex) , \' \'\r\t\t\t\t\t,\r\t\t\t\t\t\t(object\r\t\t\t\t\t\t\tinstVarNamed: (object allInstVarNames at: varNameIndex) asSymbol);\r\t\t\tcr ]',			#stamp : 'ThomasDiGiovanni 9/27/2019 12:14',			#package : #Metaprogrammation		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Inspecter,				#isMetaSide : false			},			#name : #'inspect:',			#protocol : #actions,			#sourceCode : 'inspect: object\r\tTranscript\r\t\tshow: object name , \' attributes are: \';\r\t\tcr.\r\t1 to: object allInstVarNames size do: [ :varNameIndex | \r\t\tTranscript\r\t\t\tshow:\r\t\t\t\t(object allInstVarNames at: varNameIndex) , \' \'\r\t\t\t\t\t,\r\t\t\t\t\t\t(object\r\t\t\t\t\t\t\tinstVarNamed: (object allInstVarNames at: varNameIndex) asSymbol);\r\t\t\tcr ]',			#stamp : 'ThomasDiGiovanni 9/27/2019 12:21',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-27T12:22:29.483624+02:00' ],		#prior : OmReference [ '119' ],		#self : OmReference [ '120' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Inspecter,				#isMetaSide : false			},			#name : #'inspect:',			#protocol : #actions,			#sourceCode : 'inspect: object\r\tTranscript\r\t\tshow: object name , \' attributes are: \';\r\t\tcr.\r\t1 to: object allInstVarNames size do: [ :varNameIndex | \r\t\tTranscript\r\t\t\tshow:\r\t\t\t\t(object allInstVarNames at: varNameIndex) , \' \'\r\t\t\t\t\t,\r\t\t\t\t\t\t(object\r\t\t\t\t\t\t\tinstVarNamed: (object allInstVarNames at: varNameIndex) asSymbol);\r\t\t\tcr ]',			#stamp : 'ThomasDiGiovanni 9/27/2019 12:21',			#package : #Metaprogrammation		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Inspecter,				#isMetaSide : false			},			#name : #'inspect:',			#protocol : #actions,			#sourceCode : 'inspect: object\r| varName|\r\tTranscript\r\t\tshow: object name , \' attributes are: \';\r\t\tcr.\r\t1 to: object allInstVarNames size do: [ :varNameIndex |\r\t\tvarName := object allInstVarNames at: varNameIndex.\r\t\tTranscript\r\t\t\tshow:\r\t\t\t\tvarName, \' \'\r\t\t\t\t\t,\r\t\t\t\t\t\t(object\r\t\t\t\t\t\t\tinstVarNamed: varName asSymbol);\r\t\t\tcr ]',			#stamp : 'ThomasDiGiovanni 9/27/2019 12:22',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-27T12:26:38.372624+02:00' ],		#prior : OmReference [ '120' ],		#self : OmReference [ '121' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Inspecter,				#isMetaSide : false			},			#name : #'inspect:',			#protocol : #actions,			#sourceCode : 'inspect: object\r| varName|\r\tTranscript\r\t\tshow: object name , \' attributes are: \';\r\t\tcr.\r\t1 to: object allInstVarNames size do: [ :varNameIndex |\r\t\tvarName := object allInstVarNames at: varNameIndex.\r\t\tTranscript\r\t\t\tshow:\r\t\t\t\tvarName, \' \'\r\t\t\t\t\t,\r\t\t\t\t\t\t(object\r\t\t\t\t\t\t\tinstVarNamed: varName asSymbol);\r\t\t\tcr ]',			#stamp : 'ThomasDiGiovanni 9/27/2019 12:22',			#package : #Metaprogrammation		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Inspecter,				#isMetaSide : false			},			#name : #'inspect:',			#protocol : #actions,			#sourceCode : 'inspect: object\r\tTranscript\r\t\tshow: object name , \' attributes are: \';\r\t\tcr.\r\tobject allInstVarNames do: [ :varName | \r\t\tTranscript\r\t\t\tshow:\r\t\t\t\tvarName , \' \' , (object instVarNamed: varName asSymbol);\r\t\t\tcr ]',			#stamp : 'ThomasDiGiovanni 9/27/2019 12:26',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-27T12:28:38.331624+02:00' ],		#prior : OmReference [ '121' ],		#self : OmReference [ '122' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Inspecter,				#isMetaSide : false			},			#name : #'inspect:',			#protocol : #actions,			#sourceCode : 'inspect: object\r\tTranscript\r\t\tshow: object name , \' attributes are: \';\r\t\tcr.\r\tobject allInstVarNames do: [ :varName | \r\t\tTranscript\r\t\t\tshow:\r\t\t\t\tvarName , \' \' , (object instVarNamed: varName asSymbol);\r\t\t\tcr ]',			#stamp : 'ThomasDiGiovanni 9/27/2019 12:26',			#package : #Metaprogrammation		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Inspecter,				#isMetaSide : false			},			#name : #'inspect:',			#protocol : #actions,			#sourceCode : 'inspect: object\r\tTranscript\r\t\tshow: object className , \' attributes are: \';\r\t\tcr.\r\tobject allInstVarNames\r\t\tdo: [ :varName | \r\t\t\tTranscript\r\t\t\t\tshow: varName , \' \' , (object instVarNamed: varName asSymbol);\r\t\t\t\tcr ]',			#stamp : 'ThomasDiGiovanni 9/27/2019 12:28',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-27T12:31:17.786624+02:00' ],		#prior : OmReference [ '122' ],		#self : OmReference [ '123' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Inspecter,				#isMetaSide : false			},			#name : #'inspect:',			#protocol : #actions,			#sourceCode : 'inspect: object\r\tTranscript\r\t\tshow: object className , \' attributes are: \';\r\t\tcr.\r\tobject allInstVarNames\r\t\tdo: [ :varName | \r\t\t\tTranscript\r\t\t\t\tshow: varName , \' \' , (object instVarNamed: varName asSymbol);\r\t\t\t\tcr ]',			#stamp : 'ThomasDiGiovanni 9/27/2019 12:28',			#package : #Metaprogrammation		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Inspecter,				#isMetaSide : false			},			#name : #'inspect:',			#protocol : #actions,			#sourceCode : 'inspect: object\r\tTranscript\r\t\tshow: object className , \' attributes are: \';\r\t\tcr.\r\tobject class allInstVarNames\r\t\tdo: [ :varName | \r\t\t\tTranscript\r\t\t\t\tshow: varName , \' \' , (object instVarNamed: varName asSymbol);\r\t\t\t\tcr ]',			#stamp : 'ThomasDiGiovanni 9/27/2019 12:31',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-27T12:31:54.523624+02:00' ],		#prior : OmReference [ '123' ],		#self : OmReference [ '124' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Inspecter,				#isMetaSide : false			},			#name : #'inspect:',			#protocol : #actions,			#sourceCode : 'inspect: object\r\tTranscript\r\t\tshow: object className , \' attributes are: \';\r\t\tcr.\r\tobject class allInstVarNames\r\t\tdo: [ :varName | \r\t\t\tTranscript\r\t\t\t\tshow: varName , \' \' , (object instVarNamed: varName asSymbol);\r\t\t\t\tcr ]',			#stamp : 'ThomasDiGiovanni 9/27/2019 12:31',			#package : #Metaprogrammation		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Inspecter,				#isMetaSide : false			},			#name : #'inspect:',			#protocol : #actions,			#sourceCode : 'inspect: object\r\tTranscript\r\t\tshow: object className , \' attributes are: \';\r\t\tcr.\r\tobject class allInstVarNames\r\t\tdo: [ :varName | \r\t\t\tTranscript\r\t\t\t\tshow: varName , \' \' , (object class instVarNamed: varName asSymbol);\r\t\t\t\tcr ]',			#stamp : 'ThomasDiGiovanni 9/27/2019 12:31',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-27T12:32:03.283624+02:00' ],		#prior : OmReference [ '124' ],		#self : OmReference [ '125' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Inspecter,				#isMetaSide : false			},			#name : #'inspect:',			#protocol : #actions,			#sourceCode : 'inspect: object\r\tTranscript\r\t\tshow: object className , \' attributes are: \';\r\t\tcr.\r\tobject class allInstVarNames\r\t\tdo: [ :varName | \r\t\t\tTranscript\r\t\t\t\tshow: varName , \' \' , (object class instVarNamed: varName asSymbol);\r\t\t\t\tcr ]',			#stamp : 'ThomasDiGiovanni 9/27/2019 12:31',			#package : #Metaprogrammation		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Inspecter,				#isMetaSide : false			},			#name : #'inspect:',			#protocol : #actions,			#sourceCode : 'inspect: object\r\tTranscript\r\t\tshow: object className , \' attributes are: \';\r\t\tcr.\r\tobject class allInstVarNames\r\t\tdo: [ :varName | \r\t\t\tTranscript\r\t\t\t\tshow: varName , \' \' , (object instVarNamed: varName asSymbol);\r\t\t\t\tcr ]',			#stamp : 'ThomasDiGiovanni 9/27/2019 12:32',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-27T12:32:07.643624+02:00' ],		#prior : OmReference [ '125' ],		#self : OmReference [ '126' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Inspecter,				#isMetaSide : false			},			#name : #'inspect:',			#protocol : #actions,			#sourceCode : 'inspect: object\r\tTranscript\r\t\tshow: object className , \' attributes are: \';\r\t\tcr.\r\tobject class allInstVarNames\r\t\tdo: [ :varName | \r\t\t\tTranscript\r\t\t\t\tshow: varName , \' \' , (object instVarNamed: varName asSymbol);\r\t\t\t\tcr ]',			#stamp : 'ThomasDiGiovanni 9/27/2019 12:32',			#package : #Metaprogrammation		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Inspecter,				#isMetaSide : false			},			#name : #'inspect:',			#protocol : #actions,			#sourceCode : 'inspect: object\r\tTranscript\r\t\tshow: object className , \' attributes are: \';\r\t\tcr.\r\tobject class allInstVarNames\r\t\tdo: [ :varName | \r\t\t\tTranscript\r\t\t\t\tshow: varName , \' \' , (object instVarNamed: varName);\r\t\t\t\tcr ]',			#stamp : 'ThomasDiGiovanni 9/27/2019 12:32',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-27T12:32:17.910624+02:00' ],		#prior : OmReference [ '126' ],		#self : OmReference [ '127' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Inspecter,				#isMetaSide : false			},			#name : #'inspect:',			#protocol : #actions,			#sourceCode : 'inspect: object\r\tTranscript\r\t\tshow: object className , \' attributes are: \';\r\t\tcr.\r\tobject class allInstVarNames\r\t\tdo: [ :varName | \r\t\t\tTranscript\r\t\t\t\tshow: varName , \' \' , (object instVarNamed: varName);\r\t\t\t\tcr ]',			#stamp : 'ThomasDiGiovanni 9/27/2019 12:32',			#package : #Metaprogrammation		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Inspecter,				#isMetaSide : false			},			#name : #'inspect:',			#protocol : #actions,			#sourceCode : 'inspect: object\r\tTranscript\r\t\tshow: object className , \' attributes are: \';\r\t\tcr.\r\tobject class allInstVarNames\r\t\tdo: [ :varName | \r\t\t\tTranscript\r\t\t\t\tshow: varName , \' \' , (object instVarNamed: varName asSymbol);\r\t\t\t\tcr ]',			#stamp : 'ThomasDiGiovanni 9/27/2019 12:32',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-27T12:32:24.980624+02:00' ],		#prior : OmReference [ '127' ],		#self : OmReference [ '128' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Inspecter,				#isMetaSide : false			},			#name : #'inspect:',			#protocol : #actions,			#sourceCode : 'inspect: object\r\tTranscript\r\t\tshow: object className , \' attributes are: \';\r\t\tcr.\r\tobject class allInstVarNames\r\t\tdo: [ :varName | \r\t\t\tTranscript\r\t\t\t\tshow: varName , \' \' , (object instVarNamed: varName asSymbol);\r\t\t\t\tcr ]',			#stamp : 'ThomasDiGiovanni 9/27/2019 12:32',			#package : #Metaprogrammation		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Inspecter,				#isMetaSide : false			},			#name : #'inspect:',			#protocol : #actions,			#sourceCode : 'inspect: object\r\tTranscript\r\t\tshow: object className , \' attributes are: \';\r\t\tcr.\r\tobject class allInstVarNames\r\t\tdo: [ :varName | \r\t\t\tTranscript\r\t\t\t\tshow: varName , \' \' , (object instVarNamed: varName asSymbol) asString;\r\t\t\t\tcr ]',			#stamp : 'ThomasDiGiovanni 9/27/2019 12:32',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-27T12:36:13.759624+02:00' ],		#prior : OmReference [ '128' ],		#self : OmReference [ '129' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ManifestMetaprogrammation class',				#isMetaSide : true			},			#name : #ruleRBBadMessageRuleV1FalsePositive,			#protocol : #code-critics,			#sourceCode : 'ruleRBBadMessageRuleV1FalsePositive\r\t^ #()',			#stamp : 'ThomasDiGiovanni 9/27/2019 12:36',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-27T12:36:13.779624+02:00' ],		#prior : OmReference [ '129' ],		#self : OmReference [ '130' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ManifestMetaprogrammation class',				#isMetaSide : true			},			#name : #ruleRBBadMessageRuleV1FalsePositive,			#protocol : #code-critics,			#sourceCode : 'ruleRBBadMessageRuleV1FalsePositive\r\t^ #()',			#stamp : 'ThomasDiGiovanni 9/27/2019 12:36',			#package : #Metaprogrammation		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ManifestMetaprogrammation class',				#isMetaSide : true			},			#name : #ruleRBBadMessageRuleV1FalsePositive,			#protocol : #code-critics,			#sourceCode : 'ruleRBBadMessageRuleV1FalsePositive\r\t^ #(#(#(#RGClassDefinition #(#Inspecter)) #\'2019-09-27T12:36:13.763624+02:00\') )',			#stamp : 'ThomasDiGiovanni 9/27/2019 12:36',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-27T12:36:43.089624+02:00' ],		#prior : OmReference [ '130' ],		#self : OmReference [ '131' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ManifestMetaprogrammation class',				#isMetaSide : true			},			#name : #ruleRBUtilityMethodsRuleV1FalsePositive,			#protocol : #code-critics,			#sourceCode : 'ruleRBUtilityMethodsRuleV1FalsePositive\r\t^ #()',			#stamp : 'ThomasDiGiovanni 9/27/2019 12:36',			#package : #Metaprogrammation		}	}}OmEntry {	#tags : {		#author : 'ThomasDiGiovanni',		#time : DateAndTime [ '2019-09-27T12:36:43.112624+02:00' ],		#prior : OmReference [ '131' ],		#self : OmReference [ '132' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ManifestMetaprogrammation class',				#isMetaSide : true			},			#name : #ruleRBUtilityMethodsRuleV1FalsePositive,			#protocol : #code-critics,			#sourceCode : 'ruleRBUtilityMethodsRuleV1FalsePositive\r\t^ #()',			#stamp : 'ThomasDiGiovanni 9/27/2019 12:36',			#package : #Metaprogrammation		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ManifestMetaprogrammation class',				#isMetaSide : true			},			#name : #ruleRBUtilityMethodsRuleV1FalsePositive,			#protocol : #code-critics,			#sourceCode : 'ruleRBUtilityMethodsRuleV1FalsePositive\r\t^ #(#(#(#RGClassDefinition #(#Inspecter)) #\'2019-09-27T12:36:43.094624+02:00\') )',			#stamp : 'ThomasDiGiovanni 9/27/2019 12:36',			#package : #Metaprogrammation		}	}}