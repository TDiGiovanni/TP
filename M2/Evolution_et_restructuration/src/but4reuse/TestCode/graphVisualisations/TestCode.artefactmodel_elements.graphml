<?xml version="1.0" ?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.1/graphml.xsd">
    <key id="Label" for="node" attr.name="Label" attr.type="string"></key>
    <key id="Notepad_1" for="node" attr.name="Notepad_1" attr.type="string"></key>
    <key id="Notepad_2" for="node" attr.name="Notepad_2" attr.type="string"></key>
    <key id="Notepad_3" for="node" attr.name="Notepad_3" attr.type="string"></key>
    <key id="Notepad_4" for="node" attr.name="Notepad_4" attr.type="string"></key>
    <key id="Notepad_5" for="node" attr.name="Notepad_5" attr.type="string"></key>
    <key id="Notepad_6" for="node" attr.name="Notepad_6" attr.type="string"></key>
    <key id="Notepad_7" for="node" attr.name="Notepad_7" attr.type="string"></key>
    <key id="Notepad_8" for="node" attr.name="Notepad_8" attr.type="string"></key>
    <key id="block" for="node" attr.name="block" attr.type="string"></key>
    <key id="elementType" for="node" attr.name="elementType" attr.type="string"></key>
    <key id="Label" for="edge" attr.name="Label" attr.type="string"></key>
    <key id="dependencyType" for="edge" attr.name="dependencyType" attr.type="string"></key>
    <graph id="G" edgedefault="directed">
        <node id="0">
            <data key="Label">CompilationUnit: About</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">FSTNonTerminalNodeElement</data>
        </node>
        <node id="1">
            <data key="Label">	ClassDeclaration: About</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">FSTNonTerminalNodeElement</data>
        </node>
        <node id="10">
            <data key="Label">		FieldDecl: serialVersionUID</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">FSTTerminalNodeElement</data>
        </node>
        <node id="100">
            <data key="Label">		FieldDecl: useExtensionsInDescription</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">FSTTerminalNodeElement</data>
        </node>
        <node id="101">
            <data key="Label">		FieldDecl: useExtensionsInDescription Body: private boolean useExtensionsInDescription = true;</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">BodyElement</data>
        </node>
        <node id="102">
            <data key="Label">		ConstructorDecl: ExampleFileFilter({FormalParametersInternal})</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">FSTTerminalNodeElement</data>
        </node>
        <node id="103">
            <data key="Label">		ConstructorDecl: ExampleFileFilter({FormalParametersInternal}) Body: public ExampleFileFilter(){      	this.filters = new Hashtable&lt;String, ExampleFileFilter&gt;();      }</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">BodyElement</data>
        </node>
        <node id="104">
            <data key="Label">		ConstructorDecl: ExampleFileFilter(String-String)</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">FSTTerminalNodeElement</data>
        </node>
        <node id="105">
            <data key="Label">		ConstructorDecl: ExampleFileFilter(String-String) Body: public ExampleFileFilter(String extension){      this(extension,null);      }</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">BodyElement</data>
        </node>
        <node id="106">
            <data key="Label">		ConstructorDecl: ExampleFileFilter(String-String-String-String)</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">FSTTerminalNodeElement</data>
        </node>
        <node id="107">
            <data key="Label">		ConstructorDecl: ExampleFileFilter(String-String-String-String) Body: public ExampleFileFilter(String extension, String description){      this();      if(extension!=null) addExtension(extension);      if(description!=null) setDescription(description);      }</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">BodyElement</data>
        </node>
        <node id="108">
            <data key="Label">		ConstructorDecl: ExampleFileFilter(String[]-String[])</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">FSTTerminalNodeElement</data>
        </node>
        <node id="109">
            <data key="Label">		ConstructorDecl: ExampleFileFilter(String[]-String[]) Body: public ExampleFileFilter(String[] filters){      this(filters, null);      }</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">BodyElement</data>
        </node>
        <node id="11">
            <data key="Label">		FieldDecl: serialVersionUID Body: private static final long serialVersionUID = 1;</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">BodyElement</data>
        </node>
        <node id="110">
            <data key="Label">		ConstructorDecl: ExampleFileFilter(String[]-String[]-String-String)</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">FSTTerminalNodeElement</data>
        </node>
        <node id="111">
            <data key="Label">		ConstructorDecl: ExampleFileFilter(String[]-String[]-String-String) Body: public ExampleFileFilter(String[] filters, String description){      this();      for (int i = 0; i &lt; filters.length; i++){           // add filters one by one           addExtension(filters[i]);      }      if(description!=null) setDescription(description);      }</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">BodyElement</data>
        </node>
        <node id="112">
            <data key="Label">		MethodDecl: accept(File-File)</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">FSTTerminalNodeElement</data>
        </node>
        <node id="113">
            <data key="Label">		MethodDecl: accept(File-File) Body: public boolean accept(File f){      if(f != null){           if(f.isDirectory()){          return true;           }           String extension = getExtension(f);           if(extension != null &amp;&amp; filters.get(getExtension(f)) != null){          return true;           };      }      return false;      }</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">BodyElement</data>
        </node>
        <node id="114">
            <data key="Label">		MethodDecl: getExtension(File-File)</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">FSTTerminalNodeElement</data>
        </node>
        <node id="115">
            <data key="Label">		MethodDecl: getExtension(File-File) Body: public String getExtension(File f){      if(f != null){           String filename = f.getName();           int i = filename.lastIndexOf('.');           if(i&gt;0 &amp;&amp; i&lt;filename.length()-1){          return filename.substring(i+1).toLowerCase();           };      }      return null;      }</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">BodyElement</data>
        </node>
        <node id="116">
            <data key="Label">		MethodDecl: addExtension(String-String)</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">FSTTerminalNodeElement</data>
        </node>
        <node id="117">
            <data key="Label">		MethodDecl: addExtension(String-String) Body: public void addExtension(String extension){      if(filters == null){           filters = new Hashtable&lt;String, ExampleFileFilter&gt;(5);      }      filters.put(extension.toLowerCase(), this);      fullDescription = null;      }</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">BodyElement</data>
        </node>
        <node id="118">
            <data key="Label">		MethodDecl: getDescription({FormalParametersInternal})</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">FSTTerminalNodeElement</data>
        </node>
        <node id="119">
            <data key="Label">		MethodDecl: getDescription({FormalParametersInternal}) Body: @SuppressWarnings("rawtypes")      public String getDescription(){      if(fullDescription == null) {           if(description == null || isExtensionListInDescription()){          fullDescription = description==null ? "(" : description + " (";          // build the description from the extension list          Enumeration extensions = filters.keys();          if(extensions != null){               fullDescription += "." + (String) extensions.nextElement();               while (extensions.hasMoreElements()) {              fullDescription += ", ." + (String) extensions.nextElement();               }          }          fullDescription += ")";           } else {          fullDescription = description;           }      }      return fullDescription;      }</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">BodyElement</data>
        </node>
        <node id="12">
            <data key="Label">		ConstructorDecl: About({FormalParametersInternal})</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">FSTTerminalNodeElement</data>
        </node>
        <node id="120">
            <data key="Label">		MethodDecl: setDescription(String-String)</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">FSTTerminalNodeElement</data>
        </node>
        <node id="121">
            <data key="Label">		MethodDecl: setDescription(String-String) Body: public void setDescription(String description){      this.description = description;      fullDescription = null;      }</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">BodyElement</data>
        </node>
        <node id="122">
            <data key="Label">		MethodDecl: setExtensionListInDescription(boolean-boolean)</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">FSTTerminalNodeElement</data>
        </node>
        <node id="123">
            <data key="Label">		MethodDecl: setExtensionListInDescription(boolean-boolean) Body: public void setExtensionListInDescription(boolean b){      useExtensionsInDescription = b;      fullDescription = null;      }</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">BodyElement</data>
        </node>
        <node id="124">
            <data key="Label">		MethodDecl: isExtensionListInDescription({FormalParametersInternal})</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">FSTTerminalNodeElement</data>
        </node>
        <node id="125">
            <data key="Label">		MethodDecl: isExtensionListInDescription({FormalParametersInternal}) Body: public boolean isExtensionListInDescription(){      return useExtensionsInDescription;      }</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">BodyElement</data>
        </node>
        <node id="126">
            <data key="Label">CompilationUnit: Fonts</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">FSTNonTerminalNodeElement</data>
        </node>
        <node id="127">
            <data key="Label">	ClassDeclaration: Fonts</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">FSTNonTerminalNodeElement</data>
        </node>
        <node id="128">
            <data key="Label">		Modifiers: </data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">FSTTerminalNodeElement</data>
        </node>
        <node id="129">
            <data key="Label">		Modifiers:  Body: public</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">BodyElement</data>
        </node>
        <node id="13">
            <data key="Label">		ConstructorDecl: About({FormalParametersInternal}) Body: public About(){          //Create a Label &amp; an image icon in it          JLabel label1 = new JLabel(new ImageIcon(this.getClass().getResource("images/java.gif")));          //adding label1 to the JPanel          this.add(label1);          //Create a Label &amp; put a HTML script          JLabel label2 = new JLabel("&lt;html&gt;&lt;li&gt;JAVAï¿½ Notepad&lt;/li&gt;&lt;li&gt;&lt;p&gt;Ver# 2.0&lt;/li&gt;"          +"&lt;li&gt;&lt;p&gt;Coded by: Salah Al-Thubaiti&lt;/li&gt;&lt;li&gt;&lt;p&gt;KFUPM, CS&lt;/li&gt;&lt;li&gt;"          +"&lt;p&gt;CopyRightï¿½ 2001-2002&lt;/li&gt;&lt;/html&gt;");          //adding label2 to the JPanel          this.add(label2);      }</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">BodyElement</data>
        </node>
        <node id="130">
            <data key="Label">		ClassOrInterface1: </data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">FSTTerminalNodeElement</data>
        </node>
        <node id="131">
            <data key="Label">		ClassOrInterface1:  Body: class</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">BodyElement</data>
        </node>
        <node id="132">
            <data key="Label">		Id: Fonts</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">FSTTerminalNodeElement</data>
        </node>
        <node id="133">
            <data key="Label">		Id: Fonts Body: Fonts</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">BodyElement</data>
        </node>
        <node id="134">
            <data key="Label">		ExtendsList: </data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">FSTTerminalNodeElement</data>
        </node>
        <node id="135">
            <data key="Label">		ExtendsList:  Body: extends JDialog</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">BodyElement</data>
        </node>
        <node id="136">
            <data key="Label">		FieldDecl: serialVersionUID</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">FSTTerminalNodeElement</data>
        </node>
        <node id="137">
            <data key="Label">		FieldDecl: serialVersionUID Body: private static final long serialVersionUID = 1L;</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">BodyElement</data>
        </node>
        <node id="138">
            <data key="Label">		FieldDecl: center</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">FSTTerminalNodeElement</data>
        </node>
        <node id="139">
            <data key="Label">		FieldDecl: center Body: public Center center = new Center(this);</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">BodyElement</data>
        </node>
        <node id="14">
            <data key="Label">CompilationUnit: Actions</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">FSTNonTerminalNodeElement</data>
        </node>
        <node id="140">
            <data key="Label">		FieldDecl: jp</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">FSTTerminalNodeElement</data>
        </node>
        <node id="141">
            <data key="Label">		FieldDecl: jp Body: private JPanel jp = new JPanel();</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">BodyElement</data>
        </node>
        <node id="142">
            <data key="Label">		FieldDecl: fjl</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">FSTTerminalNodeElement</data>
        </node>
        <node id="143">
            <data key="Label">		FieldDecl: fjl Body: private JLabel fjl = new JLabel("Fonts: ");</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">BodyElement</data>
        </node>
        <node id="144">
            <data key="Label">		FieldDecl: fjcb</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">FSTTerminalNodeElement</data>
        </node>
        <node id="145">
            <data key="Label">		FieldDecl: fjcb Body: private JComboBox fjcb = new JComboBox();</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">BodyElement</data>
        </node>
        <node id="146">
            <data key="Label">		FieldDecl: fonts</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">FSTTerminalNodeElement</data>
        </node>
        <node id="147">
            <data key="Label">		FieldDecl: fonts Body: private String fonts[]=GraphicsEnvironment.getLocalGraphicsEnvironment().getAvailableFontFamilyNames();</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">BodyElement</data>
        </node>
        <node id="148">
            <data key="Label">		FieldDecl: sjl</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">FSTTerminalNodeElement</data>
        </node>
        <node id="149">
            <data key="Label">		FieldDecl: sjl Body: private JLabel sjl = new JLabel("Sizes: ");</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">BodyElement</data>
        </node>
        <node id="15">
            <data key="Label">	ClassDeclaration: Actions</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">FSTNonTerminalNodeElement</data>
        </node>
        <node id="150">
            <data key="Label">		FieldDecl: sjcb</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">FSTTerminalNodeElement</data>
        </node>
        <node id="151">
            <data key="Label">		FieldDecl: sjcb Body: private JComboBox sjcb = new JComboBox();</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">BodyElement</data>
        </node>
        <node id="152">
            <data key="Label">		FieldDecl: sizes</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">FSTTerminalNodeElement</data>
        </node>
        <node id="153">
            <data key="Label">		FieldDecl: sizes Body: private String sizes[] = {"8","10","12","14","16","18","20","24","28","32","48","72"};</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">BodyElement</data>
        </node>
        <node id="154">
            <data key="Label">		FieldDecl: tjl</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">FSTTerminalNodeElement</data>
        </node>
        <node id="155">
            <data key="Label">		FieldDecl: tjl Body: private JLabel tjl = new JLabel("Types: ");</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">BodyElement</data>
        </node>
        <node id="156">
            <data key="Label">		FieldDecl: tjcb</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">FSTTerminalNodeElement</data>
        </node>
        <node id="157">
            <data key="Label">		FieldDecl: tjcb Body: private JComboBox tjcb = new JComboBox();</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">BodyElement</data>
        </node>
        <node id="158">
            <data key="Label">		FieldDecl: types</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">FSTTerminalNodeElement</data>
        </node>
        <node id="159">
            <data key="Label">		FieldDecl: types Body: private String types[] = {"Regular", "Bold", "Italic", "Bold Italic"};</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">BodyElement</data>
        </node>
        <node id="16">
            <data key="Label">		Modifiers: </data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">FSTTerminalNodeElement</data>
        </node>
        <node id="160">
            <data key="Label">		FieldDecl: jjl</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">FSTTerminalNodeElement</data>
        </node>
        <node id="161">
            <data key="Label">		FieldDecl: jjl Body: private JLabel jjl = new JLabel("Preview:");</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">BodyElement</data>
        </node>
        <node id="162">
            <data key="Label">		FieldDecl: jl</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">FSTTerminalNodeElement</data>
        </node>
        <node id="163">
            <data key="Label">		FieldDecl: jl Body: private JLabel jl = new JLabel("AaBaCcDdeEfFgGhHjJ");</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">BodyElement</data>
        </node>
        <node id="164">
            <data key="Label">		FieldDecl: okjb</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">FSTTerminalNodeElement</data>
        </node>
        <node id="165">
            <data key="Label">		FieldDecl: okjb Body: private JButton okjb = new JButton("OK");</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">BodyElement</data>
        </node>
        <node id="166">
            <data key="Label">		FieldDecl: cajb</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">FSTTerminalNodeElement</data>
        </node>
        <node id="167">
            <data key="Label">		FieldDecl: cajb Body: private JButton cajb = new JButton("Cancel");</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">BodyElement</data>
        </node>
        <node id="168">
            <data key="Label">		MethodDecl: getOkjb({FormalParametersInternal})</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">FSTTerminalNodeElement</data>
        </node>
        <node id="169">
            <data key="Label">		MethodDecl: getOkjb({FormalParametersInternal}) Body: public JButton getOkjb(){          return okjb;      }</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">BodyElement</data>
        </node>
        <node id="17">
            <data key="Label">		Modifiers:  Body: public</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">BodyElement</data>
        </node>
        <node id="170">
            <data key="Label">		MethodDecl: getCajb({FormalParametersInternal})</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">FSTTerminalNodeElement</data>
        </node>
        <node id="171">
            <data key="Label">		MethodDecl: getCajb({FormalParametersInternal}) Body: public JButton getCajb(){          return cajb;      }</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">BodyElement</data>
        </node>
        <node id="172">
            <data key="Label">		ConstructorDecl: Fonts({FormalParametersInternal})</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">FSTTerminalNodeElement</data>
        </node>
        <node id="173">
            <data key="Label">		ConstructorDecl: Fonts({FormalParametersInternal}) Body: public Fonts(){          //for setting the title          setTitle("Font Dialog");          setResizable(false);          /**           *setting the layout (GridLayout: 5 rows &amp; 2 columns)           *add font JLabel, add font JComboBox           *add type JLabel, add type JComboBox           *add size JLabel, add size JComboBox           *add preview JLabel,add test JLabel           *add ok button, add cancel button           */          jp.setLayout(new GridLayout(5,2,1,1));          jp.add(fjl);          jp.add(fjcb = new JComboBox(fonts));          jp.add(sjl);          jp.add(sjcb = new JComboBox(sizes));          jp.add(tjl);          jp.add(tjcb = new JComboBox(types));          jp.add(jjl);          jl.setBorder(BorderFactory.createEtchedBorder());          jp.add(jl);          jp.add(okjb);          jp.add(cajb);          //add JPanel to the Container          this.getContentPane().add(jp);          /**           *for making JDialog at the center,           *@Center.java           */          center.fCenter();          //add action listener to Font JComboBox to get the selected item for setting the preview          fjcb.addActionListener(new ActionListener(){              public void actionPerformed(ActionEvent ae){                  jl.setFont(new Font(String.valueOf(fjcb.getSelectedItem()),tjcb.getSelectedIndex(),14));              }          });          //add action listener to Type JComboBox to get the selected index for setting the preview          tjcb.addActionListener(new ActionListener(){              public void actionPerformed(ActionEvent ae){                  jl.setFont(new Font(String.valueOf(fjcb.getSelectedItem()),tjcb.getSelectedIndex(),14));              }          });      }</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">BodyElement</data>
        </node>
        <node id="174">
            <data key="Label">		MethodDecl: font({FormalParametersInternal})</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">FSTTerminalNodeElement</data>
        </node>
        <node id="175">
            <data key="Label">		MethodDecl: font({FormalParametersInternal}) Body: public Font font(){          Font font = new Font(String.valueOf(fjcb.getSelectedItem()), tjcb.getSelectedIndex(),                          Integer.parseInt(String.valueOf(sjcb.getSelectedItem())));          return font;      }</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">BodyElement</data>
        </node>
        <node id="176">
            <data key="Label">CompilationUnit: Notepad</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">FSTNonTerminalNodeElement</data>
        </node>
        <node id="177">
            <data key="Label">	ClassDeclaration: Notepad</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">FSTNonTerminalNodeElement</data>
        </node>
        <node id="178">
            <data key="Label">		Modifiers: </data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">FSTTerminalNodeElement</data>
        </node>
        <node id="179">
            <data key="Label">		Modifiers:  Body: public</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">BodyElement</data>
        </node>
        <node id="18">
            <data key="Label">		ClassOrInterface1: </data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">FSTTerminalNodeElement</data>
        </node>
        <node id="180">
            <data key="Label">		ClassOrInterface1: </data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">FSTTerminalNodeElement</data>
        </node>
        <node id="181">
            <data key="Label">		ClassOrInterface1:  Body: class</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">BodyElement</data>
        </node>
        <node id="182">
            <data key="Label">		Id: Notepad</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">FSTTerminalNodeElement</data>
        </node>
        <node id="183">
            <data key="Label">		Id: Notepad Body: Notepad</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">BodyElement</data>
        </node>
        <node id="184">
            <data key="Label">		ExtendsList: </data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">FSTTerminalNodeElement</data>
        </node>
        <node id="185">
            <data key="Label">		ExtendsList:  Body: extends JFrame</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">BodyElement</data>
        </node>
        <node id="186">
            <data key="Label">		FieldDecl: serialVersionUID</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">FSTTerminalNodeElement</data>
        </node>
        <node id="187">
            <data key="Label">		FieldDecl: serialVersionUID Body: private static final long serialVersionUID = 1;</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">BodyElement</data>
        </node>
        <node id="188">
            <data key="Label">		FieldDecl: actions</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">FSTTerminalNodeElement</data>
        </node>
        <node id="189">
            <data key="Label">		FieldDecl: actions Body: public Actions actions = new Actions(this);</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">BodyElement</data>
        </node>
        <node id="19">
            <data key="Label">		ClassOrInterface1:  Body: class</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">BodyElement</data>
        </node>
        <node id="190">
            <data key="Label">		FieldDecl: center</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">FSTTerminalNodeElement</data>
        </node>
        <node id="191">
            <data key="Label">		FieldDecl: center Body: public Center center = new Center(this);</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">BodyElement</data>
        </node>
        <node id="192">
            <data key="Label">		FieldDecl: textArea</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">FSTTerminalNodeElement</data>
        </node>
        <node id="193">
            <data key="Label">		FieldDecl: textArea Body: private JTextArea textArea;</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">BodyElement</data>
        </node>
        <node id="194">
            <data key="Label">		FieldDecl: Menubar</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">FSTTerminalNodeElement</data>
        </node>
        <node id="195">
            <data key="Label">		FieldDecl: Menubar Body: private JMenuBar Menubar;</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">BodyElement</data>
        </node>
        <node id="196">
            <data key="Label">		FieldDecl: filE</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">FSTTerminalNodeElement</data>
        </node>
        <node id="197">
            <data key="Label">		FieldDecl: filE Body: private JMenu filE, ediT, vieW, formaT, helP;</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">BodyElement</data>
        </node>
        <node id="198">
            <data key="Label">		FieldDecl: neW</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">FSTTerminalNodeElement</data>
        </node>
        <node id="199">
            <data key="Label">		FieldDecl: neW Body: private JMenuItem neW, opeN, savE, saveAS, prinT, exiT, fonT, abouT,      cuT, copY, pastE, selectALL;</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">BodyElement</data>
        </node>
        <node id="2">
            <data key="Label">		Modifiers: </data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">FSTTerminalNodeElement</data>
        </node>
        <node id="20">
            <data key="Label">		Id: Actions</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">FSTTerminalNodeElement</data>
        </node>
        <node id="200">
            <data key="Label">		FieldDecl: lineWraP</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">FSTTerminalNodeElement</data>
        </node>
        <node id="201">
            <data key="Label">		FieldDecl: lineWraP Body: private JCheckBoxMenuItem lineWraP;</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">BodyElement</data>
        </node>
        <node id="202">
            <data key="Label">		FieldDecl: toolBar</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">FSTTerminalNodeElement</data>
        </node>
        <node id="203">
            <data key="Label">		FieldDecl: toolBar Body: private JToolBar toolBar;</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">BodyElement</data>
        </node>
        <node id="204">
            <data key="Label">		FieldDecl: newButton</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">FSTTerminalNodeElement</data>
        </node>
        <node id="205">
            <data key="Label">		FieldDecl: newButton Body: private JButton newButton, openButton, saveButton, saveAsButton, printButton,      fontButton, aboutButton;</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">BodyElement</data>
        </node>
        <node id="206">
            <data key="Label">		MethodDecl: getLineWrap({FormalParametersInternal})</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">FSTTerminalNodeElement</data>
        </node>
        <node id="207">
            <data key="Label">		MethodDecl: getLineWrap({FormalParametersInternal}) Body: public JCheckBoxMenuItem getLineWrap(){          return lineWraP;      }</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">BodyElement</data>
        </node>
        <node id="208">
            <data key="Label">		MethodDecl: getTextArea({FormalParametersInternal})</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">FSTTerminalNodeElement</data>
        </node>
        <node id="209">
            <data key="Label">		MethodDecl: getTextArea({FormalParametersInternal}) Body: public JTextArea getTextArea(){          return textArea;      }</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">BodyElement</data>
        </node>
        <node id="21">
            <data key="Label">		Id: Actions Body: Actions</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">BodyElement</data>
        </node>
        <node id="210">
            <data key="Label">		ConstructorDecl: Notepad({FormalParametersInternal})</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">FSTTerminalNodeElement</data>
        </node>
        <node id="211">
            <data key="Label">		MethodDecl: main(String[]-String[])</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">FSTTerminalNodeElement</data>
        </node>
        <node id="212">
            <data key="Label">		MethodDecl: main(String[]-String[]) Body: public static void main(String[] args){          new Notepad();        }</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">BodyElement</data>
        </node>
        <node id="213">
            <data key="Label">CompilationUnit: Print</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">FSTNonTerminalNodeElement</data>
        </node>
        <node id="214">
            <data key="Label">	ClassDeclaration: Print</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">FSTNonTerminalNodeElement</data>
        </node>
        <node id="215">
            <data key="Label">		Modifiers: </data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">FSTTerminalNodeElement</data>
        </node>
        <node id="216">
            <data key="Label">		Modifiers:  Body: public</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">BodyElement</data>
        </node>
        <node id="217">
            <data key="Label">		ClassOrInterface1: </data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">FSTTerminalNodeElement</data>
        </node>
        <node id="218">
            <data key="Label">		ClassOrInterface1:  Body: class</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">BodyElement</data>
        </node>
        <node id="219">
            <data key="Label">		Id: Print</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">FSTTerminalNodeElement</data>
        </node>
        <node id="22">
            <data key="Label">		FieldDecl: returnVal</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">FSTTerminalNodeElement</data>
        </node>
        <node id="220">
            <data key="Label">		Id: Print Body: Print</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">BodyElement</data>
        </node>
        <node id="221">
            <data key="Label">		ImplementsList: </data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">FSTTerminalNodeElement</data>
        </node>
        <node id="222">
            <data key="Label">		ImplementsList:  Body: implements Printable</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">BodyElement</data>
        </node>
        <node id="223">
            <data key="Label">		FieldDecl: componentToBePrinted</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">FSTTerminalNodeElement</data>
        </node>
        <node id="224">
            <data key="Label">		FieldDecl: componentToBePrinted Body: private Component componentToBePrinted;</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">BodyElement</data>
        </node>
        <node id="225">
            <data key="Label">		MethodDecl: printComponent(Component-Component)</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">FSTTerminalNodeElement</data>
        </node>
        <node id="226">
            <data key="Label">		MethodDecl: printComponent(Component-Component) Body: public static void printComponent(Component c){          new Print(c).print();      }</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">BodyElement</data>
        </node>
        <node id="227">
            <data key="Label">		ConstructorDecl: Print(Component-Component)</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">FSTTerminalNodeElement</data>
        </node>
        <node id="228">
            <data key="Label">		ConstructorDecl: Print(Component-Component) Body: public Print(Component componentToBePrinted){          this.componentToBePrinted = componentToBePrinted;      }</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">BodyElement</data>
        </node>
        <node id="229">
            <data key="Label">		MethodDecl: print({FormalParametersInternal})</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">FSTTerminalNodeElement</data>
        </node>
        <node id="23">
            <data key="Label">		FieldDecl: returnVal Body: private int returnVal;</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">BodyElement</data>
        </node>
        <node id="230">
            <data key="Label">		MethodDecl: print({FormalParametersInternal}) Body: public void print(){          PrinterJob printJob = PrinterJob.getPrinterJob();          printJob.setPrintable(this);          if(printJob.printDialog())          try{              printJob.print();          }          catch(PrinterException pe){              System.out.println("Error printing: " + pe);          }      }</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">BodyElement</data>
        </node>
        <node id="231">
            <data key="Label">		MethodDecl: print(Graphics-Graphics-PageFormat-PageFormat-int-int)</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">FSTTerminalNodeElement</data>
        </node>
        <node id="232">
            <data key="Label">		MethodDecl: print(Graphics-Graphics-PageFormat-PageFormat-int-int) Body: public int print(Graphics g, PageFormat pageFormat, int pageIndex){          if(pageIndex &gt; 0){              return(NO_SUCH_PAGE);          }          else{              Graphics2D g2d = (Graphics2D)g;              g2d.translate(pageFormat.getImageableX(), pageFormat.getImageableY());              disableDoubleBuffering(componentToBePrinted);              componentToBePrinted.paint(g2d);              enableDoubleBuffering(componentToBePrinted);              return(PAGE_EXISTS);          }      }</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">BodyElement</data>
        </node>
        <node id="233">
            <data key="Label">		MethodDecl: disableDoubleBuffering(Component-Component)</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">FSTTerminalNodeElement</data>
        </node>
        <node id="234">
            <data key="Label">		MethodDecl: disableDoubleBuffering(Component-Component) Body: public static void disableDoubleBuffering(Component c){          RepaintManager currentManager = RepaintManager.currentManager(c);          currentManager.setDoubleBufferingEnabled(false);      }</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">BodyElement</data>
        </node>
        <node id="235">
            <data key="Label">		MethodDecl: enableDoubleBuffering(Component-Component)</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">FSTTerminalNodeElement</data>
        </node>
        <node id="236">
            <data key="Label">		MethodDecl: enableDoubleBuffering(Component-Component) Body: public static void enableDoubleBuffering(Component c){          RepaintManager currentManager = RepaintManager.currentManager(c);          currentManager.setDoubleBufferingEnabled(true);      }</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">BodyElement</data>
        </node>
        <node id="237">
            <data key="Label">		MethodDecl: cuT({FormalParametersInternal})</data>
            <data key="Notepad_1">no</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">no</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">no</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">no</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 01</data>
            <data key="elementType">FSTTerminalNodeElement</data>
        </node>
        <node id="238">
            <data key="Label">		MethodDecl: cuT({FormalParametersInternal}) Body: public void cuT(){  		n.getTextArea().cut();  	}</data>
            <data key="Notepad_1">no</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">no</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">no</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">no</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 01</data>
            <data key="elementType">BodyElement</data>
        </node>
        <node id="239">
            <data key="Label">		MethodDecl: copY({FormalParametersInternal})</data>
            <data key="Notepad_1">no</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">no</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">no</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">no</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 01</data>
            <data key="elementType">FSTTerminalNodeElement</data>
        </node>
        <node id="24">
            <data key="Label">		FieldDecl: option</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">FSTTerminalNodeElement</data>
        </node>
        <node id="240">
            <data key="Label">		MethodDecl: copY({FormalParametersInternal}) Body: public void copY(){  		n.getTextArea().copy();  	}</data>
            <data key="Notepad_1">no</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">no</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">no</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">no</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 01</data>
            <data key="elementType">BodyElement</data>
        </node>
        <node id="241">
            <data key="Label">		MethodDecl: pastE({FormalParametersInternal})</data>
            <data key="Notepad_1">no</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">no</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">no</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">no</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 01</data>
            <data key="elementType">FSTTerminalNodeElement</data>
        </node>
        <node id="242">
            <data key="Label">		MethodDecl: pastE({FormalParametersInternal}) Body: public void pastE(){  		n.getTextArea().paste();  	}</data>
            <data key="Notepad_1">no</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">no</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">no</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">no</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 01</data>
            <data key="elementType">BodyElement</data>
        </node>
        <node id="243">
            <data key="Label">		FieldDecl: cutButton</data>
            <data key="Notepad_1">no</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">no</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">no</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">no</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 01</data>
            <data key="elementType">FSTTerminalNodeElement</data>
        </node>
        <node id="244">
            <data key="Label">		FieldDecl: cutButton Body: private JButton cutButton, copyButton, pasteButton;</data>
            <data key="Notepad_1">no</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">no</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">no</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">no</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 01</data>
            <data key="elementType">BodyElement</data>
        </node>
        <node id="245">
            <data key="Label">		FieldDecl: findword</data>
            <data key="Notepad_1">no</data>
            <data key="Notepad_2">no</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">no</data>
            <data key="Notepad_6">no</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 02</data>
            <data key="elementType">FSTTerminalNodeElement</data>
        </node>
        <node id="246">
            <data key="Label">		FieldDecl: findword Body: private String findword;</data>
            <data key="Notepad_1">no</data>
            <data key="Notepad_2">no</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">no</data>
            <data key="Notepad_6">no</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 02</data>
            <data key="elementType">BodyElement</data>
        </node>
        <node id="247">
            <data key="Label">		MethodDecl: finD({FormalParametersInternal})</data>
            <data key="Notepad_1">no</data>
            <data key="Notepad_2">no</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">no</data>
            <data key="Notepad_6">no</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 02</data>
            <data key="elementType">FSTTerminalNodeElement</data>
        </node>
        <node id="248">
            <data key="Label">		MethodDecl: finD({FormalParametersInternal}) Body: public void finD(){          try{              //this is an input dialog which return a string (findword)              findword = JOptionPane.showInputDialog("Type the word to find");              //if the JTextField in the input dialog is empty (null), then return a message dialog              while(n.getTextArea().getText().indexOf(findword) == -1){                  /**                   *this is a message dialog which is warning the user,                   *because he didn't or forgot to enter the word                   */                  JOptionPane.showMessageDialog(null,"Word not found!","No match",JOptionPane.WARNING_MESSAGE);                  findword = JOptionPane.showInputDialog("Type the word to find");              }              //for selecting the word which the user search for it              n.getTextArea().select(n.getTextArea().getText().indexOf(findword),              n.getTextArea().getText().indexOf(findword) + findword.length());          }          catch(Exception ex){              JOptionPane.showMessageDialog(null,"Search canceled","Abourted",JOptionPane.WARNING_MESSAGE);          }      }</data>
            <data key="Notepad_1">no</data>
            <data key="Notepad_2">no</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">no</data>
            <data key="Notepad_6">no</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 02</data>
            <data key="elementType">BodyElement</data>
        </node>
        <node id="249">
            <data key="Label">		MethodDecl: findNexT({FormalParametersInternal})</data>
            <data key="Notepad_1">no</data>
            <data key="Notepad_2">no</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">no</data>
            <data key="Notepad_6">no</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 02</data>
            <data key="elementType">FSTTerminalNodeElement</data>
        </node>
        <node id="25">
            <data key="Label">		FieldDecl: option Body: private int option;</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">BodyElement</data>
        </node>
        <node id="250">
            <data key="Label">		MethodDecl: findNexT({FormalParametersInternal}) Body: public void findNexT(){          n.getTextArea().select(n.getTextArea().getText().indexOf(findword,(int)n.getTextArea().getText().indexOf(findword)+1),          n.getTextArea().getText().indexOf(findword,(int)n.getTextArea().getText().indexOf(findword)+1));      }</data>
            <data key="Notepad_1">no</data>
            <data key="Notepad_2">no</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">no</data>
            <data key="Notepad_6">no</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 02</data>
            <data key="elementType">BodyElement</data>
        </node>
        <node id="251">
            <data key="Label">		FieldDecl: findButton</data>
            <data key="Notepad_1">no</data>
            <data key="Notepad_2">no</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">no</data>
            <data key="Notepad_6">no</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 02</data>
            <data key="elementType">FSTTerminalNodeElement</data>
        </node>
        <node id="252">
            <data key="Label">		FieldDecl: findButton Body: private JButton findButton;</data>
            <data key="Notepad_1">no</data>
            <data key="Notepad_2">no</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">no</data>
            <data key="Notepad_6">no</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 02</data>
            <data key="elementType">BodyElement</data>
        </node>
        <node id="253">
            <data key="Label">		FieldDecl: finD</data>
            <data key="Notepad_1">no</data>
            <data key="Notepad_2">no</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">no</data>
            <data key="Notepad_6">no</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 02</data>
            <data key="elementType">FSTTerminalNodeElement</data>
        </node>
        <node id="254">
            <data key="Label">		FieldDecl: finD Body: private JMenuItem finD, findNexT;</data>
            <data key="Notepad_1">no</data>
            <data key="Notepad_2">no</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">no</data>
            <data key="Notepad_6">no</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 02</data>
            <data key="elementType">BodyElement</data>
        </node>
        <node id="255">
            <data key="Label">		FieldDecl: undo</data>
            <data key="Notepad_1">no</data>
            <data key="Notepad_2">no</data>
            <data key="Notepad_3">no</data>
            <data key="Notepad_4">no</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 03</data>
            <data key="elementType">FSTTerminalNodeElement</data>
        </node>
        <node id="256">
            <data key="Label">		FieldDecl: undo Body: UndoManager undo = new UndoManager();</data>
            <data key="Notepad_1">no</data>
            <data key="Notepad_2">no</data>
            <data key="Notepad_3">no</data>
            <data key="Notepad_4">no</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 03</data>
            <data key="elementType">BodyElement</data>
        </node>
        <node id="257">
            <data key="Label">		FieldDecl: undoAction</data>
            <data key="Notepad_1">no</data>
            <data key="Notepad_2">no</data>
            <data key="Notepad_3">no</data>
            <data key="Notepad_4">no</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 03</data>
            <data key="elementType">FSTTerminalNodeElement</data>
        </node>
        <node id="258">
            <data key="Label">		FieldDecl: undoAction Body: UndoAction undoAction = new UndoAction(this);</data>
            <data key="Notepad_1">no</data>
            <data key="Notepad_2">no</data>
            <data key="Notepad_3">no</data>
            <data key="Notepad_4">no</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 03</data>
            <data key="elementType">BodyElement</data>
        </node>
        <node id="259">
            <data key="Label">		FieldDecl: redoAction</data>
            <data key="Notepad_1">no</data>
            <data key="Notepad_2">no</data>
            <data key="Notepad_3">no</data>
            <data key="Notepad_4">no</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 03</data>
            <data key="elementType">FSTTerminalNodeElement</data>
        </node>
        <node id="26">
            <data key="Label">		FieldDecl: fileContent</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">FSTTerminalNodeElement</data>
        </node>
        <node id="260">
            <data key="Label">		FieldDecl: redoAction Body: RedoAction redoAction = new RedoAction(this);</data>
            <data key="Notepad_1">no</data>
            <data key="Notepad_2">no</data>
            <data key="Notepad_3">no</data>
            <data key="Notepad_4">no</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 03</data>
            <data key="elementType">BodyElement</data>
        </node>
        <node id="261">
            <data key="Label">		FieldDecl: undoButton</data>
            <data key="Notepad_1">no</data>
            <data key="Notepad_2">no</data>
            <data key="Notepad_3">no</data>
            <data key="Notepad_4">no</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 03</data>
            <data key="elementType">FSTTerminalNodeElement</data>
        </node>
        <node id="262">
            <data key="Label">		FieldDecl: undoButton Body: private JButton undoButton, redoButton;</data>
            <data key="Notepad_1">no</data>
            <data key="Notepad_2">no</data>
            <data key="Notepad_3">no</data>
            <data key="Notepad_4">no</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 03</data>
            <data key="elementType">BodyElement</data>
        </node>
        <node id="263">
            <data key="Label">CompilationUnit: RedoAction</data>
            <data key="Notepad_1">no</data>
            <data key="Notepad_2">no</data>
            <data key="Notepad_3">no</data>
            <data key="Notepad_4">no</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 03</data>
            <data key="elementType">FSTNonTerminalNodeElement</data>
        </node>
        <node id="264">
            <data key="Label">	ClassDeclaration: RedoAction</data>
            <data key="Notepad_1">no</data>
            <data key="Notepad_2">no</data>
            <data key="Notepad_3">no</data>
            <data key="Notepad_4">no</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 03</data>
            <data key="elementType">FSTNonTerminalNodeElement</data>
        </node>
        <node id="265">
            <data key="Label">		Modifiers: </data>
            <data key="Notepad_1">no</data>
            <data key="Notepad_2">no</data>
            <data key="Notepad_3">no</data>
            <data key="Notepad_4">no</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 03</data>
            <data key="elementType">FSTTerminalNodeElement</data>
        </node>
        <node id="266">
            <data key="Label">		Modifiers:  Body: </data>
            <data key="Notepad_1">no</data>
            <data key="Notepad_2">no</data>
            <data key="Notepad_3">no</data>
            <data key="Notepad_4">no</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 03</data>
            <data key="elementType">BodyElement</data>
        </node>
        <node id="267">
            <data key="Label">		ClassOrInterface1: </data>
            <data key="Notepad_1">no</data>
            <data key="Notepad_2">no</data>
            <data key="Notepad_3">no</data>
            <data key="Notepad_4">no</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 03</data>
            <data key="elementType">FSTTerminalNodeElement</data>
        </node>
        <node id="268">
            <data key="Label">		ClassOrInterface1:  Body: class</data>
            <data key="Notepad_1">no</data>
            <data key="Notepad_2">no</data>
            <data key="Notepad_3">no</data>
            <data key="Notepad_4">no</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 03</data>
            <data key="elementType">BodyElement</data>
        </node>
        <node id="269">
            <data key="Label">		Id: RedoAction</data>
            <data key="Notepad_1">no</data>
            <data key="Notepad_2">no</data>
            <data key="Notepad_3">no</data>
            <data key="Notepad_4">no</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 03</data>
            <data key="elementType">FSTTerminalNodeElement</data>
        </node>
        <node id="27">
            <data key="Label">		FieldDecl: fileContent Body: private String fileContent = null;</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">BodyElement</data>
        </node>
        <node id="270">
            <data key="Label">		Id: RedoAction Body: RedoAction</data>
            <data key="Notepad_1">no</data>
            <data key="Notepad_2">no</data>
            <data key="Notepad_3">no</data>
            <data key="Notepad_4">no</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 03</data>
            <data key="elementType">BodyElement</data>
        </node>
        <node id="271">
            <data key="Label">		ExtendsList: </data>
            <data key="Notepad_1">no</data>
            <data key="Notepad_2">no</data>
            <data key="Notepad_3">no</data>
            <data key="Notepad_4">no</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 03</data>
            <data key="elementType">FSTTerminalNodeElement</data>
        </node>
        <node id="272">
            <data key="Label">		ExtendsList:  Body: extends AbstractAction</data>
            <data key="Notepad_1">no</data>
            <data key="Notepad_2">no</data>
            <data key="Notepad_3">no</data>
            <data key="Notepad_4">no</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 03</data>
            <data key="elementType">BodyElement</data>
        </node>
        <node id="273">
            <data key="Label">		FieldDecl: serialVersionUID</data>
            <data key="Notepad_1">no</data>
            <data key="Notepad_2">no</data>
            <data key="Notepad_3">no</data>
            <data key="Notepad_4">no</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 03</data>
            <data key="elementType">FSTTerminalNodeElement</data>
        </node>
        <node id="274">
            <data key="Label">		FieldDecl: serialVersionUID Body: private static final long serialVersionUID = 1;</data>
            <data key="Notepad_1">no</data>
            <data key="Notepad_2">no</data>
            <data key="Notepad_3">no</data>
            <data key="Notepad_4">no</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 03</data>
            <data key="elementType">BodyElement</data>
        </node>
        <node id="275">
            <data key="Label">		FieldDecl: notepad</data>
            <data key="Notepad_1">no</data>
            <data key="Notepad_2">no</data>
            <data key="Notepad_3">no</data>
            <data key="Notepad_4">no</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 03</data>
            <data key="elementType">FSTTerminalNodeElement</data>
        </node>
        <node id="276">
            <data key="Label">		FieldDecl: notepad Body: Notepad notepad;</data>
            <data key="Notepad_1">no</data>
            <data key="Notepad_2">no</data>
            <data key="Notepad_3">no</data>
            <data key="Notepad_4">no</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 03</data>
            <data key="elementType">BodyElement</data>
        </node>
        <node id="277">
            <data key="Label">		ConstructorDecl: RedoAction(Notepad-Notepad)</data>
            <data key="Notepad_1">no</data>
            <data key="Notepad_2">no</data>
            <data key="Notepad_3">no</data>
            <data key="Notepad_4">no</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 03</data>
            <data key="elementType">FSTTerminalNodeElement</data>
        </node>
        <node id="278">
            <data key="Label">		ConstructorDecl: RedoAction(Notepad-Notepad) Body: public RedoAction(Notepad notepad){              super("Redo");              putValue( Action.SMALL_ICON,                  new ImageIcon(this.getClass().getResource("images/redo.gif")));              setEnabled(false);              this.notepad = notepad;          }</data>
            <data key="Notepad_1">no</data>
            <data key="Notepad_2">no</data>
            <data key="Notepad_3">no</data>
            <data key="Notepad_4">no</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 03</data>
            <data key="elementType">BodyElement</data>
        </node>
        <node id="279">
            <data key="Label">		MethodDecl: actionPerformed(ActionEvent-ActionEvent)</data>
            <data key="Notepad_1">no</data>
            <data key="Notepad_2">no</data>
            <data key="Notepad_3">no</data>
            <data key="Notepad_4">no</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 03</data>
            <data key="elementType">FSTTerminalNodeElement</data>
        </node>
        <node id="28">
            <data key="Label">		FieldDecl: fileName</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">FSTTerminalNodeElement</data>
        </node>
        <node id="280">
            <data key="Label">		MethodDecl: actionPerformed(ActionEvent-ActionEvent) Body: public void actionPerformed(ActionEvent e){              try{                  notepad.undo.redo();              }              catch (CannotRedoException ex){                  System.out.println("Unable to redo: " + ex);                  ex.printStackTrace();              }              update();              notepad.undoAction.update();          }</data>
            <data key="Notepad_1">no</data>
            <data key="Notepad_2">no</data>
            <data key="Notepad_3">no</data>
            <data key="Notepad_4">no</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 03</data>
            <data key="elementType">BodyElement</data>
        </node>
        <node id="281">
            <data key="Label">		MethodDecl: update({FormalParametersInternal})</data>
            <data key="Notepad_1">no</data>
            <data key="Notepad_2">no</data>
            <data key="Notepad_3">no</data>
            <data key="Notepad_4">no</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 03</data>
            <data key="elementType">FSTTerminalNodeElement</data>
        </node>
        <node id="282">
            <data key="Label">		MethodDecl: update({FormalParametersInternal}) Body: protected void update(){              if(notepad.undo.canRedo()){                  setEnabled(true);                  putValue("Redo", notepad.undo.getRedoPresentationName());              }              else{                  setEnabled(false);                  putValue(Action.NAME, "Redo");              }          }</data>
            <data key="Notepad_1">no</data>
            <data key="Notepad_2">no</data>
            <data key="Notepad_3">no</data>
            <data key="Notepad_4">no</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 03</data>
            <data key="elementType">BodyElement</data>
        </node>
        <node id="283">
            <data key="Label">CompilationUnit: UndoAction</data>
            <data key="Notepad_1">no</data>
            <data key="Notepad_2">no</data>
            <data key="Notepad_3">no</data>
            <data key="Notepad_4">no</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 03</data>
            <data key="elementType">FSTNonTerminalNodeElement</data>
        </node>
        <node id="284">
            <data key="Label">	ClassDeclaration: UndoAction</data>
            <data key="Notepad_1">no</data>
            <data key="Notepad_2">no</data>
            <data key="Notepad_3">no</data>
            <data key="Notepad_4">no</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 03</data>
            <data key="elementType">FSTNonTerminalNodeElement</data>
        </node>
        <node id="285">
            <data key="Label">		Modifiers: </data>
            <data key="Notepad_1">no</data>
            <data key="Notepad_2">no</data>
            <data key="Notepad_3">no</data>
            <data key="Notepad_4">no</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 03</data>
            <data key="elementType">FSTTerminalNodeElement</data>
        </node>
        <node id="286">
            <data key="Label">		Modifiers:  Body: </data>
            <data key="Notepad_1">no</data>
            <data key="Notepad_2">no</data>
            <data key="Notepad_3">no</data>
            <data key="Notepad_4">no</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 03</data>
            <data key="elementType">BodyElement</data>
        </node>
        <node id="287">
            <data key="Label">		ClassOrInterface1: </data>
            <data key="Notepad_1">no</data>
            <data key="Notepad_2">no</data>
            <data key="Notepad_3">no</data>
            <data key="Notepad_4">no</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 03</data>
            <data key="elementType">FSTTerminalNodeElement</data>
        </node>
        <node id="288">
            <data key="Label">		ClassOrInterface1:  Body: class</data>
            <data key="Notepad_1">no</data>
            <data key="Notepad_2">no</data>
            <data key="Notepad_3">no</data>
            <data key="Notepad_4">no</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 03</data>
            <data key="elementType">BodyElement</data>
        </node>
        <node id="289">
            <data key="Label">		Id: UndoAction</data>
            <data key="Notepad_1">no</data>
            <data key="Notepad_2">no</data>
            <data key="Notepad_3">no</data>
            <data key="Notepad_4">no</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 03</data>
            <data key="elementType">FSTTerminalNodeElement</data>
        </node>
        <node id="29">
            <data key="Label">		FieldDecl: fileName Body: private String fileName = null;</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">BodyElement</data>
        </node>
        <node id="290">
            <data key="Label">		Id: UndoAction Body: UndoAction</data>
            <data key="Notepad_1">no</data>
            <data key="Notepad_2">no</data>
            <data key="Notepad_3">no</data>
            <data key="Notepad_4">no</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 03</data>
            <data key="elementType">BodyElement</data>
        </node>
        <node id="291">
            <data key="Label">		ExtendsList: </data>
            <data key="Notepad_1">no</data>
            <data key="Notepad_2">no</data>
            <data key="Notepad_3">no</data>
            <data key="Notepad_4">no</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 03</data>
            <data key="elementType">FSTTerminalNodeElement</data>
        </node>
        <node id="292">
            <data key="Label">		ExtendsList:  Body: extends AbstractAction</data>
            <data key="Notepad_1">no</data>
            <data key="Notepad_2">no</data>
            <data key="Notepad_3">no</data>
            <data key="Notepad_4">no</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 03</data>
            <data key="elementType">BodyElement</data>
        </node>
        <node id="293">
            <data key="Label">		FieldDecl: serialVersionUID</data>
            <data key="Notepad_1">no</data>
            <data key="Notepad_2">no</data>
            <data key="Notepad_3">no</data>
            <data key="Notepad_4">no</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 03</data>
            <data key="elementType">FSTTerminalNodeElement</data>
        </node>
        <node id="294">
            <data key="Label">		FieldDecl: serialVersionUID Body: private static final long serialVersionUID = 1;</data>
            <data key="Notepad_1">no</data>
            <data key="Notepad_2">no</data>
            <data key="Notepad_3">no</data>
            <data key="Notepad_4">no</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 03</data>
            <data key="elementType">BodyElement</data>
        </node>
        <node id="295">
            <data key="Label">		FieldDecl: notepad</data>
            <data key="Notepad_1">no</data>
            <data key="Notepad_2">no</data>
            <data key="Notepad_3">no</data>
            <data key="Notepad_4">no</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 03</data>
            <data key="elementType">FSTTerminalNodeElement</data>
        </node>
        <node id="296">
            <data key="Label">		FieldDecl: notepad Body: Notepad notepad;</data>
            <data key="Notepad_1">no</data>
            <data key="Notepad_2">no</data>
            <data key="Notepad_3">no</data>
            <data key="Notepad_4">no</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 03</data>
            <data key="elementType">BodyElement</data>
        </node>
        <node id="297">
            <data key="Label">		ConstructorDecl: UndoAction(Notepad-Notepad)</data>
            <data key="Notepad_1">no</data>
            <data key="Notepad_2">no</data>
            <data key="Notepad_3">no</data>
            <data key="Notepad_4">no</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 03</data>
            <data key="elementType">FSTTerminalNodeElement</data>
        </node>
        <node id="298">
            <data key="Label">		ConstructorDecl: UndoAction(Notepad-Notepad) Body: public UndoAction(Notepad notepad){          super( "Undo" );          putValue( Action.SMALL_ICON,                                  new ImageIcon( this.getClass().getResource( "images/undo.gif" ) ) );          setEnabled( false );          this.notepad = notepad;      }</data>
            <data key="Notepad_1">no</data>
            <data key="Notepad_2">no</data>
            <data key="Notepad_3">no</data>
            <data key="Notepad_4">no</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 03</data>
            <data key="elementType">BodyElement</data>
        </node>
        <node id="299">
            <data key="Label">		MethodDecl: actionPerformed(ActionEvent-ActionEvent)</data>
            <data key="Notepad_1">no</data>
            <data key="Notepad_2">no</data>
            <data key="Notepad_3">no</data>
            <data key="Notepad_4">no</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 03</data>
            <data key="elementType">FSTTerminalNodeElement</data>
        </node>
        <node id="3">
            <data key="Label">		Modifiers:  Body: public</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">BodyElement</data>
        </node>
        <node id="30">
            <data key="Label">		FieldDecl: jfc</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">FSTTerminalNodeElement</data>
        </node>
        <node id="300">
            <data key="Label">		MethodDecl: actionPerformed(ActionEvent-ActionEvent) Body: public void actionPerformed( ActionEvent e ) {          try {              notepad.undo.undo();          }          catch ( CannotUndoException ex ) {              System.out.println( "Unable to undo: " + ex );              ex.printStackTrace();          }          update();          notepad.redoAction.update();      }</data>
            <data key="Notepad_1">no</data>
            <data key="Notepad_2">no</data>
            <data key="Notepad_3">no</data>
            <data key="Notepad_4">no</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 03</data>
            <data key="elementType">BodyElement</data>
        </node>
        <node id="301">
            <data key="Label">		MethodDecl: update({FormalParametersInternal})</data>
            <data key="Notepad_1">no</data>
            <data key="Notepad_2">no</data>
            <data key="Notepad_3">no</data>
            <data key="Notepad_4">no</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 03</data>
            <data key="elementType">FSTTerminalNodeElement</data>
        </node>
        <node id="302">
            <data key="Label">		MethodDecl: update({FormalParametersInternal}) Body: protected void update() {          if( notepad.undo.canUndo() ) {              setEnabled( true );              putValue( "Undo", notepad.undo.getUndoPresentationName() );          }          else {              setEnabled( false );              putValue( Action.NAME, "Undo" );          }      }</data>
            <data key="Notepad_1">no</data>
            <data key="Notepad_2">no</data>
            <data key="Notepad_3">no</data>
            <data key="Notepad_4">no</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 03</data>
            <data key="elementType">BodyElement</data>
        </node>
        <node id="303">
            <data key="Label">		ConstructorDecl: Notepad({FormalParametersInternal}) Body: public Notepad  (){          //set the title for Notepad and set the size for it.          setTitle("Untitled - JAVAï¿½ Notepad");          setSize(800,600);            //get the graphical user interface components display area          Container cp = getContentPane();          /**           *adding the text area,           *adding the tool bar &amp;           *adding the scroll pane to the container           */          cp.add(textArea = new JTextArea());          cp.add("North", toolBar = new JToolBar("Tool Bar"));          cp.add(new JScrollPane(textArea));            //for setting the menu bar          setJMenuBar(Menubar= new JMenuBar());          //adding file, edit, view, format, help to the menu bar          Menubar.add(filE   = new JMenu("File"));          Menubar.add(ediT   = new JMenu("Edit"));          Menubar.add(vieW   = new JMenu("View"));          Menubar.add(formaT = new JMenu("Format"));          Menubar.add(helP   = new JMenu("Help"));            /**           *adding neW, opeN, savE, saveAS, prinT &amp; exiT to the filE Menu,           *adding a small image icon to the menu item &amp;           *adding separator between the menu item           */          filE.add(neW    = new JMenuItem("New", new ImageIcon(this.getClass().getResource("images/new.gif"))));          filE.add(opeN   = new JMenuItem("Open", new ImageIcon(this.getClass().getResource("images/open.gif"))));          filE.add(savE   = new JMenuItem("Save", new ImageIcon(this.getClass().getResource("images/save.gif"))));          filE.add(saveAS = new JMenuItem("Save As", new ImageIcon(this.getClass().getResource("images/saveAs.gif"))));          filE.add(prinT  = new JMenuItem("Print", new ImageIcon(this.getClass().getResource("images/print.gif"))));          filE.add(exiT   = new JMenuItem("Exit")); //, new ImageIcon(this.getClass().getResource("images/exit.gif"))));  -- exit.gif missing          filE.insertSeparator(4);          filE.insertSeparator(6);            /**           *adding undO, redO, cuT, copY, pastE, finD, findNexT &amp; selectALL to the ediT Menu,           *adding a small image icon to the menu item &amp;           *adding separator between the menu item           */          ediT.add(selectALL= new JMenuItem("Select All"));          //ediT.insertSeparator(2);          //ediT.insertSeparator(6);            /**           *adding lineWraP &amp; fonT to the formaT Menu,           *adding abouT to the helP Menu &amp;           *adding a small image icon to the menu item           */          formaT.add(lineWraP = new JCheckBoxMenuItem("Line Wrap"));          formaT.add(fonT = new JMenuItem("Font", new ImageIcon(this.getClass().getResource("images/font.gif"))));          helP.add(abouT = new JMenuItem("About Notepad", new ImageIcon(this.getClass().getResource("images/about.gif"))));            /**           *allowing the file   menu to be selected by pressing ALT + F           *allowing the edit   menu to be selected by pressing ALT + E           *allowing the view   menu to be selected by pressing ALT + V           *allowing the format menu to be selected by pressing ALT + O           *allowing the help   menu to be selected by pressing ALT + H           */          filE.setMnemonic('f');          ediT.setMnemonic('e');          vieW.setMnemonic('v');          formaT.setMnemonic('o');          helP.setMnemonic('h');            /**           *allowing the neW       menu item to be selected by pressing ALT + N           *allowing the opeN      menu item to be selected by pressing ALT + O           *allowing the savE      menu item to be selected by pressing ALT + S           *allowing the prinT     menu item to be selected by pressing ALT + P           *allowing the exiT      menu item to be selected by pressing ALT + F4           *allowing the cuT       menu item to be selected by pressing ALT + X           *allowing the copY      menu item to be selected by pressing ALT + C           *allowing the pastE     menu item to be selected by pressing ALT + V           *allowing the selectAll menu item to be selected by pressing ALT + A           */          neW.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_N, ActionEvent.CTRL_MASK));          opeN.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_O, ActionEvent.CTRL_MASK));          savE.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, ActionEvent.CTRL_MASK));          prinT.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_P, ActionEvent.CTRL_MASK));          exiT.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_F4, ActionEvent.CTRL_MASK));          selectALL.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_A, ActionEvent.CTRL_MASK));            /**           *adding newButton, openButton, saveButton, saveAsButton, printButton, undoButton,           *redoButton, cutButton, copyButton, pasteButton, fontButton &amp; aboutButton to the tool bar,           *adding a small image icon to the menu item &amp;           *adding separator between the button           */          toolBar.add(newButton   = new JButton(new ImageIcon(this.getClass().getResource("images/new.gif"))));          toolBar.add(openButton  = new JButton(new ImageIcon(this.getClass().getResource("images/open.gif"))));          toolBar.add(saveButton  = new JButton(new ImageIcon(this.getClass().getResource("images/save.gif"))));          toolBar.add(saveAsButton= new JButton(new ImageIcon(this.getClass().getResource("images/saveAs.gif"))));          toolBar.add(printButton = new JButton(new ImageIcon(this.getClass().getResource("images/print.gif"))));          toolBar.addSeparator();          toolBar.add(fontButton  = new JButton(new ImageIcon(this.getClass().getResource("images/font.gif"))));          toolBar.add(aboutButton = new JButton(new ImageIcon(this.getClass().getResource("images/about.gif"))));            //adding a tool tip text to the button for descriping the image icon.          newButton.setToolTipText("New");          openButton.setToolTipText("Open");          saveButton.setToolTipText("Save");          saveAsButton.setToolTipText("Save As");          printButton.setToolTipText("Print");          fontButton.setToolTipText("Font");          aboutButton.setToolTipText("About Notepad");            /**           *setting the default close operation to false &amp;           *using own action (exiT action @Actions.java)           */          setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);          addWindowListener(new WindowAdapter(){              public void windowClosing(WindowEvent e){                  actions.exiT();              }          });          /**           *adding action listener for menu item: neW, opeN, savE, saveAS, prinT, exiT,           *redO, undO, copY, cuT, pastE, finD, findNexT, selectALL, lineWraP, fonT &amp; abouT           *the actions was written @Actions.java           */          neW.addActionListener(new ActionListener(){              public void actionPerformed(ActionEvent ae){                  actions.neW();              }          });          opeN.addActionListener(new ActionListener(){              public void actionPerformed(ActionEvent ae){                  actions.opeN();              }          });          savE.addActionListener(new ActionListener(){              public void actionPerformed(ActionEvent ae){                  actions.savE();              }          });          saveAS.addActionListener(new ActionListener(){              public void actionPerformed(ActionEvent ae){                  actions.saveAs();              }          });          prinT.addActionListener(new ActionListener(){              public void actionPerformed(ActionEvent ae){                  actions.prinT();              }          });          exiT.addActionListener(new ActionListener(){              public void actionPerformed(ActionEvent ae){                  actions.exiT();              }          });          selectALL.addActionListener(new ActionListener(){              public void actionPerformed(ActionEvent ae){                  actions.selectALL();              }          });          lineWraP.addActionListener(new ActionListener(){              public void actionPerformed(ActionEvent ae){                  actions.lineWraP();              }          });          fonT.addActionListener(new ActionListener(){              public void actionPerformed(ActionEvent ae){                  actions.fonT();              }          });          abouT.addActionListener(new ActionListener(){              public void actionPerformed(ActionEvent ae){                  actions.abouT();              }          });            /**           *adding action listener for the button in the tool bar: newButton, openButton,           *saveButton, saveAsButton, printButton, redoButton, undoButton, copyButton,           *cutButton, pasteButton, findButton, selectALL, lineWraP, fontButton &amp; aboutButton           *the actions was written @Actions.java           */          newButton.addActionListener(new ActionListener(){              public void actionPerformed(ActionEvent ae){                  actions.neW();              }          });          openButton.addActionListener(new ActionListener(){              public void actionPerformed(ActionEvent ae){                  actions.opeN();              }          });          saveButton.addActionListener(new ActionListener(){              public void actionPerformed(ActionEvent ae){                  actions.savE();              }          });          saveAsButton.addActionListener(new ActionListener(){              public void actionPerformed(ActionEvent ae){                  actions.saveAs();              }          });          printButton.addActionListener(new ActionListener(){              public void actionPerformed(ActionEvent ae){                  actions.prinT();              }          });          fontButton.addActionListener(new ActionListener(){              public void actionPerformed(ActionEvent ae){                  actions.fonT();              }          });          aboutButton.addActionListener(new ActionListener(){              public void actionPerformed(ActionEvent ae){                  actions.abouT();              }          });            /**           *Setting the Line Wrap &amp; Wrap Style Word features are true           */          textArea.setLineWrap(true);          textArea.setWrapStyleWord(true);          /**           *for making the program at the center,           *@see Center.java           */          center.nCenter();          show();        		ediT.add(cuT  = new JMenuItem("Cut",  new ImageIcon(this.getClass().getResource("images/cut.gif"))));  		ediT.add(copY = new JMenuItem("Copy", new ImageIcon(this.getClass().getResource("images/copy.gif"))));  		ediT.add(pastE= new JMenuItem("Paste",new ImageIcon(this.getClass().getResource("images/paste.gif"))));    		cuT.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_X, ActionEvent.CTRL_MASK));  		copY.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_C, ActionEvent.CTRL_MASK));  		pastE.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_V, ActionEvent.CTRL_MASK));    		toolBar.add(cutButton   = new JButton(new ImageIcon(this.getClass().getResource("images/cut.gif"))));  		toolBar.add(copyButton  = new JButton(new ImageIcon(this.getClass().getResource("images/copy.gif"))));  		toolBar.add(pasteButton = new JButton(new ImageIcon(this.getClass().getResource("images/paste.gif"))));    		cutButton.setToolTipText("Cut");  		copyButton.setToolTipText("Copy");  		pasteButton.setToolTipText("Paste");    		cuT.addActionListener(new ActionListener(){  			public void actionPerformed(ActionEvent ae){  				actions.cuT();  			}  		});  		copY.addActionListener(new ActionListener(){  			public void actionPerformed(ActionEvent ae){  				actions.copY();  			}  		});  		pastE.addActionListener(new ActionListener(){  			public void actionPerformed(ActionEvent ae){  				actions.pastE();  			}  		});    		cutButton.addActionListener(new ActionListener(){  			public void actionPerformed(ActionEvent ae){  				actions.cuT();  			}  		});  		copyButton.addActionListener(new ActionListener(){  			public void actionPerformed(ActionEvent ae){  				actions.copY();  			}  		});  		pasteButton.addActionListener(new ActionListener(){  			public void actionPerformed(ActionEvent ae){  				actions.pastE();  			}  		});    	          ediT.add(finD = new JMenuItem("Find", new ImageIcon(this.getClass().getResource("images/find.gif"))));          ediT.add(findNexT = new JMenuItem("Find Next"));          //ediT.insertSeparator(8);            /**           *allowing the finD      menu item to be selected by pressing ALT + F           *allowing the findNexT  menu item to be selected by pressing ALT + F3           */          finD.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_F, ActionEvent.CTRL_MASK));          findNexT.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_F3, ActionEvent.CTRL_MASK));          toolBar.add(findButton  = new JButton(new ImageIcon(this.getClass().getResource("images/find.gif"))));          findButton.setToolTipText("Find");            finD.addActionListener(new ActionListener(){              public void actionPerformed(ActionEvent ae){                  actions.finD();              }          });          findNexT.addActionListener(new ActionListener(){              public void actionPerformed(ActionEvent ae){                  actions.findNexT();              }          });            findButton.addActionListener(new ActionListener(){              public void actionPerformed(ActionEvent ae){                  actions.finD();              }          });      }</data>
            <data key="Notepad_1">no</data>
            <data key="Notepad_2">no</data>
            <data key="Notepad_3">no</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">no</data>
            <data key="Notepad_6">no</data>
            <data key="Notepad_7">no</data>
            <data key="Notepad_8">no</data>
            <data key="block">Block 04</data>
            <data key="elementType">BodyElement</data>
        </node>
        <node id="304">
            <data key="Label">		ConstructorDecl: Notepad({FormalParametersInternal}) Body: public Notepad  (){          //set the title for Notepad and set the size for it.          setTitle("Untitled - JAVAï¿½ Notepad");          setSize(800,600);            //get the graphical user interface components display area          Container cp = getContentPane();          /**           *adding the text area,           *adding the tool bar &amp;           *adding the scroll pane to the container           */          cp.add(textArea = new JTextArea());          cp.add("North", toolBar = new JToolBar("Tool Bar"));          cp.add(new JScrollPane(textArea));            //for setting the menu bar          setJMenuBar(Menubar= new JMenuBar());          //adding file, edit, view, format, help to the menu bar          Menubar.add(filE   = new JMenu("File"));          Menubar.add(ediT   = new JMenu("Edit"));          Menubar.add(vieW   = new JMenu("View"));          Menubar.add(formaT = new JMenu("Format"));          Menubar.add(helP   = new JMenu("Help"));            /**           *adding neW, opeN, savE, saveAS, prinT &amp; exiT to the filE Menu,           *adding a small image icon to the menu item &amp;           *adding separator between the menu item           */          filE.add(neW    = new JMenuItem("New", new ImageIcon(this.getClass().getResource("images/new.gif"))));          filE.add(opeN   = new JMenuItem("Open", new ImageIcon(this.getClass().getResource("images/open.gif"))));          filE.add(savE   = new JMenuItem("Save", new ImageIcon(this.getClass().getResource("images/save.gif"))));          filE.add(saveAS = new JMenuItem("Save As", new ImageIcon(this.getClass().getResource("images/saveAs.gif"))));          filE.add(prinT  = new JMenuItem("Print", new ImageIcon(this.getClass().getResource("images/print.gif"))));          filE.add(exiT   = new JMenuItem("Exit")); //, new ImageIcon(this.getClass().getResource("images/exit.gif"))));  -- exit.gif missing          filE.insertSeparator(4);          filE.insertSeparator(6);            /**           *adding undO, redO, cuT, copY, pastE, finD, findNexT &amp; selectALL to the ediT Menu,           *adding a small image icon to the menu item &amp;           *adding separator between the menu item           */          ediT.add(selectALL= new JMenuItem("Select All"));          //ediT.insertSeparator(2);          //ediT.insertSeparator(6);            /**           *adding lineWraP &amp; fonT to the formaT Menu,           *adding abouT to the helP Menu &amp;           *adding a small image icon to the menu item           */          formaT.add(lineWraP = new JCheckBoxMenuItem("Line Wrap"));          formaT.add(fonT = new JMenuItem("Font", new ImageIcon(this.getClass().getResource("images/font.gif"))));          helP.add(abouT = new JMenuItem("About Notepad", new ImageIcon(this.getClass().getResource("images/about.gif"))));            /**           *allowing the file   menu to be selected by pressing ALT + F           *allowing the edit   menu to be selected by pressing ALT + E           *allowing the view   menu to be selected by pressing ALT + V           *allowing the format menu to be selected by pressing ALT + O           *allowing the help   menu to be selected by pressing ALT + H           */          filE.setMnemonic('f');          ediT.setMnemonic('e');          vieW.setMnemonic('v');          formaT.setMnemonic('o');          helP.setMnemonic('h');            /**           *allowing the neW       menu item to be selected by pressing ALT + N           *allowing the opeN      menu item to be selected by pressing ALT + O           *allowing the savE      menu item to be selected by pressing ALT + S           *allowing the prinT     menu item to be selected by pressing ALT + P           *allowing the exiT      menu item to be selected by pressing ALT + F4           *allowing the cuT       menu item to be selected by pressing ALT + X           *allowing the copY      menu item to be selected by pressing ALT + C           *allowing the pastE     menu item to be selected by pressing ALT + V           *allowing the selectAll menu item to be selected by pressing ALT + A           */          neW.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_N, ActionEvent.CTRL_MASK));          opeN.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_O, ActionEvent.CTRL_MASK));          savE.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, ActionEvent.CTRL_MASK));          prinT.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_P, ActionEvent.CTRL_MASK));          exiT.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_F4, ActionEvent.CTRL_MASK));          selectALL.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_A, ActionEvent.CTRL_MASK));            /**           *adding newButton, openButton, saveButton, saveAsButton, printButton, undoButton,           *redoButton, cutButton, copyButton, pasteButton, fontButton &amp; aboutButton to the tool bar,           *adding a small image icon to the menu item &amp;           *adding separator between the button           */          toolBar.add(newButton   = new JButton(new ImageIcon(this.getClass().getResource("images/new.gif"))));          toolBar.add(openButton  = new JButton(new ImageIcon(this.getClass().getResource("images/open.gif"))));          toolBar.add(saveButton  = new JButton(new ImageIcon(this.getClass().getResource("images/save.gif"))));          toolBar.add(saveAsButton= new JButton(new ImageIcon(this.getClass().getResource("images/saveAs.gif"))));          toolBar.add(printButton = new JButton(new ImageIcon(this.getClass().getResource("images/print.gif"))));          toolBar.addSeparator();          toolBar.add(fontButton  = new JButton(new ImageIcon(this.getClass().getResource("images/font.gif"))));          toolBar.add(aboutButton = new JButton(new ImageIcon(this.getClass().getResource("images/about.gif"))));            //adding a tool tip text to the button for descriping the image icon.          newButton.setToolTipText("New");          openButton.setToolTipText("Open");          saveButton.setToolTipText("Save");          saveAsButton.setToolTipText("Save As");          printButton.setToolTipText("Print");          fontButton.setToolTipText("Font");          aboutButton.setToolTipText("About Notepad");            /**           *setting the default close operation to false &amp;           *using own action (exiT action @Actions.java)           */          setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);          addWindowListener(new WindowAdapter(){              public void windowClosing(WindowEvent e){                  actions.exiT();              }          });          /**           *adding action listener for menu item: neW, opeN, savE, saveAS, prinT, exiT,           *redO, undO, copY, cuT, pastE, finD, findNexT, selectALL, lineWraP, fonT &amp; abouT           *the actions was written @Actions.java           */          neW.addActionListener(new ActionListener(){              public void actionPerformed(ActionEvent ae){                  actions.neW();              }          });          opeN.addActionListener(new ActionListener(){              public void actionPerformed(ActionEvent ae){                  actions.opeN();              }          });          savE.addActionListener(new ActionListener(){              public void actionPerformed(ActionEvent ae){                  actions.savE();              }          });          saveAS.addActionListener(new ActionListener(){              public void actionPerformed(ActionEvent ae){                  actions.saveAs();              }          });          prinT.addActionListener(new ActionListener(){              public void actionPerformed(ActionEvent ae){                  actions.prinT();              }          });          exiT.addActionListener(new ActionListener(){              public void actionPerformed(ActionEvent ae){                  actions.exiT();              }          });          selectALL.addActionListener(new ActionListener(){              public void actionPerformed(ActionEvent ae){                  actions.selectALL();              }          });          lineWraP.addActionListener(new ActionListener(){              public void actionPerformed(ActionEvent ae){                  actions.lineWraP();              }          });          fonT.addActionListener(new ActionListener(){              public void actionPerformed(ActionEvent ae){                  actions.fonT();              }          });          abouT.addActionListener(new ActionListener(){              public void actionPerformed(ActionEvent ae){                  actions.abouT();              }          });            /**           *adding action listener for the button in the tool bar: newButton, openButton,           *saveButton, saveAsButton, printButton, redoButton, undoButton, copyButton,           *cutButton, pasteButton, findButton, selectALL, lineWraP, fontButton &amp; aboutButton           *the actions was written @Actions.java           */          newButton.addActionListener(new ActionListener(){              public void actionPerformed(ActionEvent ae){                  actions.neW();              }          });          openButton.addActionListener(new ActionListener(){              public void actionPerformed(ActionEvent ae){                  actions.opeN();              }          });          saveButton.addActionListener(new ActionListener(){              public void actionPerformed(ActionEvent ae){                  actions.savE();              }          });          saveAsButton.addActionListener(new ActionListener(){              public void actionPerformed(ActionEvent ae){                  actions.saveAs();              }          });          printButton.addActionListener(new ActionListener(){              public void actionPerformed(ActionEvent ae){                  actions.prinT();              }          });          fontButton.addActionListener(new ActionListener(){              public void actionPerformed(ActionEvent ae){                  actions.fonT();              }          });          aboutButton.addActionListener(new ActionListener(){              public void actionPerformed(ActionEvent ae){                  actions.abouT();              }          });            /**           *Setting the Line Wrap &amp; Wrap Style Word features are true           */          textArea.setLineWrap(true);          textArea.setWrapStyleWord(true);          /**           *for making the program at the center,           *@see Center.java           */          center.nCenter();          show();        	    ediT.add(undoAction);  	    ediT.add(redoAction);    	    toolBar.addSeparator();  	    toolBar.add(undoAction);  	    toolBar.add(redoAction);  	    toolBar.addSeparator();    	    textArea.getDocument().addUndoableEditListener(new UndoableEditListener(){  			    public void undoableEditHappened(UndoableEditEvent e){  			    //Remember the edit and update the menus  			    undo.addEdit(e.getEdit());  			    undoAction.update();  			    redoAction.update();  			    }  			    });      }</data>
            <data key="Notepad_1">no</data>
            <data key="Notepad_2">no</data>
            <data key="Notepad_3">no</data>
            <data key="Notepad_4">no</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">no</data>
            <data key="Notepad_7">no</data>
            <data key="Notepad_8">no</data>
            <data key="block">Block 05</data>
            <data key="elementType">BodyElement</data>
        </node>
        <node id="305">
            <data key="Label">		ConstructorDecl: Notepad({FormalParametersInternal}) Body: public Notepad  (){          //set the title for Notepad and set the size for it.          setTitle("Untitled - JAVAï¿½ Notepad");          setSize(800,600);            //get the graphical user interface components display area          Container cp = getContentPane();          /**           *adding the text area,           *adding the tool bar &amp;           *adding the scroll pane to the container           */          cp.add(textArea = new JTextArea());          cp.add("North", toolBar = new JToolBar("Tool Bar"));          cp.add(new JScrollPane(textArea));            //for setting the menu bar          setJMenuBar(Menubar= new JMenuBar());          //adding file, edit, view, format, help to the menu bar          Menubar.add(filE   = new JMenu("File"));          Menubar.add(ediT   = new JMenu("Edit"));          Menubar.add(vieW   = new JMenu("View"));          Menubar.add(formaT = new JMenu("Format"));          Menubar.add(helP   = new JMenu("Help"));            /**           *adding neW, opeN, savE, saveAS, prinT &amp; exiT to the filE Menu,           *adding a small image icon to the menu item &amp;           *adding separator between the menu item           */          filE.add(neW    = new JMenuItem("New", new ImageIcon(this.getClass().getResource("images/new.gif"))));          filE.add(opeN   = new JMenuItem("Open", new ImageIcon(this.getClass().getResource("images/open.gif"))));          filE.add(savE   = new JMenuItem("Save", new ImageIcon(this.getClass().getResource("images/save.gif"))));          filE.add(saveAS = new JMenuItem("Save As", new ImageIcon(this.getClass().getResource("images/saveAs.gif"))));          filE.add(prinT  = new JMenuItem("Print", new ImageIcon(this.getClass().getResource("images/print.gif"))));          filE.add(exiT   = new JMenuItem("Exit")); //, new ImageIcon(this.getClass().getResource("images/exit.gif"))));  -- exit.gif missing          filE.insertSeparator(4);          filE.insertSeparator(6);            /**           *adding undO, redO, cuT, copY, pastE, finD, findNexT &amp; selectALL to the ediT Menu,           *adding a small image icon to the menu item &amp;           *adding separator between the menu item           */          ediT.add(selectALL= new JMenuItem("Select All"));          //ediT.insertSeparator(2);          //ediT.insertSeparator(6);            /**           *adding lineWraP &amp; fonT to the formaT Menu,           *adding abouT to the helP Menu &amp;           *adding a small image icon to the menu item           */          formaT.add(lineWraP = new JCheckBoxMenuItem("Line Wrap"));          formaT.add(fonT = new JMenuItem("Font", new ImageIcon(this.getClass().getResource("images/font.gif"))));          helP.add(abouT = new JMenuItem("About Notepad", new ImageIcon(this.getClass().getResource("images/about.gif"))));            /**           *allowing the file   menu to be selected by pressing ALT + F           *allowing the edit   menu to be selected by pressing ALT + E           *allowing the view   menu to be selected by pressing ALT + V           *allowing the format menu to be selected by pressing ALT + O           *allowing the help   menu to be selected by pressing ALT + H           */          filE.setMnemonic('f');          ediT.setMnemonic('e');          vieW.setMnemonic('v');          formaT.setMnemonic('o');          helP.setMnemonic('h');            /**           *allowing the neW       menu item to be selected by pressing ALT + N           *allowing the opeN      menu item to be selected by pressing ALT + O           *allowing the savE      menu item to be selected by pressing ALT + S           *allowing the prinT     menu item to be selected by pressing ALT + P           *allowing the exiT      menu item to be selected by pressing ALT + F4           *allowing the cuT       menu item to be selected by pressing ALT + X           *allowing the copY      menu item to be selected by pressing ALT + C           *allowing the pastE     menu item to be selected by pressing ALT + V           *allowing the selectAll menu item to be selected by pressing ALT + A           */          neW.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_N, ActionEvent.CTRL_MASK));          opeN.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_O, ActionEvent.CTRL_MASK));          savE.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, ActionEvent.CTRL_MASK));          prinT.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_P, ActionEvent.CTRL_MASK));          exiT.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_F4, ActionEvent.CTRL_MASK));          selectALL.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_A, ActionEvent.CTRL_MASK));            /**           *adding newButton, openButton, saveButton, saveAsButton, printButton, undoButton,           *redoButton, cutButton, copyButton, pasteButton, fontButton &amp; aboutButton to the tool bar,           *adding a small image icon to the menu item &amp;           *adding separator between the button           */          toolBar.add(newButton   = new JButton(new ImageIcon(this.getClass().getResource("images/new.gif"))));          toolBar.add(openButton  = new JButton(new ImageIcon(this.getClass().getResource("images/open.gif"))));          toolBar.add(saveButton  = new JButton(new ImageIcon(this.getClass().getResource("images/save.gif"))));          toolBar.add(saveAsButton= new JButton(new ImageIcon(this.getClass().getResource("images/saveAs.gif"))));          toolBar.add(printButton = new JButton(new ImageIcon(this.getClass().getResource("images/print.gif"))));          toolBar.addSeparator();          toolBar.add(fontButton  = new JButton(new ImageIcon(this.getClass().getResource("images/font.gif"))));          toolBar.add(aboutButton = new JButton(new ImageIcon(this.getClass().getResource("images/about.gif"))));            //adding a tool tip text to the button for descriping the image icon.          newButton.setToolTipText("New");          openButton.setToolTipText("Open");          saveButton.setToolTipText("Save");          saveAsButton.setToolTipText("Save As");          printButton.setToolTipText("Print");          fontButton.setToolTipText("Font");          aboutButton.setToolTipText("About Notepad");            /**           *setting the default close operation to false &amp;           *using own action (exiT action @Actions.java)           */          setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);          addWindowListener(new WindowAdapter(){              public void windowClosing(WindowEvent e){                  actions.exiT();              }          });          /**           *adding action listener for menu item: neW, opeN, savE, saveAS, prinT, exiT,           *redO, undO, copY, cuT, pastE, finD, findNexT, selectALL, lineWraP, fonT &amp; abouT           *the actions was written @Actions.java           */          neW.addActionListener(new ActionListener(){              public void actionPerformed(ActionEvent ae){                  actions.neW();              }          });          opeN.addActionListener(new ActionListener(){              public void actionPerformed(ActionEvent ae){                  actions.opeN();              }          });          savE.addActionListener(new ActionListener(){              public void actionPerformed(ActionEvent ae){                  actions.savE();              }          });          saveAS.addActionListener(new ActionListener(){              public void actionPerformed(ActionEvent ae){                  actions.saveAs();              }          });          prinT.addActionListener(new ActionListener(){              public void actionPerformed(ActionEvent ae){                  actions.prinT();              }          });          exiT.addActionListener(new ActionListener(){              public void actionPerformed(ActionEvent ae){                  actions.exiT();              }          });          selectALL.addActionListener(new ActionListener(){              public void actionPerformed(ActionEvent ae){                  actions.selectALL();              }          });          lineWraP.addActionListener(new ActionListener(){              public void actionPerformed(ActionEvent ae){                  actions.lineWraP();              }          });          fonT.addActionListener(new ActionListener(){              public void actionPerformed(ActionEvent ae){                  actions.fonT();              }          });          abouT.addActionListener(new ActionListener(){              public void actionPerformed(ActionEvent ae){                  actions.abouT();              }          });            /**           *adding action listener for the button in the tool bar: newButton, openButton,           *saveButton, saveAsButton, printButton, redoButton, undoButton, copyButton,           *cutButton, pasteButton, findButton, selectALL, lineWraP, fontButton &amp; aboutButton           *the actions was written @Actions.java           */          newButton.addActionListener(new ActionListener(){              public void actionPerformed(ActionEvent ae){                  actions.neW();              }          });          openButton.addActionListener(new ActionListener(){              public void actionPerformed(ActionEvent ae){                  actions.opeN();              }          });          saveButton.addActionListener(new ActionListener(){              public void actionPerformed(ActionEvent ae){                  actions.savE();              }          });          saveAsButton.addActionListener(new ActionListener(){              public void actionPerformed(ActionEvent ae){                  actions.saveAs();              }          });          printButton.addActionListener(new ActionListener(){              public void actionPerformed(ActionEvent ae){                  actions.prinT();              }          });          fontButton.addActionListener(new ActionListener(){              public void actionPerformed(ActionEvent ae){                  actions.fonT();              }          });          aboutButton.addActionListener(new ActionListener(){              public void actionPerformed(ActionEvent ae){                  actions.abouT();              }          });            /**           *Setting the Line Wrap &amp; Wrap Style Word features are true           */          textArea.setLineWrap(true);          textArea.setWrapStyleWord(true);          /**           *for making the program at the center,           *@see Center.java           */          center.nCenter();          show();        		ediT.add(cuT  = new JMenuItem("Cut",  new ImageIcon(this.getClass().getResource("images/cut.gif"))));  		ediT.add(copY = new JMenuItem("Copy", new ImageIcon(this.getClass().getResource("images/copy.gif"))));  		ediT.add(pastE= new JMenuItem("Paste",new ImageIcon(this.getClass().getResource("images/paste.gif"))));    		cuT.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_X, ActionEvent.CTRL_MASK));  		copY.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_C, ActionEvent.CTRL_MASK));  		pastE.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_V, ActionEvent.CTRL_MASK));    		toolBar.add(cutButton   = new JButton(new ImageIcon(this.getClass().getResource("images/cut.gif"))));  		toolBar.add(copyButton  = new JButton(new ImageIcon(this.getClass().getResource("images/copy.gif"))));  		toolBar.add(pasteButton = new JButton(new ImageIcon(this.getClass().getResource("images/paste.gif"))));    		cutButton.setToolTipText("Cut");  		copyButton.setToolTipText("Copy");  		pasteButton.setToolTipText("Paste");    		cuT.addActionListener(new ActionListener(){  			public void actionPerformed(ActionEvent ae){  				actions.cuT();  			}  		});  		copY.addActionListener(new ActionListener(){  			public void actionPerformed(ActionEvent ae){  				actions.copY();  			}  		});  		pastE.addActionListener(new ActionListener(){  			public void actionPerformed(ActionEvent ae){  				actions.pastE();  			}  		});    		cutButton.addActionListener(new ActionListener(){  			public void actionPerformed(ActionEvent ae){  				actions.cuT();  			}  		});  		copyButton.addActionListener(new ActionListener(){  			public void actionPerformed(ActionEvent ae){  				actions.copY();  			}  		});  		pasteButton.addActionListener(new ActionListener(){  			public void actionPerformed(ActionEvent ae){  				actions.pastE();  			}  		});    	  	    ediT.add(undoAction);  	    ediT.add(redoAction);    	    toolBar.addSeparator();  	    toolBar.add(undoAction);  	    toolBar.add(redoAction);  	    toolBar.addSeparator();    	    textArea.getDocument().addUndoableEditListener(new UndoableEditListener(){  			    public void undoableEditHappened(UndoableEditEvent e){  			    //Remember the edit and update the menus  			    undo.addEdit(e.getEdit());  			    undoAction.update();  			    redoAction.update();  			    }  			    });      }</data>
            <data key="Notepad_1">no</data>
            <data key="Notepad_2">no</data>
            <data key="Notepad_3">no</data>
            <data key="Notepad_4">no</data>
            <data key="Notepad_5">no</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">no</data>
            <data key="Notepad_8">no</data>
            <data key="block">Block 06</data>
            <data key="elementType">BodyElement</data>
        </node>
        <node id="306">
            <data key="Label">		ConstructorDecl: Notepad({FormalParametersInternal}) Body: public Notepad  (){          //set the title for Notepad and set the size for it.          setTitle("Untitled - JAVAï¿½ Notepad");          setSize(800,600);            //get the graphical user interface components display area          Container cp = getContentPane();          /**           *adding the text area,           *adding the tool bar &amp;           *adding the scroll pane to the container           */          cp.add(textArea = new JTextArea());          cp.add("North", toolBar = new JToolBar("Tool Bar"));          cp.add(new JScrollPane(textArea));            //for setting the menu bar          setJMenuBar(Menubar= new JMenuBar());          //adding file, edit, view, format, help to the menu bar          Menubar.add(filE   = new JMenu("File"));          Menubar.add(ediT   = new JMenu("Edit"));          Menubar.add(vieW   = new JMenu("View"));          Menubar.add(formaT = new JMenu("Format"));          Menubar.add(helP   = new JMenu("Help"));            /**           *adding neW, opeN, savE, saveAS, prinT &amp; exiT to the filE Menu,           *adding a small image icon to the menu item &amp;           *adding separator between the menu item           */          filE.add(neW    = new JMenuItem("New", new ImageIcon(this.getClass().getResource("images/new.gif"))));          filE.add(opeN   = new JMenuItem("Open", new ImageIcon(this.getClass().getResource("images/open.gif"))));          filE.add(savE   = new JMenuItem("Save", new ImageIcon(this.getClass().getResource("images/save.gif"))));          filE.add(saveAS = new JMenuItem("Save As", new ImageIcon(this.getClass().getResource("images/saveAs.gif"))));          filE.add(prinT  = new JMenuItem("Print", new ImageIcon(this.getClass().getResource("images/print.gif"))));          filE.add(exiT   = new JMenuItem("Exit")); //, new ImageIcon(this.getClass().getResource("images/exit.gif"))));  -- exit.gif missing          filE.insertSeparator(4);          filE.insertSeparator(6);            /**           *adding undO, redO, cuT, copY, pastE, finD, findNexT &amp; selectALL to the ediT Menu,           *adding a small image icon to the menu item &amp;           *adding separator between the menu item           */          ediT.add(selectALL= new JMenuItem("Select All"));          //ediT.insertSeparator(2);          //ediT.insertSeparator(6);            /**           *adding lineWraP &amp; fonT to the formaT Menu,           *adding abouT to the helP Menu &amp;           *adding a small image icon to the menu item           */          formaT.add(lineWraP = new JCheckBoxMenuItem("Line Wrap"));          formaT.add(fonT = new JMenuItem("Font", new ImageIcon(this.getClass().getResource("images/font.gif"))));          helP.add(abouT = new JMenuItem("About Notepad", new ImageIcon(this.getClass().getResource("images/about.gif"))));            /**           *allowing the file   menu to be selected by pressing ALT + F           *allowing the edit   menu to be selected by pressing ALT + E           *allowing the view   menu to be selected by pressing ALT + V           *allowing the format menu to be selected by pressing ALT + O           *allowing the help   menu to be selected by pressing ALT + H           */          filE.setMnemonic('f');          ediT.setMnemonic('e');          vieW.setMnemonic('v');          formaT.setMnemonic('o');          helP.setMnemonic('h');            /**           *allowing the neW       menu item to be selected by pressing ALT + N           *allowing the opeN      menu item to be selected by pressing ALT + O           *allowing the savE      menu item to be selected by pressing ALT + S           *allowing the prinT     menu item to be selected by pressing ALT + P           *allowing the exiT      menu item to be selected by pressing ALT + F4           *allowing the cuT       menu item to be selected by pressing ALT + X           *allowing the copY      menu item to be selected by pressing ALT + C           *allowing the pastE     menu item to be selected by pressing ALT + V           *allowing the selectAll menu item to be selected by pressing ALT + A           */          neW.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_N, ActionEvent.CTRL_MASK));          opeN.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_O, ActionEvent.CTRL_MASK));          savE.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, ActionEvent.CTRL_MASK));          prinT.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_P, ActionEvent.CTRL_MASK));          exiT.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_F4, ActionEvent.CTRL_MASK));          selectALL.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_A, ActionEvent.CTRL_MASK));            /**           *adding newButton, openButton, saveButton, saveAsButton, printButton, undoButton,           *redoButton, cutButton, copyButton, pasteButton, fontButton &amp; aboutButton to the tool bar,           *adding a small image icon to the menu item &amp;           *adding separator between the button           */          toolBar.add(newButton   = new JButton(new ImageIcon(this.getClass().getResource("images/new.gif"))));          toolBar.add(openButton  = new JButton(new ImageIcon(this.getClass().getResource("images/open.gif"))));          toolBar.add(saveButton  = new JButton(new ImageIcon(this.getClass().getResource("images/save.gif"))));          toolBar.add(saveAsButton= new JButton(new ImageIcon(this.getClass().getResource("images/saveAs.gif"))));          toolBar.add(printButton = new JButton(new ImageIcon(this.getClass().getResource("images/print.gif"))));          toolBar.addSeparator();          toolBar.add(fontButton  = new JButton(new ImageIcon(this.getClass().getResource("images/font.gif"))));          toolBar.add(aboutButton = new JButton(new ImageIcon(this.getClass().getResource("images/about.gif"))));            //adding a tool tip text to the button for descriping the image icon.          newButton.setToolTipText("New");          openButton.setToolTipText("Open");          saveButton.setToolTipText("Save");          saveAsButton.setToolTipText("Save As");          printButton.setToolTipText("Print");          fontButton.setToolTipText("Font");          aboutButton.setToolTipText("About Notepad");            /**           *setting the default close operation to false &amp;           *using own action (exiT action @Actions.java)           */          setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);          addWindowListener(new WindowAdapter(){              public void windowClosing(WindowEvent e){                  actions.exiT();              }          });          /**           *adding action listener for menu item: neW, opeN, savE, saveAS, prinT, exiT,           *redO, undO, copY, cuT, pastE, finD, findNexT, selectALL, lineWraP, fonT &amp; abouT           *the actions was written @Actions.java           */          neW.addActionListener(new ActionListener(){              public void actionPerformed(ActionEvent ae){                  actions.neW();              }          });          opeN.addActionListener(new ActionListener(){              public void actionPerformed(ActionEvent ae){                  actions.opeN();              }          });          savE.addActionListener(new ActionListener(){              public void actionPerformed(ActionEvent ae){                  actions.savE();              }          });          saveAS.addActionListener(new ActionListener(){              public void actionPerformed(ActionEvent ae){                  actions.saveAs();              }          });          prinT.addActionListener(new ActionListener(){              public void actionPerformed(ActionEvent ae){                  actions.prinT();              }          });          exiT.addActionListener(new ActionListener(){              public void actionPerformed(ActionEvent ae){                  actions.exiT();              }          });          selectALL.addActionListener(new ActionListener(){              public void actionPerformed(ActionEvent ae){                  actions.selectALL();              }          });          lineWraP.addActionListener(new ActionListener(){              public void actionPerformed(ActionEvent ae){                  actions.lineWraP();              }          });          fonT.addActionListener(new ActionListener(){              public void actionPerformed(ActionEvent ae){                  actions.fonT();              }          });          abouT.addActionListener(new ActionListener(){              public void actionPerformed(ActionEvent ae){                  actions.abouT();              }          });            /**           *adding action listener for the button in the tool bar: newButton, openButton,           *saveButton, saveAsButton, printButton, redoButton, undoButton, copyButton,           *cutButton, pasteButton, findButton, selectALL, lineWraP, fontButton &amp; aboutButton           *the actions was written @Actions.java           */          newButton.addActionListener(new ActionListener(){              public void actionPerformed(ActionEvent ae){                  actions.neW();              }          });          openButton.addActionListener(new ActionListener(){              public void actionPerformed(ActionEvent ae){                  actions.opeN();              }          });          saveButton.addActionListener(new ActionListener(){              public void actionPerformed(ActionEvent ae){                  actions.savE();              }          });          saveAsButton.addActionListener(new ActionListener(){              public void actionPerformed(ActionEvent ae){                  actions.saveAs();              }          });          printButton.addActionListener(new ActionListener(){              public void actionPerformed(ActionEvent ae){                  actions.prinT();              }          });          fontButton.addActionListener(new ActionListener(){              public void actionPerformed(ActionEvent ae){                  actions.fonT();              }          });          aboutButton.addActionListener(new ActionListener(){              public void actionPerformed(ActionEvent ae){                  actions.abouT();              }          });            /**           *Setting the Line Wrap &amp; Wrap Style Word features are true           */          textArea.setLineWrap(true);          textArea.setWrapStyleWord(true);          /**           *for making the program at the center,           *@see Center.java           */          center.nCenter();          show();                ediT.add(finD = new JMenuItem("Find", new ImageIcon(this.getClass().getResource("images/find.gif"))));          ediT.add(findNexT = new JMenuItem("Find Next"));          //ediT.insertSeparator(8);            /**           *allowing the finD      menu item to be selected by pressing ALT + F           *allowing the findNexT  menu item to be selected by pressing ALT + F3           */          finD.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_F, ActionEvent.CTRL_MASK));          findNexT.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_F3, ActionEvent.CTRL_MASK));          toolBar.add(findButton  = new JButton(new ImageIcon(this.getClass().getResource("images/find.gif"))));          findButton.setToolTipText("Find");            finD.addActionListener(new ActionListener(){              public void actionPerformed(ActionEvent ae){                  actions.finD();              }          });          findNexT.addActionListener(new ActionListener(){              public void actionPerformed(ActionEvent ae){                  actions.findNexT();              }          });            findButton.addActionListener(new ActionListener(){              public void actionPerformed(ActionEvent ae){                  actions.finD();              }          });        	    ediT.add(undoAction);  	    ediT.add(redoAction);    	    toolBar.addSeparator();  	    toolBar.add(undoAction);  	    toolBar.add(redoAction);  	    toolBar.addSeparator();    	    textArea.getDocument().addUndoableEditListener(new UndoableEditListener(){  			    public void undoableEditHappened(UndoableEditEvent e){  			    //Remember the edit and update the menus  			    undo.addEdit(e.getEdit());  			    undoAction.update();  			    redoAction.update();  			    }  			    });      }</data>
            <data key="Notepad_1">no</data>
            <data key="Notepad_2">no</data>
            <data key="Notepad_3">no</data>
            <data key="Notepad_4">no</data>
            <data key="Notepad_5">no</data>
            <data key="Notepad_6">no</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">no</data>
            <data key="block">Block 07</data>
            <data key="elementType">BodyElement</data>
        </node>
        <node id="307">
            <data key="Label">		ConstructorDecl: Notepad({FormalParametersInternal}) Body: public Notepad  (){          //set the title for Notepad and set the size for it.          setTitle("Untitled - JAVAï¿½ Notepad");          setSize(800,600);            //get the graphical user interface components display area          Container cp = getContentPane();          /**           *adding the text area,           *adding the tool bar &amp;           *adding the scroll pane to the container           */          cp.add(textArea = new JTextArea());          cp.add("North", toolBar = new JToolBar("Tool Bar"));          cp.add(new JScrollPane(textArea));            //for setting the menu bar          setJMenuBar(Menubar= new JMenuBar());          //adding file, edit, view, format, help to the menu bar          Menubar.add(filE   = new JMenu("File"));          Menubar.add(ediT   = new JMenu("Edit"));          Menubar.add(vieW   = new JMenu("View"));          Menubar.add(formaT = new JMenu("Format"));          Menubar.add(helP   = new JMenu("Help"));            /**           *adding neW, opeN, savE, saveAS, prinT &amp; exiT to the filE Menu,           *adding a small image icon to the menu item &amp;           *adding separator between the menu item           */          filE.add(neW    = new JMenuItem("New", new ImageIcon(this.getClass().getResource("images/new.gif"))));          filE.add(opeN   = new JMenuItem("Open", new ImageIcon(this.getClass().getResource("images/open.gif"))));          filE.add(savE   = new JMenuItem("Save", new ImageIcon(this.getClass().getResource("images/save.gif"))));          filE.add(saveAS = new JMenuItem("Save As", new ImageIcon(this.getClass().getResource("images/saveAs.gif"))));          filE.add(prinT  = new JMenuItem("Print", new ImageIcon(this.getClass().getResource("images/print.gif"))));          filE.add(exiT   = new JMenuItem("Exit")); //, new ImageIcon(this.getClass().getResource("images/exit.gif"))));  -- exit.gif missing          filE.insertSeparator(4);          filE.insertSeparator(6);            /**           *adding undO, redO, cuT, copY, pastE, finD, findNexT &amp; selectALL to the ediT Menu,           *adding a small image icon to the menu item &amp;           *adding separator between the menu item           */          ediT.add(selectALL= new JMenuItem("Select All"));          //ediT.insertSeparator(2);          //ediT.insertSeparator(6);            /**           *adding lineWraP &amp; fonT to the formaT Menu,           *adding abouT to the helP Menu &amp;           *adding a small image icon to the menu item           */          formaT.add(lineWraP = new JCheckBoxMenuItem("Line Wrap"));          formaT.add(fonT = new JMenuItem("Font", new ImageIcon(this.getClass().getResource("images/font.gif"))));          helP.add(abouT = new JMenuItem("About Notepad", new ImageIcon(this.getClass().getResource("images/about.gif"))));            /**           *allowing the file   menu to be selected by pressing ALT + F           *allowing the edit   menu to be selected by pressing ALT + E           *allowing the view   menu to be selected by pressing ALT + V           *allowing the format menu to be selected by pressing ALT + O           *allowing the help   menu to be selected by pressing ALT + H           */          filE.setMnemonic('f');          ediT.setMnemonic('e');          vieW.setMnemonic('v');          formaT.setMnemonic('o');          helP.setMnemonic('h');            /**           *allowing the neW       menu item to be selected by pressing ALT + N           *allowing the opeN      menu item to be selected by pressing ALT + O           *allowing the savE      menu item to be selected by pressing ALT + S           *allowing the prinT     menu item to be selected by pressing ALT + P           *allowing the exiT      menu item to be selected by pressing ALT + F4           *allowing the cuT       menu item to be selected by pressing ALT + X           *allowing the copY      menu item to be selected by pressing ALT + C           *allowing the pastE     menu item to be selected by pressing ALT + V           *allowing the selectAll menu item to be selected by pressing ALT + A           */          neW.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_N, ActionEvent.CTRL_MASK));          opeN.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_O, ActionEvent.CTRL_MASK));          savE.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, ActionEvent.CTRL_MASK));          prinT.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_P, ActionEvent.CTRL_MASK));          exiT.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_F4, ActionEvent.CTRL_MASK));          selectALL.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_A, ActionEvent.CTRL_MASK));            /**           *adding newButton, openButton, saveButton, saveAsButton, printButton, undoButton,           *redoButton, cutButton, copyButton, pasteButton, fontButton &amp; aboutButton to the tool bar,           *adding a small image icon to the menu item &amp;           *adding separator between the button           */          toolBar.add(newButton   = new JButton(new ImageIcon(this.getClass().getResource("images/new.gif"))));          toolBar.add(openButton  = new JButton(new ImageIcon(this.getClass().getResource("images/open.gif"))));          toolBar.add(saveButton  = new JButton(new ImageIcon(this.getClass().getResource("images/save.gif"))));          toolBar.add(saveAsButton= new JButton(new ImageIcon(this.getClass().getResource("images/saveAs.gif"))));          toolBar.add(printButton = new JButton(new ImageIcon(this.getClass().getResource("images/print.gif"))));          toolBar.addSeparator();          toolBar.add(fontButton  = new JButton(new ImageIcon(this.getClass().getResource("images/font.gif"))));          toolBar.add(aboutButton = new JButton(new ImageIcon(this.getClass().getResource("images/about.gif"))));            //adding a tool tip text to the button for descriping the image icon.          newButton.setToolTipText("New");          openButton.setToolTipText("Open");          saveButton.setToolTipText("Save");          saveAsButton.setToolTipText("Save As");          printButton.setToolTipText("Print");          fontButton.setToolTipText("Font");          aboutButton.setToolTipText("About Notepad");            /**           *setting the default close operation to false &amp;           *using own action (exiT action @Actions.java)           */          setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);          addWindowListener(new WindowAdapter(){              public void windowClosing(WindowEvent e){                  actions.exiT();              }          });          /**           *adding action listener for menu item: neW, opeN, savE, saveAS, prinT, exiT,           *redO, undO, copY, cuT, pastE, finD, findNexT, selectALL, lineWraP, fonT &amp; abouT           *the actions was written @Actions.java           */          neW.addActionListener(new ActionListener(){              public void actionPerformed(ActionEvent ae){                  actions.neW();              }          });          opeN.addActionListener(new ActionListener(){              public void actionPerformed(ActionEvent ae){                  actions.opeN();              }          });          savE.addActionListener(new ActionListener(){              public void actionPerformed(ActionEvent ae){                  actions.savE();              }          });          saveAS.addActionListener(new ActionListener(){              public void actionPerformed(ActionEvent ae){                  actions.saveAs();              }          });          prinT.addActionListener(new ActionListener(){              public void actionPerformed(ActionEvent ae){                  actions.prinT();              }          });          exiT.addActionListener(new ActionListener(){              public void actionPerformed(ActionEvent ae){                  actions.exiT();              }          });          selectALL.addActionListener(new ActionListener(){              public void actionPerformed(ActionEvent ae){                  actions.selectALL();              }          });          lineWraP.addActionListener(new ActionListener(){              public void actionPerformed(ActionEvent ae){                  actions.lineWraP();              }          });          fonT.addActionListener(new ActionListener(){              public void actionPerformed(ActionEvent ae){                  actions.fonT();              }          });          abouT.addActionListener(new ActionListener(){              public void actionPerformed(ActionEvent ae){                  actions.abouT();              }          });            /**           *adding action listener for the button in the tool bar: newButton, openButton,           *saveButton, saveAsButton, printButton, redoButton, undoButton, copyButton,           *cutButton, pasteButton, findButton, selectALL, lineWraP, fontButton &amp; aboutButton           *the actions was written @Actions.java           */          newButton.addActionListener(new ActionListener(){              public void actionPerformed(ActionEvent ae){                  actions.neW();              }          });          openButton.addActionListener(new ActionListener(){              public void actionPerformed(ActionEvent ae){                  actions.opeN();              }          });          saveButton.addActionListener(new ActionListener(){              public void actionPerformed(ActionEvent ae){                  actions.savE();              }          });          saveAsButton.addActionListener(new ActionListener(){              public void actionPerformed(ActionEvent ae){                  actions.saveAs();              }          });          printButton.addActionListener(new ActionListener(){              public void actionPerformed(ActionEvent ae){                  actions.prinT();              }          });          fontButton.addActionListener(new ActionListener(){              public void actionPerformed(ActionEvent ae){                  actions.fonT();              }          });          aboutButton.addActionListener(new ActionListener(){              public void actionPerformed(ActionEvent ae){                  actions.abouT();              }          });            /**           *Setting the Line Wrap &amp; Wrap Style Word features are true           */          textArea.setLineWrap(true);          textArea.setWrapStyleWord(true);          /**           *for making the program at the center,           *@see Center.java           */          center.nCenter();          show();        		ediT.add(cuT  = new JMenuItem("Cut",  new ImageIcon(this.getClass().getResource("images/cut.gif"))));  		ediT.add(copY = new JMenuItem("Copy", new ImageIcon(this.getClass().getResource("images/copy.gif"))));  		ediT.add(pastE= new JMenuItem("Paste",new ImageIcon(this.getClass().getResource("images/paste.gif"))));    		cuT.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_X, ActionEvent.CTRL_MASK));  		copY.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_C, ActionEvent.CTRL_MASK));  		pastE.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_V, ActionEvent.CTRL_MASK));    		toolBar.add(cutButton   = new JButton(new ImageIcon(this.getClass().getResource("images/cut.gif"))));  		toolBar.add(copyButton  = new JButton(new ImageIcon(this.getClass().getResource("images/copy.gif"))));  		toolBar.add(pasteButton = new JButton(new ImageIcon(this.getClass().getResource("images/paste.gif"))));    		cutButton.setToolTipText("Cut");  		copyButton.setToolTipText("Copy");  		pasteButton.setToolTipText("Paste");    		cuT.addActionListener(new ActionListener(){  			public void actionPerformed(ActionEvent ae){  				actions.cuT();  			}  		});  		copY.addActionListener(new ActionListener(){  			public void actionPerformed(ActionEvent ae){  				actions.copY();  			}  		});  		pastE.addActionListener(new ActionListener(){  			public void actionPerformed(ActionEvent ae){  				actions.pastE();  			}  		});    		cutButton.addActionListener(new ActionListener(){  			public void actionPerformed(ActionEvent ae){  				actions.cuT();  			}  		});  		copyButton.addActionListener(new ActionListener(){  			public void actionPerformed(ActionEvent ae){  				actions.copY();  			}  		});  		pasteButton.addActionListener(new ActionListener(){  			public void actionPerformed(ActionEvent ae){  				actions.pastE();  			}  		});    	          ediT.add(finD = new JMenuItem("Find", new ImageIcon(this.getClass().getResource("images/find.gif"))));          ediT.add(findNexT = new JMenuItem("Find Next"));          //ediT.insertSeparator(8);            /**           *allowing the finD      menu item to be selected by pressing ALT + F           *allowing the findNexT  menu item to be selected by pressing ALT + F3           */          finD.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_F, ActionEvent.CTRL_MASK));          findNexT.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_F3, ActionEvent.CTRL_MASK));          toolBar.add(findButton  = new JButton(new ImageIcon(this.getClass().getResource("images/find.gif"))));          findButton.setToolTipText("Find");            finD.addActionListener(new ActionListener(){              public void actionPerformed(ActionEvent ae){                  actions.finD();              }          });          findNexT.addActionListener(new ActionListener(){              public void actionPerformed(ActionEvent ae){                  actions.findNexT();              }          });            findButton.addActionListener(new ActionListener(){              public void actionPerformed(ActionEvent ae){                  actions.finD();              }          });        	    ediT.add(undoAction);  	    ediT.add(redoAction);    	    toolBar.addSeparator();  	    toolBar.add(undoAction);  	    toolBar.add(redoAction);  	    toolBar.addSeparator();    	    textArea.getDocument().addUndoableEditListener(new UndoableEditListener(){  			    public void undoableEditHappened(UndoableEditEvent e){  			    //Remember the edit and update the menus  			    undo.addEdit(e.getEdit());  			    undoAction.update();  			    redoAction.update();  			    }  			    });      }</data>
            <data key="Notepad_1">no</data>
            <data key="Notepad_2">no</data>
            <data key="Notepad_3">no</data>
            <data key="Notepad_4">no</data>
            <data key="Notepad_5">no</data>
            <data key="Notepad_6">no</data>
            <data key="Notepad_7">no</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 08</data>
            <data key="elementType">BodyElement</data>
        </node>
        <node id="308">
            <data key="Label">		ConstructorDecl: Notepad({FormalParametersInternal}) Body: public Notepad(){          //set the title for Notepad and set the size for it.          setTitle("Untitled - JAVAï¿½ Notepad");          setSize(800,600);            //get the graphical user interface components display area          Container cp = getContentPane();          /**           *adding the text area,           *adding the tool bar &amp;           *adding the scroll pane to the container           */          cp.add(textArea = new JTextArea());          cp.add("North", toolBar = new JToolBar("Tool Bar"));          cp.add(new JScrollPane(textArea));            //for setting the menu bar          setJMenuBar(Menubar= new JMenuBar());          //adding file, edit, view, format, help to the menu bar          Menubar.add(filE   = new JMenu("File"));          Menubar.add(ediT   = new JMenu("Edit"));          Menubar.add(vieW   = new JMenu("View"));          Menubar.add(formaT = new JMenu("Format"));          Menubar.add(helP   = new JMenu("Help"));            /**           *adding neW, opeN, savE, saveAS, prinT &amp; exiT to the filE Menu,           *adding a small image icon to the menu item &amp;           *adding separator between the menu item           */          filE.add(neW    = new JMenuItem("New", new ImageIcon(this.getClass().getResource("images/new.gif"))));          filE.add(opeN   = new JMenuItem("Open", new ImageIcon(this.getClass().getResource("images/open.gif"))));          filE.add(savE   = new JMenuItem("Save", new ImageIcon(this.getClass().getResource("images/save.gif"))));          filE.add(saveAS = new JMenuItem("Save As", new ImageIcon(this.getClass().getResource("images/saveAs.gif"))));          filE.add(prinT  = new JMenuItem("Print", new ImageIcon(this.getClass().getResource("images/print.gif"))));          filE.add(exiT   = new JMenuItem("Exit")); //, new ImageIcon(this.getClass().getResource("images/exit.gif"))));  -- exit.gif missing          filE.insertSeparator(4);          filE.insertSeparator(6);            /**           *adding undO, redO, cuT, copY, pastE, finD, findNexT &amp; selectALL to the ediT Menu,           *adding a small image icon to the menu item &amp;           *adding separator between the menu item           */          ediT.add(selectALL= new JMenuItem("Select All"));          //ediT.insertSeparator(2);          //ediT.insertSeparator(6);            /**           *adding lineWraP &amp; fonT to the formaT Menu,           *adding abouT to the helP Menu &amp;           *adding a small image icon to the menu item           */          formaT.add(lineWraP = new JCheckBoxMenuItem("Line Wrap"));          formaT.add(fonT = new JMenuItem("Font", new ImageIcon(this.getClass().getResource("images/font.gif"))));          helP.add(abouT = new JMenuItem("About Notepad", new ImageIcon(this.getClass().getResource("images/about.gif"))));            /**           *allowing the file   menu to be selected by pressing ALT + F           *allowing the edit   menu to be selected by pressing ALT + E           *allowing the view   menu to be selected by pressing ALT + V           *allowing the format menu to be selected by pressing ALT + O           *allowing the help   menu to be selected by pressing ALT + H           */          filE.setMnemonic('f');          ediT.setMnemonic('e');          vieW.setMnemonic('v');          formaT.setMnemonic('o');          helP.setMnemonic('h');            /**           *allowing the neW       menu item to be selected by pressing ALT + N           *allowing the opeN      menu item to be selected by pressing ALT + O           *allowing the savE      menu item to be selected by pressing ALT + S           *allowing the prinT     menu item to be selected by pressing ALT + P           *allowing the exiT      menu item to be selected by pressing ALT + F4           *allowing the cuT       menu item to be selected by pressing ALT + X           *allowing the copY      menu item to be selected by pressing ALT + C           *allowing the pastE     menu item to be selected by pressing ALT + V           *allowing the selectAll menu item to be selected by pressing ALT + A           */          neW.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_N, ActionEvent.CTRL_MASK));          opeN.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_O, ActionEvent.CTRL_MASK));          savE.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, ActionEvent.CTRL_MASK));          prinT.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_P, ActionEvent.CTRL_MASK));          exiT.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_F4, ActionEvent.CTRL_MASK));          selectALL.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_A, ActionEvent.CTRL_MASK));            /**           *adding newButton, openButton, saveButton, saveAsButton, printButton, undoButton,           *redoButton, cutButton, copyButton, pasteButton, fontButton &amp; aboutButton to the tool bar,           *adding a small image icon to the menu item &amp;           *adding separator between the button           */          toolBar.add(newButton   = new JButton(new ImageIcon(this.getClass().getResource("images/new.gif"))));          toolBar.add(openButton  = new JButton(new ImageIcon(this.getClass().getResource("images/open.gif"))));          toolBar.add(saveButton  = new JButton(new ImageIcon(this.getClass().getResource("images/save.gif"))));          toolBar.add(saveAsButton= new JButton(new ImageIcon(this.getClass().getResource("images/saveAs.gif"))));          toolBar.add(printButton = new JButton(new ImageIcon(this.getClass().getResource("images/print.gif"))));          toolBar.addSeparator();          toolBar.add(fontButton  = new JButton(new ImageIcon(this.getClass().getResource("images/font.gif"))));          toolBar.add(aboutButton = new JButton(new ImageIcon(this.getClass().getResource("images/about.gif"))));            //adding a tool tip text to the button for descriping the image icon.          newButton.setToolTipText("New");          openButton.setToolTipText("Open");          saveButton.setToolTipText("Save");          saveAsButton.setToolTipText("Save As");          printButton.setToolTipText("Print");          fontButton.setToolTipText("Font");          aboutButton.setToolTipText("About Notepad");            /**           *setting the default close operation to false &amp;           *using own action (exiT action @Actions.java)           */          setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);          addWindowListener(new WindowAdapter(){              public void windowClosing(WindowEvent e){                  actions.exiT();              }          });          /**           *adding action listener for menu item: neW, opeN, savE, saveAS, prinT, exiT,           *redO, undO, copY, cuT, pastE, finD, findNexT, selectALL, lineWraP, fonT &amp; abouT           *the actions was written @Actions.java           */          neW.addActionListener(new ActionListener(){              public void actionPerformed(ActionEvent ae){                  actions.neW();              }          });          opeN.addActionListener(new ActionListener(){              public void actionPerformed(ActionEvent ae){                  actions.opeN();              }          });          savE.addActionListener(new ActionListener(){              public void actionPerformed(ActionEvent ae){                  actions.savE();              }          });          saveAS.addActionListener(new ActionListener(){              public void actionPerformed(ActionEvent ae){                  actions.saveAs();              }          });          prinT.addActionListener(new ActionListener(){              public void actionPerformed(ActionEvent ae){                  actions.prinT();              }          });          exiT.addActionListener(new ActionListener(){              public void actionPerformed(ActionEvent ae){                  actions.exiT();              }          });          selectALL.addActionListener(new ActionListener(){              public void actionPerformed(ActionEvent ae){                  actions.selectALL();              }          });          lineWraP.addActionListener(new ActionListener(){              public void actionPerformed(ActionEvent ae){                  actions.lineWraP();              }          });          fonT.addActionListener(new ActionListener(){              public void actionPerformed(ActionEvent ae){                  actions.fonT();              }          });          abouT.addActionListener(new ActionListener(){              public void actionPerformed(ActionEvent ae){                  actions.abouT();              }          });            /**           *adding action listener for the button in the tool bar: newButton, openButton,           *saveButton, saveAsButton, printButton, redoButton, undoButton, copyButton,           *cutButton, pasteButton, findButton, selectALL, lineWraP, fontButton &amp; aboutButton           *the actions was written @Actions.java           */          newButton.addActionListener(new ActionListener(){              public void actionPerformed(ActionEvent ae){                  actions.neW();              }          });          openButton.addActionListener(new ActionListener(){              public void actionPerformed(ActionEvent ae){                  actions.opeN();              }          });          saveButton.addActionListener(new ActionListener(){              public void actionPerformed(ActionEvent ae){                  actions.savE();              }          });          saveAsButton.addActionListener(new ActionListener(){              public void actionPerformed(ActionEvent ae){                  actions.saveAs();              }          });          printButton.addActionListener(new ActionListener(){              public void actionPerformed(ActionEvent ae){                  actions.prinT();              }          });          fontButton.addActionListener(new ActionListener(){              public void actionPerformed(ActionEvent ae){                  actions.fonT();              }          });          aboutButton.addActionListener(new ActionListener(){              public void actionPerformed(ActionEvent ae){                  actions.abouT();              }          });            /**           *Setting the Line Wrap &amp; Wrap Style Word features are true           */          textArea.setLineWrap(true);          textArea.setWrapStyleWord(true);          /**           *for making the program at the center,           *@see Center.java           */          center.nCenter();          show();      }</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">no</data>
            <data key="Notepad_3">no</data>
            <data key="Notepad_4">no</data>
            <data key="Notepad_5">no</data>
            <data key="Notepad_6">no</data>
            <data key="Notepad_7">no</data>
            <data key="Notepad_8">no</data>
            <data key="block">Block 09</data>
            <data key="elementType">BodyElement</data>
        </node>
        <node id="309">
            <data key="Label">		ConstructorDecl: Notepad({FormalParametersInternal}) Body: public Notepad  (){          //set the title for Notepad and set the size for it.          setTitle("Untitled - JAVAï¿½ Notepad");          setSize(800,600);            //get the graphical user interface components display area          Container cp = getContentPane();          /**           *adding the text area,           *adding the tool bar &amp;           *adding the scroll pane to the container           */          cp.add(textArea = new JTextArea());          cp.add("North", toolBar = new JToolBar("Tool Bar"));          cp.add(new JScrollPane(textArea));            //for setting the menu bar          setJMenuBar(Menubar= new JMenuBar());          //adding file, edit, view, format, help to the menu bar          Menubar.add(filE   = new JMenu("File"));          Menubar.add(ediT   = new JMenu("Edit"));          Menubar.add(vieW   = new JMenu("View"));          Menubar.add(formaT = new JMenu("Format"));          Menubar.add(helP   = new JMenu("Help"));            /**           *adding neW, opeN, savE, saveAS, prinT &amp; exiT to the filE Menu,           *adding a small image icon to the menu item &amp;           *adding separator between the menu item           */          filE.add(neW    = new JMenuItem("New", new ImageIcon(this.getClass().getResource("images/new.gif"))));          filE.add(opeN   = new JMenuItem("Open", new ImageIcon(this.getClass().getResource("images/open.gif"))));          filE.add(savE   = new JMenuItem("Save", new ImageIcon(this.getClass().getResource("images/save.gif"))));          filE.add(saveAS = new JMenuItem("Save As", new ImageIcon(this.getClass().getResource("images/saveAs.gif"))));          filE.add(prinT  = new JMenuItem("Print", new ImageIcon(this.getClass().getResource("images/print.gif"))));          filE.add(exiT   = new JMenuItem("Exit")); //, new ImageIcon(this.getClass().getResource("images/exit.gif"))));  -- exit.gif missing          filE.insertSeparator(4);          filE.insertSeparator(6);            /**           *adding undO, redO, cuT, copY, pastE, finD, findNexT &amp; selectALL to the ediT Menu,           *adding a small image icon to the menu item &amp;           *adding separator between the menu item           */          ediT.add(selectALL= new JMenuItem("Select All"));          //ediT.insertSeparator(2);          //ediT.insertSeparator(6);            /**           *adding lineWraP &amp; fonT to the formaT Menu,           *adding abouT to the helP Menu &amp;           *adding a small image icon to the menu item           */          formaT.add(lineWraP = new JCheckBoxMenuItem("Line Wrap"));          formaT.add(fonT = new JMenuItem("Font", new ImageIcon(this.getClass().getResource("images/font.gif"))));          helP.add(abouT = new JMenuItem("About Notepad", new ImageIcon(this.getClass().getResource("images/about.gif"))));            /**           *allowing the file   menu to be selected by pressing ALT + F           *allowing the edit   menu to be selected by pressing ALT + E           *allowing the view   menu to be selected by pressing ALT + V           *allowing the format menu to be selected by pressing ALT + O           *allowing the help   menu to be selected by pressing ALT + H           */          filE.setMnemonic('f');          ediT.setMnemonic('e');          vieW.setMnemonic('v');          formaT.setMnemonic('o');          helP.setMnemonic('h');            /**           *allowing the neW       menu item to be selected by pressing ALT + N           *allowing the opeN      menu item to be selected by pressing ALT + O           *allowing the savE      menu item to be selected by pressing ALT + S           *allowing the prinT     menu item to be selected by pressing ALT + P           *allowing the exiT      menu item to be selected by pressing ALT + F4           *allowing the cuT       menu item to be selected by pressing ALT + X           *allowing the copY      menu item to be selected by pressing ALT + C           *allowing the pastE     menu item to be selected by pressing ALT + V           *allowing the selectAll menu item to be selected by pressing ALT + A           */          neW.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_N, ActionEvent.CTRL_MASK));          opeN.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_O, ActionEvent.CTRL_MASK));          savE.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, ActionEvent.CTRL_MASK));          prinT.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_P, ActionEvent.CTRL_MASK));          exiT.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_F4, ActionEvent.CTRL_MASK));          selectALL.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_A, ActionEvent.CTRL_MASK));            /**           *adding newButton, openButton, saveButton, saveAsButton, printButton, undoButton,           *redoButton, cutButton, copyButton, pasteButton, fontButton &amp; aboutButton to the tool bar,           *adding a small image icon to the menu item &amp;           *adding separator between the button           */          toolBar.add(newButton   = new JButton(new ImageIcon(this.getClass().getResource("images/new.gif"))));          toolBar.add(openButton  = new JButton(new ImageIcon(this.getClass().getResource("images/open.gif"))));          toolBar.add(saveButton  = new JButton(new ImageIcon(this.getClass().getResource("images/save.gif"))));          toolBar.add(saveAsButton= new JButton(new ImageIcon(this.getClass().getResource("images/saveAs.gif"))));          toolBar.add(printButton = new JButton(new ImageIcon(this.getClass().getResource("images/print.gif"))));          toolBar.addSeparator();          toolBar.add(fontButton  = new JButton(new ImageIcon(this.getClass().getResource("images/font.gif"))));          toolBar.add(aboutButton = new JButton(new ImageIcon(this.getClass().getResource("images/about.gif"))));            //adding a tool tip text to the button for descriping the image icon.          newButton.setToolTipText("New");          openButton.setToolTipText("Open");          saveButton.setToolTipText("Save");          saveAsButton.setToolTipText("Save As");          printButton.setToolTipText("Print");          fontButton.setToolTipText("Font");          aboutButton.setToolTipText("About Notepad");            /**           *setting the default close operation to false &amp;           *using own action (exiT action @Actions.java)           */          setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);          addWindowListener(new WindowAdapter(){              public void windowClosing(WindowEvent e){                  actions.exiT();              }          });          /**           *adding action listener for menu item: neW, opeN, savE, saveAS, prinT, exiT,           *redO, undO, copY, cuT, pastE, finD, findNexT, selectALL, lineWraP, fonT &amp; abouT           *the actions was written @Actions.java           */          neW.addActionListener(new ActionListener(){              public void actionPerformed(ActionEvent ae){                  actions.neW();              }          });          opeN.addActionListener(new ActionListener(){              public void actionPerformed(ActionEvent ae){                  actions.opeN();              }          });          savE.addActionListener(new ActionListener(){              public void actionPerformed(ActionEvent ae){                  actions.savE();              }          });          saveAS.addActionListener(new ActionListener(){              public void actionPerformed(ActionEvent ae){                  actions.saveAs();              }          });          prinT.addActionListener(new ActionListener(){              public void actionPerformed(ActionEvent ae){                  actions.prinT();              }          });          exiT.addActionListener(new ActionListener(){              public void actionPerformed(ActionEvent ae){                  actions.exiT();              }          });          selectALL.addActionListener(new ActionListener(){              public void actionPerformed(ActionEvent ae){                  actions.selectALL();              }          });          lineWraP.addActionListener(new ActionListener(){              public void actionPerformed(ActionEvent ae){                  actions.lineWraP();              }          });          fonT.addActionListener(new ActionListener(){              public void actionPerformed(ActionEvent ae){                  actions.fonT();              }          });          abouT.addActionListener(new ActionListener(){              public void actionPerformed(ActionEvent ae){                  actions.abouT();              }          });            /**           *adding action listener for the button in the tool bar: newButton, openButton,           *saveButton, saveAsButton, printButton, redoButton, undoButton, copyButton,           *cutButton, pasteButton, findButton, selectALL, lineWraP, fontButton &amp; aboutButton           *the actions was written @Actions.java           */          newButton.addActionListener(new ActionListener(){              public void actionPerformed(ActionEvent ae){                  actions.neW();              }          });          openButton.addActionListener(new ActionListener(){              public void actionPerformed(ActionEvent ae){                  actions.opeN();              }          });          saveButton.addActionListener(new ActionListener(){              public void actionPerformed(ActionEvent ae){                  actions.savE();              }          });          saveAsButton.addActionListener(new ActionListener(){              public void actionPerformed(ActionEvent ae){                  actions.saveAs();              }          });          printButton.addActionListener(new ActionListener(){              public void actionPerformed(ActionEvent ae){                  actions.prinT();              }          });          fontButton.addActionListener(new ActionListener(){              public void actionPerformed(ActionEvent ae){                  actions.fonT();              }          });          aboutButton.addActionListener(new ActionListener(){              public void actionPerformed(ActionEvent ae){                  actions.abouT();              }          });            /**           *Setting the Line Wrap &amp; Wrap Style Word features are true           */          textArea.setLineWrap(true);          textArea.setWrapStyleWord(true);          /**           *for making the program at the center,           *@see Center.java           */          center.nCenter();          show();        		ediT.add(cuT  = new JMenuItem("Cut",  new ImageIcon(this.getClass().getResource("images/cut.gif"))));  		ediT.add(copY = new JMenuItem("Copy", new ImageIcon(this.getClass().getResource("images/copy.gif"))));  		ediT.add(pastE= new JMenuItem("Paste",new ImageIcon(this.getClass().getResource("images/paste.gif"))));    		cuT.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_X, ActionEvent.CTRL_MASK));  		copY.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_C, ActionEvent.CTRL_MASK));  		pastE.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_V, ActionEvent.CTRL_MASK));    		toolBar.add(cutButton   = new JButton(new ImageIcon(this.getClass().getResource("images/cut.gif"))));  		toolBar.add(copyButton  = new JButton(new ImageIcon(this.getClass().getResource("images/copy.gif"))));  		toolBar.add(pasteButton = new JButton(new ImageIcon(this.getClass().getResource("images/paste.gif"))));    		cutButton.setToolTipText("Cut");  		copyButton.setToolTipText("Copy");  		pasteButton.setToolTipText("Paste");    		cuT.addActionListener(new ActionListener(){  			public void actionPerformed(ActionEvent ae){  				actions.cuT();  			}  		});  		copY.addActionListener(new ActionListener(){  			public void actionPerformed(ActionEvent ae){  				actions.copY();  			}  		});  		pastE.addActionListener(new ActionListener(){  			public void actionPerformed(ActionEvent ae){  				actions.pastE();  			}  		});    		cutButton.addActionListener(new ActionListener(){  			public void actionPerformed(ActionEvent ae){  				actions.cuT();  			}  		});  		copyButton.addActionListener(new ActionListener(){  			public void actionPerformed(ActionEvent ae){  				actions.copY();  			}  		});  		pasteButton.addActionListener(new ActionListener(){  			public void actionPerformed(ActionEvent ae){  				actions.pastE();  			}  		});    	}</data>
            <data key="Notepad_1">no</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">no</data>
            <data key="Notepad_4">no</data>
            <data key="Notepad_5">no</data>
            <data key="Notepad_6">no</data>
            <data key="Notepad_7">no</data>
            <data key="Notepad_8">no</data>
            <data key="block">Block 10</data>
            <data key="elementType">BodyElement</data>
        </node>
        <node id="31">
            <data key="Label">		FieldDecl: jfc Body: private JFileChooser jfc = new JFileChooser(".");</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">BodyElement</data>
        </node>
        <node id="310">
            <data key="Label">		ConstructorDecl: Notepad({FormalParametersInternal}) Body: public Notepad  (){          //set the title for Notepad and set the size for it.          setTitle("Untitled - JAVAï¿½ Notepad");          setSize(800,600);            //get the graphical user interface components display area          Container cp = getContentPane();          /**           *adding the text area,           *adding the tool bar &amp;           *adding the scroll pane to the container           */          cp.add(textArea = new JTextArea());          cp.add("North", toolBar = new JToolBar("Tool Bar"));          cp.add(new JScrollPane(textArea));            //for setting the menu bar          setJMenuBar(Menubar= new JMenuBar());          //adding file, edit, view, format, help to the menu bar          Menubar.add(filE   = new JMenu("File"));          Menubar.add(ediT   = new JMenu("Edit"));          Menubar.add(vieW   = new JMenu("View"));          Menubar.add(formaT = new JMenu("Format"));          Menubar.add(helP   = new JMenu("Help"));            /**           *adding neW, opeN, savE, saveAS, prinT &amp; exiT to the filE Menu,           *adding a small image icon to the menu item &amp;           *adding separator between the menu item           */          filE.add(neW    = new JMenuItem("New", new ImageIcon(this.getClass().getResource("images/new.gif"))));          filE.add(opeN   = new JMenuItem("Open", new ImageIcon(this.getClass().getResource("images/open.gif"))));          filE.add(savE   = new JMenuItem("Save", new ImageIcon(this.getClass().getResource("images/save.gif"))));          filE.add(saveAS = new JMenuItem("Save As", new ImageIcon(this.getClass().getResource("images/saveAs.gif"))));          filE.add(prinT  = new JMenuItem("Print", new ImageIcon(this.getClass().getResource("images/print.gif"))));          filE.add(exiT   = new JMenuItem("Exit")); //, new ImageIcon(this.getClass().getResource("images/exit.gif"))));  -- exit.gif missing          filE.insertSeparator(4);          filE.insertSeparator(6);            /**           *adding undO, redO, cuT, copY, pastE, finD, findNexT &amp; selectALL to the ediT Menu,           *adding a small image icon to the menu item &amp;           *adding separator between the menu item           */          ediT.add(selectALL= new JMenuItem("Select All"));          //ediT.insertSeparator(2);          //ediT.insertSeparator(6);            /**           *adding lineWraP &amp; fonT to the formaT Menu,           *adding abouT to the helP Menu &amp;           *adding a small image icon to the menu item           */          formaT.add(lineWraP = new JCheckBoxMenuItem("Line Wrap"));          formaT.add(fonT = new JMenuItem("Font", new ImageIcon(this.getClass().getResource("images/font.gif"))));          helP.add(abouT = new JMenuItem("About Notepad", new ImageIcon(this.getClass().getResource("images/about.gif"))));            /**           *allowing the file   menu to be selected by pressing ALT + F           *allowing the edit   menu to be selected by pressing ALT + E           *allowing the view   menu to be selected by pressing ALT + V           *allowing the format menu to be selected by pressing ALT + O           *allowing the help   menu to be selected by pressing ALT + H           */          filE.setMnemonic('f');          ediT.setMnemonic('e');          vieW.setMnemonic('v');          formaT.setMnemonic('o');          helP.setMnemonic('h');            /**           *allowing the neW       menu item to be selected by pressing ALT + N           *allowing the opeN      menu item to be selected by pressing ALT + O           *allowing the savE      menu item to be selected by pressing ALT + S           *allowing the prinT     menu item to be selected by pressing ALT + P           *allowing the exiT      menu item to be selected by pressing ALT + F4           *allowing the cuT       menu item to be selected by pressing ALT + X           *allowing the copY      menu item to be selected by pressing ALT + C           *allowing the pastE     menu item to be selected by pressing ALT + V           *allowing the selectAll menu item to be selected by pressing ALT + A           */          neW.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_N, ActionEvent.CTRL_MASK));          opeN.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_O, ActionEvent.CTRL_MASK));          savE.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, ActionEvent.CTRL_MASK));          prinT.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_P, ActionEvent.CTRL_MASK));          exiT.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_F4, ActionEvent.CTRL_MASK));          selectALL.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_A, ActionEvent.CTRL_MASK));            /**           *adding newButton, openButton, saveButton, saveAsButton, printButton, undoButton,           *redoButton, cutButton, copyButton, pasteButton, fontButton &amp; aboutButton to the tool bar,           *adding a small image icon to the menu item &amp;           *adding separator between the button           */          toolBar.add(newButton   = new JButton(new ImageIcon(this.getClass().getResource("images/new.gif"))));          toolBar.add(openButton  = new JButton(new ImageIcon(this.getClass().getResource("images/open.gif"))));          toolBar.add(saveButton  = new JButton(new ImageIcon(this.getClass().getResource("images/save.gif"))));          toolBar.add(saveAsButton= new JButton(new ImageIcon(this.getClass().getResource("images/saveAs.gif"))));          toolBar.add(printButton = new JButton(new ImageIcon(this.getClass().getResource("images/print.gif"))));          toolBar.addSeparator();          toolBar.add(fontButton  = new JButton(new ImageIcon(this.getClass().getResource("images/font.gif"))));          toolBar.add(aboutButton = new JButton(new ImageIcon(this.getClass().getResource("images/about.gif"))));            //adding a tool tip text to the button for descriping the image icon.          newButton.setToolTipText("New");          openButton.setToolTipText("Open");          saveButton.setToolTipText("Save");          saveAsButton.setToolTipText("Save As");          printButton.setToolTipText("Print");          fontButton.setToolTipText("Font");          aboutButton.setToolTipText("About Notepad");            /**           *setting the default close operation to false &amp;           *using own action (exiT action @Actions.java)           */          setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);          addWindowListener(new WindowAdapter(){              public void windowClosing(WindowEvent e){                  actions.exiT();              }          });          /**           *adding action listener for menu item: neW, opeN, savE, saveAS, prinT, exiT,           *redO, undO, copY, cuT, pastE, finD, findNexT, selectALL, lineWraP, fonT &amp; abouT           *the actions was written @Actions.java           */          neW.addActionListener(new ActionListener(){              public void actionPerformed(ActionEvent ae){                  actions.neW();              }          });          opeN.addActionListener(new ActionListener(){              public void actionPerformed(ActionEvent ae){                  actions.opeN();              }          });          savE.addActionListener(new ActionListener(){              public void actionPerformed(ActionEvent ae){                  actions.savE();              }          });          saveAS.addActionListener(new ActionListener(){              public void actionPerformed(ActionEvent ae){                  actions.saveAs();              }          });          prinT.addActionListener(new ActionListener(){              public void actionPerformed(ActionEvent ae){                  actions.prinT();              }          });          exiT.addActionListener(new ActionListener(){              public void actionPerformed(ActionEvent ae){                  actions.exiT();              }          });          selectALL.addActionListener(new ActionListener(){              public void actionPerformed(ActionEvent ae){                  actions.selectALL();              }          });          lineWraP.addActionListener(new ActionListener(){              public void actionPerformed(ActionEvent ae){                  actions.lineWraP();              }          });          fonT.addActionListener(new ActionListener(){              public void actionPerformed(ActionEvent ae){                  actions.fonT();              }          });          abouT.addActionListener(new ActionListener(){              public void actionPerformed(ActionEvent ae){                  actions.abouT();              }          });            /**           *adding action listener for the button in the tool bar: newButton, openButton,           *saveButton, saveAsButton, printButton, redoButton, undoButton, copyButton,           *cutButton, pasteButton, findButton, selectALL, lineWraP, fontButton &amp; aboutButton           *the actions was written @Actions.java           */          newButton.addActionListener(new ActionListener(){              public void actionPerformed(ActionEvent ae){                  actions.neW();              }          });          openButton.addActionListener(new ActionListener(){              public void actionPerformed(ActionEvent ae){                  actions.opeN();              }          });          saveButton.addActionListener(new ActionListener(){              public void actionPerformed(ActionEvent ae){                  actions.savE();              }          });          saveAsButton.addActionListener(new ActionListener(){              public void actionPerformed(ActionEvent ae){                  actions.saveAs();              }          });          printButton.addActionListener(new ActionListener(){              public void actionPerformed(ActionEvent ae){                  actions.prinT();              }          });          fontButton.addActionListener(new ActionListener(){              public void actionPerformed(ActionEvent ae){                  actions.fonT();              }          });          aboutButton.addActionListener(new ActionListener(){              public void actionPerformed(ActionEvent ae){                  actions.abouT();              }          });            /**           *Setting the Line Wrap &amp; Wrap Style Word features are true           */          textArea.setLineWrap(true);          textArea.setWrapStyleWord(true);          /**           *for making the program at the center,           *@see Center.java           */          center.nCenter();          show();                ediT.add(finD = new JMenuItem("Find", new ImageIcon(this.getClass().getResource("images/find.gif"))));          ediT.add(findNexT = new JMenuItem("Find Next"));          //ediT.insertSeparator(8);            /**           *allowing the finD      menu item to be selected by pressing ALT + F           *allowing the findNexT  menu item to be selected by pressing ALT + F3           */          finD.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_F, ActionEvent.CTRL_MASK));          findNexT.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_F3, ActionEvent.CTRL_MASK));          toolBar.add(findButton  = new JButton(new ImageIcon(this.getClass().getResource("images/find.gif"))));          findButton.setToolTipText("Find");            finD.addActionListener(new ActionListener(){              public void actionPerformed(ActionEvent ae){                  actions.finD();              }          });          findNexT.addActionListener(new ActionListener(){              public void actionPerformed(ActionEvent ae){                  actions.findNexT();              }          });            findButton.addActionListener(new ActionListener(){              public void actionPerformed(ActionEvent ae){                  actions.finD();              }          });      }</data>
            <data key="Notepad_1">no</data>
            <data key="Notepad_2">no</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">no</data>
            <data key="Notepad_5">no</data>
            <data key="Notepad_6">no</data>
            <data key="Notepad_7">no</data>
            <data key="Notepad_8">no</data>
            <data key="block">Block 11</data>
            <data key="elementType">BodyElement</data>
        </node>
        <node id="32">
            <data key="Label">		FieldDecl: filter</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">FSTTerminalNodeElement</data>
        </node>
        <node id="33">
            <data key="Label">		FieldDecl: filter Body: private ExampleFileFilter filter = new ExampleFileFilter();</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">BodyElement</data>
        </node>
        <node id="34">
            <data key="Label">		FieldDecl: n</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">FSTTerminalNodeElement</data>
        </node>
        <node id="35">
            <data key="Label">		FieldDecl: n Body: Notepad n;</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">BodyElement</data>
        </node>
        <node id="36">
            <data key="Label">		FieldDecl: font</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">FSTTerminalNodeElement</data>
        </node>
        <node id="37">
            <data key="Label">		FieldDecl: font Body: public Fonts font = new Fonts();</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">BodyElement</data>
        </node>
        <node id="38">
            <data key="Label">		ConstructorDecl: Actions(Notepad-Notepad)</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">FSTTerminalNodeElement</data>
        </node>
        <node id="39">
            <data key="Label">		ConstructorDecl: Actions(Notepad-Notepad) Body: public Actions(Notepad n){  		this.n = n;  	}</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">BodyElement</data>
        </node>
        <node id="4">
            <data key="Label">		ClassOrInterface1: </data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">FSTTerminalNodeElement</data>
        </node>
        <node id="40">
            <data key="Label">		MethodDecl: neW({FormalParametersInternal})</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">FSTTerminalNodeElement</data>
        </node>
        <node id="41">
            <data key="Label">		MethodDecl: neW({FormalParametersInternal}) Body: public void neW(){  		/**  		 *if the text area isn't empty &amp; if the text area hasn't   		 *a text not saved before (fileContent != null)  		 */  		if(!n.getTextArea().getText().equals("") &amp;&amp; !n.getTextArea().getText().equals(fileContent)){  			/**  			 *here, we have two things, first if the text wasn't be opened or saved before  			 *second if the text was be opened or saved  			 */  			//if there was no file opened or saved  			if(fileName == null){  				/**  				 *this method has 3 options (1 = YES, 2 = NO, 3 = Cancel)  				 *this is an option pop up to the user, for saving the old text or not  				 */  				option = JOptionPane.showConfirmDialog(null,"Do you want to save the changes ??");  				//if the user click on YES button,   				//then the program will save the text &amp; make a new text area  				if(option == 0){  					//to save the text into a new file  					saveAs();  					//to create new getTextArea() after saving the old getTextArea()  					n.getTextArea().setText("");  				}  				//if the user click on NO button  				if(option == 1){  					//to create new getTextArea() without saving the old getTextArea()  					n.getTextArea().setText("");  				}  			}  			//if there was a text which was be opend or saved  			else{  				/**  				 *this method has 3 options (1 = YES, 2 = NO, 3 = Cancel)  				 *this is an option pop up to the user, for saving the old text or not  				 */  				option = JOptionPane.showConfirmDialog(null,"Do you want to save the changes ??");  				/**  				 *if the user click on YES button,   				 *then the program will save the text into the old file &amp;  				 *make a new text area,,,  				 */  				if(option == 0){  					save();  					//to create new getTextArea() after saving the old getTextArea()  					n.getTextArea().setText("");  				}  				//if the user click on NO button  				if(option == 1){  						//to create new getTextArea() without saving the old getTextArea()  						n.getTextArea().setText("");  				}  			}  		}  		/**  		 *if the text was be opened or saved before but wasn't be changed,  		 *and we want to write a new text,,, this option will be actived  		 */  		else{  			n.getTextArea().setText("");  		}  		n.setTitle("Untitled - JAVAï¿½ Notepad");  	}</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">BodyElement</data>
        </node>
        <node id="42">
            <data key="Label">		MethodDecl: opeN({FormalParametersInternal})</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">FSTTerminalNodeElement</data>
        </node>
        <node id="43">
            <data key="Label">		MethodDecl: opeN({FormalParametersInternal}) Body: public void opeN(){  		/**  		 *if the text area isn't empty &amp; if the text area hasn't a text which  		 *not saved befor (fileContent != null)  		 */  		if(!n.getTextArea().getText().equals("") &amp;&amp; !n.getTextArea().getText().equals(fileContent)){  			/**  			 *here, we have 2 thing, first if the text wasn't be opened or saved befor  			 *second if the text was be opened or saved  			 */  			//if there was no file opened or saved  			if(fileName == null){  				/**  				 *this method has 3 options (1 = YES, 2 = NO, 3 = Cancel)  				 *this is an option pop up to the user, for saving the old text or not  				 */  				option = JOptionPane.showConfirmDialog(null,"Do you want to save the changes ??");  				//if the user click on YES button,   				//then the program will be saved the text &amp; opened a new documents  				if(option == 0){  					//for saving the text in a new file  					saveAs();  					//for opening the new documents  					open();  				}  				/**  				 *if the user click on NO button,   				 *the program will be opened the new documents  				 */  				if(option == 1){  					//for opening the new documents  					open();  				}  			}  			//if there was a text which was be opend or saved  			else{  				/**  				 *this method has 3 options (1 = YES, 2 = NO, 3 = Cancel)  				 *this is an option pop up to the user, for saving the old text or not  				 */  				option = JOptionPane.showConfirmDialog(null,"Do you want to save the changes ??");  				/**  				 *if the user click on YES button,   				 *then the program will save the text into the same file &amp;  				 *open the new documents  				 */  				if(option == 0){  					//for saving the text into the same file  					save();  					//for opening the new documents  					open();  				}  				/**  				 *if the user click on NO button,  				 *the program will be opened the new documents  				 */  				if(option == 1){  					//for opening the new documents  					open();  				}  			}  		}  		/**  		 *if the text was be opened or saved before but wasn't be changed,  		 *and we want to open a new document,,, this option will be actived  		 */		  		else{  			//for opening the new documents  			open();  		}  	}</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">BodyElement</data>
        </node>
        <node id="44">
            <data key="Label">		MethodDecl: savE({FormalParametersInternal})</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">FSTTerminalNodeElement</data>
        </node>
        <node id="45">
            <data key="Label">		MethodDecl: savE({FormalParametersInternal}) Body: public void savE(){  		/**  		 *if String fileName is null, then using saveAs().  		 *Because there was no file was be saved  		 */  		if(fileName == null){  			saveAs();	  		}  		/**  		 *if String fileName has a String (file name), then using save().  		 *Because we want to save the new text in the same file.  		 *if the user want to save the all text (old &amp; new text) in a new file, -&gt;  		 *he can presses SaveAs button (@saveAs())  		 */  		else{  			save();  		}  	}</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">BodyElement</data>
        </node>
        <node id="46">
            <data key="Label">		MethodDecl: prinT({FormalParametersInternal})</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">FSTTerminalNodeElement</data>
        </node>
        <node id="47">
            <data key="Label">		MethodDecl: prinT({FormalParametersInternal}) Body: public void prinT(){  		//import printer class  		Print.printComponent(n.getTextArea());  	}</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">BodyElement</data>
        </node>
        <node id="48">
            <data key="Label">		MethodDecl: exiT({FormalParametersInternal})</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">FSTTerminalNodeElement</data>
        </node>
        <node id="49">
            <data key="Label">		MethodDecl: exiT({FormalParametersInternal}) Body: public void exiT(){  		/**  		 *if the text area isn't empty &amp; if the text area hasn't a text which  		 *not saved befor (fileContent != null)  		 */  		if(!n.getTextArea().getText().equals("") &amp;&amp; !n.getTextArea().getText().equals(fileContent)){  			//if there was no file opened or saved  			if(fileName == null){  				/**  				 *this method has 3 options (1 = YES, 2 = NO, 3 = Cancel)  				 *this is an option pop up to the user, for saving the old text or not  				 */  				option = JOptionPane.showConfirmDialog(null,"Do you want to save the changes ??");  				/**  				 *if the user click on YES button,  				 *then the program will be saved the text &amp; close the program  				 */  				if(option == 0){  					//for saving the text into new file  					saveAs();  					//for closing the program  					System.exit(0);  				}  				/**  				 *if the user click on NO button,  				 *then the program will be closed without save the text  				 */  				if(option == 1){  					//for closing the program  					System.exit(0);  				}  			}  			//if there was a text which was be opend or saved		  			else{  				/**  				 *this method has 3 options (1 = YES, 2 = NO, 3 = Cancel)  				 *this is an option pop up to the user, for saving the old text or not  				 */  				option = JOptionPane.showConfirmDialog(null,"Do you want to save the changes ??");  				/**  				 *if the user click on YES button,  				 *then the program will be saved the text &amp; close the program  				 */  				if(option == 0){  					//for saving the text into the same file  					save();  					//for closing the program  					System.exit(0);  				}  				/**  				 *if the user click on NO button,  				 *then the program will be closed without save the text  				 */  				if(option == 1){  					//for closing the program  					System.exit(0);  				}  			}  		}  		/**  		 *if the text was be opened or saved before but wasn't be changed,  		 *and we want to close the program. This option will be actived  		 */	  		else{  			//for closing the program  			System.exit(0);  		}  	}</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">BodyElement</data>
        </node>
        <node id="5">
            <data key="Label">		ClassOrInterface1:  Body: class</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">BodyElement</data>
        </node>
        <node id="50">
            <data key="Label">		MethodDecl: selectALL({FormalParametersInternal})</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">FSTTerminalNodeElement</data>
        </node>
        <node id="51">
            <data key="Label">		MethodDecl: selectALL({FormalParametersInternal}) Body: public void selectALL(){  		n.getTextArea().selectAll();  	}</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">BodyElement</data>
        </node>
        <node id="52">
            <data key="Label">		MethodDecl: lineWraP({FormalParametersInternal})</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">FSTTerminalNodeElement</data>
        </node>
        <node id="53">
            <data key="Label">		MethodDecl: lineWraP({FormalParametersInternal}) Body: public void lineWraP(){  		if(n.getLineWrap().isSelected()){  			/**  			 *make the line wrap &amp; wrap style word is true  			 *when the line wrap is selected  			 */  			n.getTextArea().setLineWrap(true);  			n.getTextArea().setWrapStyleWord(true);  		}  		else{  			/**  			 *make the line wrap &amp; wrap style word is false  			 *when the line wrap isn't selected  			 */  			n.getTextArea().setLineWrap(false);  			n.getTextArea().setWrapStyleWord(false);  		}  	}</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">BodyElement</data>
        </node>
        <node id="54">
            <data key="Label">		MethodDecl: fonT({FormalParametersInternal})</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">FSTTerminalNodeElement</data>
        </node>
        <node id="55">
            <data key="Label">		MethodDecl: fonT({FormalParametersInternal}) Body: public void fonT(){  		font.setVisible(true); //setting the visible is true  		font.pack(); //pack the panel  		//making an action for ok button, so we can change the font  		font.getOkjb().addActionListener(new ActionListener(){  			public void actionPerformed(ActionEvent ae){  				n.getTextArea().setFont(font.font());  				//after we chose the font, then the JDialog will be closed  				font.setVisible(false);  			}  		});	  		//making an action for cancel button, so we can return to the old font.  		font.getCajb().addActionListener(new ActionListener(){  			public void actionPerformed(ActionEvent ae){  				//after we cancel the, then the JDialog will be closed  				font.setVisible(false);  			}  		});  	}</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">BodyElement</data>
        </node>
        <node id="56">
            <data key="Label">		MethodDecl: abouT({FormalParametersInternal})</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">FSTTerminalNodeElement</data>
        </node>
        <node id="57">
            <data key="Label">		MethodDecl: abouT({FormalParametersInternal}) Body: public void abouT(){  		JOptionPane.showMessageDialog(null, new About(),"About Notepad",JOptionPane.PLAIN_MESSAGE);  	}</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">BodyElement</data>
        </node>
        <node id="58">
            <data key="Label">		MethodDecl: open({FormalParametersInternal})</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">FSTTerminalNodeElement</data>
        </node>
        <node id="59">
            <data key="Label">		MethodDecl: open({FormalParametersInternal}) Body: public void open(){  		//filter the kind of files, we want only TXT file  		filter.addExtension("txt");  		//to set a description for the file (TXT)  		filter.setDescription("TXT Documents");  		//setting the FileFilter to JFileChooser  		jfc.setFileFilter(filter);  		returnVal = jfc.showOpenDialog(n); //to show JFileChooser  		if(returnVal == JFileChooser.APPROVE_OPTION){  			//to erase any text in the text area before adding new text  			n.getTextArea().setText(null);  			try{  				//to get the name of the selected file  				fileName = jfc.getSelectedFile().getPath();  				//to read the selected file   				Reader in = new FileReader(jfc.getSelectedFile());  				//100000 is the max. char can be written in the text area  				char[] buff = new char[100000];  				int nch;  				while((nch = in.read(buff, 0, buff.length)) != -1)  				n.getTextArea().append(new String(buff, 0, nch));  				//to get more text from the file if the array wasn't full  				fileContent = n.getTextArea().getText();  			}  			catch(FileNotFoundException x){}  			catch(IOException ioe){  				System.err.println("I/O Error on Open");  			}  		}  		n.setTitle(jfc.getSelectedFile().getName() + " - JAVAï¿½ Notepad");  	}</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">BodyElement</data>
        </node>
        <node id="6">
            <data key="Label">		Id: About</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">FSTTerminalNodeElement</data>
        </node>
        <node id="60">
            <data key="Label">		MethodDecl: save({FormalParametersInternal})</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">FSTTerminalNodeElement</data>
        </node>
        <node id="61">
            <data key="Label">		MethodDecl: save({FormalParametersInternal}) Body: public void save(){  		//initializing 'fout' to write all text in the selected file  		try{  			PrintWriter fout = new PrintWriter(new FileWriter(jfc.getSelectedFile()));  			//for getting the text from the text area  			fileContent = n.getTextArea().getText();  			//using StringTokenizer for the 'fileContent' String  			StringTokenizer st=new StringTokenizer(fileContent,System.getProperty("line.separator"));  			while(st.hasMoreTokens()){  				//write the string (text) in the selected file  				fout.println(st.nextToken());  			}  			//closing fout  			fout.close();  		}  		catch(IOException ioe){  			System.err.println("I/O Error on Save");  		}  		n.setTitle(jfc.getSelectedFile().getName() + " - JAVAï¿½ Notepad");  	}</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">BodyElement</data>
        </node>
        <node id="62">
            <data key="Label">		MethodDecl: saveAs({FormalParametersInternal})</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">FSTTerminalNodeElement</data>
        </node>
        <node id="63">
            <data key="Label">		MethodDecl: saveAs({FormalParametersInternal}) Body: public void saveAs(){  		//filter the kind of files, we want only TXT file  		filter.addExtension("txt");  		//to set a description for the file (TXT)  		filter.setDescription("TXT Documents");  		//setting the FileFilter to JFileChooser  		jfc.setFileFilter(filter);  		returnVal = jfc.showSaveDialog(n);  		if(returnVal == JFileChooser.APPROVE_OPTION){  			//initializing the PrintWriter, to save the text in a new file  			PrintWriter fout = null;  			try{  				fout = new PrintWriter(new FileWriter(jfc.getSelectedFile() + ".txt"));  				//getting the text from the text area  				fileContent = n.getTextArea().getText();  				//getting the name of the selected file  				fileName = jfc.getSelectedFile().getPath();  				//using StringTokenizer for the 'fileContent' String  				StringTokenizer st=new StringTokenizer(fileContent,System.getProperty("line.separator"));  				while(st.hasMoreTokens()){  					//write the string (text) in the selected file   					fout.println(st.nextToken());  				}  				//closing 'fout'  				fout.close();  			}  			catch(IOException ioe){  				System.err.println ("I/O Error on Save");  			}  		}  		n.setTitle(jfc.getSelectedFile().getName() + " - JAVAï¿½ Notepad");  	}</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">BodyElement</data>
        </node>
        <node id="64">
            <data key="Label">CompilationUnit: Center</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">FSTNonTerminalNodeElement</data>
        </node>
        <node id="65">
            <data key="Label">	ClassDeclaration: Center</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">FSTNonTerminalNodeElement</data>
        </node>
        <node id="66">
            <data key="Label">		Modifiers: </data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">FSTTerminalNodeElement</data>
        </node>
        <node id="67">
            <data key="Label">		Modifiers:  Body: public</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">BodyElement</data>
        </node>
        <node id="68">
            <data key="Label">		ClassOrInterface1: </data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">FSTTerminalNodeElement</data>
        </node>
        <node id="69">
            <data key="Label">		ClassOrInterface1:  Body: class</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">BodyElement</data>
        </node>
        <node id="7">
            <data key="Label">		Id: About Body: About</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">BodyElement</data>
        </node>
        <node id="70">
            <data key="Label">		Id: Center</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">FSTTerminalNodeElement</data>
        </node>
        <node id="71">
            <data key="Label">		Id: Center Body: Center</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">BodyElement</data>
        </node>
        <node id="72">
            <data key="Label">		FieldDecl: n</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">FSTTerminalNodeElement</data>
        </node>
        <node id="73">
            <data key="Label">		FieldDecl: n Body: Notepad n;</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">BodyElement</data>
        </node>
        <node id="74">
            <data key="Label">		FieldDecl: f</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">FSTTerminalNodeElement</data>
        </node>
        <node id="75">
            <data key="Label">		FieldDecl: f Body: Fonts f;</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">BodyElement</data>
        </node>
        <node id="76">
            <data key="Label">		ConstructorDecl: Center(Notepad-Notepad)</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">FSTTerminalNodeElement</data>
        </node>
        <node id="77">
            <data key="Label">		ConstructorDecl: Center(Notepad-Notepad) Body: public Center(Notepad n){          this.n = n;      }</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">BodyElement</data>
        </node>
        <node id="78">
            <data key="Label">		ConstructorDecl: Center(Fonts-Fonts)</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">FSTTerminalNodeElement</data>
        </node>
        <node id="79">
            <data key="Label">		ConstructorDecl: Center(Fonts-Fonts) Body: public Center(Fonts f){          this.f = f;      }</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">BodyElement</data>
        </node>
        <node id="8">
            <data key="Label">		ExtendsList: </data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">FSTTerminalNodeElement</data>
        </node>
        <node id="80">
            <data key="Label">		MethodDecl: nCenter({FormalParametersInternal})</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">FSTTerminalNodeElement</data>
        </node>
        <node id="81">
            <data key="Label">		MethodDecl: nCenter({FormalParametersInternal}) Body: public void nCenter(){          //Centering the window          Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();          n.setLocation((screenSize.width-n.getWidth())/2,(screenSize.height-n.getHeight())/2);      }</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">BodyElement</data>
        </node>
        <node id="82">
            <data key="Label">		MethodDecl: fCenter({FormalParametersInternal})</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">FSTTerminalNodeElement</data>
        </node>
        <node id="83">
            <data key="Label">		MethodDecl: fCenter({FormalParametersInternal}) Body: public void fCenter(){          //Centering the window          Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();          f.setLocation((screenSize.width-f.getWidth())/2,(screenSize.height-f.getHeight())/2);      }</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">BodyElement</data>
        </node>
        <node id="84">
            <data key="Label">CompilationUnit: ExampleFileFilter</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">FSTNonTerminalNodeElement</data>
        </node>
        <node id="85">
            <data key="Label">	ClassDeclaration: ExampleFileFilter</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">FSTNonTerminalNodeElement</data>
        </node>
        <node id="86">
            <data key="Label">		Modifiers: </data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">FSTTerminalNodeElement</data>
        </node>
        <node id="87">
            <data key="Label">		Modifiers:  Body: public</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">BodyElement</data>
        </node>
        <node id="88">
            <data key="Label">		ClassOrInterface1: </data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">FSTTerminalNodeElement</data>
        </node>
        <node id="89">
            <data key="Label">		ClassOrInterface1:  Body: class</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">BodyElement</data>
        </node>
        <node id="9">
            <data key="Label">		ExtendsList:  Body: extends JPanel</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">BodyElement</data>
        </node>
        <node id="90">
            <data key="Label">		Id: ExampleFileFilter</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">FSTTerminalNodeElement</data>
        </node>
        <node id="91">
            <data key="Label">		Id: ExampleFileFilter Body: ExampleFileFilter</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">BodyElement</data>
        </node>
        <node id="92">
            <data key="Label">		ExtendsList: </data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">FSTTerminalNodeElement</data>
        </node>
        <node id="93">
            <data key="Label">		ExtendsList:  Body: extends FileFilter</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">BodyElement</data>
        </node>
        <node id="94">
            <data key="Label">		FieldDecl: filters</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">FSTTerminalNodeElement</data>
        </node>
        <node id="95">
            <data key="Label">		FieldDecl: filters Body: private Hashtable&lt;String, ExampleFileFilter&gt; filters = null;</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">BodyElement</data>
        </node>
        <node id="96">
            <data key="Label">		FieldDecl: description</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">FSTTerminalNodeElement</data>
        </node>
        <node id="97">
            <data key="Label">		FieldDecl: description Body: private String description = null;</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">BodyElement</data>
        </node>
        <node id="98">
            <data key="Label">		FieldDecl: fullDescription</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">FSTTerminalNodeElement</data>
        </node>
        <node id="99">
            <data key="Label">		FieldDecl: fullDescription Body: private String fullDescription = null;</data>
            <data key="Notepad_1">yes</data>
            <data key="Notepad_2">yes</data>
            <data key="Notepad_3">yes</data>
            <data key="Notepad_4">yes</data>
            <data key="Notepad_5">yes</data>
            <data key="Notepad_6">yes</data>
            <data key="Notepad_7">yes</data>
            <data key="Notepad_8">yes</data>
            <data key="block">Block 00</data>
            <data key="elementType">BodyElement</data>
        </node>
        <edge id="1-0-parentNode" source="1" target="0" label="1-0">
            <data key="Label">parentNode</data>
            <data key="dependencyType">parentNode</data>
        </edge>
        <edge id="10-1-parentNode" source="10" target="1" label="10-1">
            <data key="Label">parentNode</data>
            <data key="dependencyType">parentNode</data>
        </edge>
        <edge id="100-85-parentNode" source="100" target="85" label="100-85">
            <data key="Label">parentNode</data>
            <data key="dependencyType">parentNode</data>
        </edge>
        <edge id="101-100-body" source="101" target="100" label="101-100">
            <data key="Label">body</data>
            <data key="dependencyType">body</data>
        </edge>
        <edge id="102-85-parentNode" source="102" target="85" label="102-85">
            <data key="Label">parentNode</data>
            <data key="dependencyType">parentNode</data>
        </edge>
        <edge id="103-102-body" source="103" target="102" label="103-102">
            <data key="Label">body</data>
            <data key="dependencyType">body</data>
        </edge>
        <edge id="104-85-parentNode" source="104" target="85" label="104-85">
            <data key="Label">parentNode</data>
            <data key="dependencyType">parentNode</data>
        </edge>
        <edge id="105-104-body" source="105" target="104" label="105-104">
            <data key="Label">body</data>
            <data key="dependencyType">body</data>
        </edge>
        <edge id="106-85-parentNode" source="106" target="85" label="106-85">
            <data key="Label">parentNode</data>
            <data key="dependencyType">parentNode</data>
        </edge>
        <edge id="107-106-body" source="107" target="106" label="107-106">
            <data key="Label">body</data>
            <data key="dependencyType">body</data>
        </edge>
        <edge id="108-85-parentNode" source="108" target="85" label="108-85">
            <data key="Label">parentNode</data>
            <data key="dependencyType">parentNode</data>
        </edge>
        <edge id="109-108-body" source="109" target="108" label="109-108">
            <data key="Label">body</data>
            <data key="dependencyType">body</data>
        </edge>
        <edge id="11-10-body" source="11" target="10" label="11-10">
            <data key="Label">body</data>
            <data key="dependencyType">body</data>
        </edge>
        <edge id="110-85-parentNode" source="110" target="85" label="110-85">
            <data key="Label">parentNode</data>
            <data key="dependencyType">parentNode</data>
        </edge>
        <edge id="111-110-body" source="111" target="110" label="111-110">
            <data key="Label">body</data>
            <data key="dependencyType">body</data>
        </edge>
        <edge id="112-85-parentNode" source="112" target="85" label="112-85">
            <data key="Label">parentNode</data>
            <data key="dependencyType">parentNode</data>
        </edge>
        <edge id="113-112-body" source="113" target="112" label="113-112">
            <data key="Label">body</data>
            <data key="dependencyType">body</data>
        </edge>
        <edge id="114-85-parentNode" source="114" target="85" label="114-85">
            <data key="Label">parentNode</data>
            <data key="dependencyType">parentNode</data>
        </edge>
        <edge id="115-114-body" source="115" target="114" label="115-114">
            <data key="Label">body</data>
            <data key="dependencyType">body</data>
        </edge>
        <edge id="116-85-parentNode" source="116" target="85" label="116-85">
            <data key="Label">parentNode</data>
            <data key="dependencyType">parentNode</data>
        </edge>
        <edge id="117-116-body" source="117" target="116" label="117-116">
            <data key="Label">body</data>
            <data key="dependencyType">body</data>
        </edge>
        <edge id="118-85-parentNode" source="118" target="85" label="118-85">
            <data key="Label">parentNode</data>
            <data key="dependencyType">parentNode</data>
        </edge>
        <edge id="119-118-body" source="119" target="118" label="119-118">
            <data key="Label">body</data>
            <data key="dependencyType">body</data>
        </edge>
        <edge id="12-1-parentNode" source="12" target="1" label="12-1">
            <data key="Label">parentNode</data>
            <data key="dependencyType">parentNode</data>
        </edge>
        <edge id="120-85-parentNode" source="120" target="85" label="120-85">
            <data key="Label">parentNode</data>
            <data key="dependencyType">parentNode</data>
        </edge>
        <edge id="121-120-body" source="121" target="120" label="121-120">
            <data key="Label">body</data>
            <data key="dependencyType">body</data>
        </edge>
        <edge id="122-85-parentNode" source="122" target="85" label="122-85">
            <data key="Label">parentNode</data>
            <data key="dependencyType">parentNode</data>
        </edge>
        <edge id="123-122-body" source="123" target="122" label="123-122">
            <data key="Label">body</data>
            <data key="dependencyType">body</data>
        </edge>
        <edge id="124-85-parentNode" source="124" target="85" label="124-85">
            <data key="Label">parentNode</data>
            <data key="dependencyType">parentNode</data>
        </edge>
        <edge id="125-124-body" source="125" target="124" label="125-124">
            <data key="Label">body</data>
            <data key="dependencyType">body</data>
        </edge>
        <edge id="127-126-parentNode" source="127" target="126" label="127-126">
            <data key="Label">parentNode</data>
            <data key="dependencyType">parentNode</data>
        </edge>
        <edge id="128-127-parentNode" source="128" target="127" label="128-127">
            <data key="Label">parentNode</data>
            <data key="dependencyType">parentNode</data>
        </edge>
        <edge id="129-128-body" source="129" target="128" label="129-128">
            <data key="Label">body</data>
            <data key="dependencyType">body</data>
        </edge>
        <edge id="13-12-body" source="13" target="12" label="13-12">
            <data key="Label">body</data>
            <data key="dependencyType">body</data>
        </edge>
        <edge id="130-127-parentNode" source="130" target="127" label="130-127">
            <data key="Label">parentNode</data>
            <data key="dependencyType">parentNode</data>
        </edge>
        <edge id="131-130-body" source="131" target="130" label="131-130">
            <data key="Label">body</data>
            <data key="dependencyType">body</data>
        </edge>
        <edge id="132-127-parentNode" source="132" target="127" label="132-127">
            <data key="Label">parentNode</data>
            <data key="dependencyType">parentNode</data>
        </edge>
        <edge id="133-132-body" source="133" target="132" label="133-132">
            <data key="Label">body</data>
            <data key="dependencyType">body</data>
        </edge>
        <edge id="134-127-parentNode" source="134" target="127" label="134-127">
            <data key="Label">parentNode</data>
            <data key="dependencyType">parentNode</data>
        </edge>
        <edge id="135-134-body" source="135" target="134" label="135-134">
            <data key="Label">body</data>
            <data key="dependencyType">body</data>
        </edge>
        <edge id="136-127-parentNode" source="136" target="127" label="136-127">
            <data key="Label">parentNode</data>
            <data key="dependencyType">parentNode</data>
        </edge>
        <edge id="137-136-body" source="137" target="136" label="137-136">
            <data key="Label">body</data>
            <data key="dependencyType">body</data>
        </edge>
        <edge id="138-127-parentNode" source="138" target="127" label="138-127">
            <data key="Label">parentNode</data>
            <data key="dependencyType">parentNode</data>
        </edge>
        <edge id="139-138-body" source="139" target="138" label="139-138">
            <data key="Label">body</data>
            <data key="dependencyType">body</data>
        </edge>
        <edge id="140-127-parentNode" source="140" target="127" label="140-127">
            <data key="Label">parentNode</data>
            <data key="dependencyType">parentNode</data>
        </edge>
        <edge id="141-140-body" source="141" target="140" label="141-140">
            <data key="Label">body</data>
            <data key="dependencyType">body</data>
        </edge>
        <edge id="142-127-parentNode" source="142" target="127" label="142-127">
            <data key="Label">parentNode</data>
            <data key="dependencyType">parentNode</data>
        </edge>
        <edge id="143-142-body" source="143" target="142" label="143-142">
            <data key="Label">body</data>
            <data key="dependencyType">body</data>
        </edge>
        <edge id="144-127-parentNode" source="144" target="127" label="144-127">
            <data key="Label">parentNode</data>
            <data key="dependencyType">parentNode</data>
        </edge>
        <edge id="145-144-body" source="145" target="144" label="145-144">
            <data key="Label">body</data>
            <data key="dependencyType">body</data>
        </edge>
        <edge id="146-127-parentNode" source="146" target="127" label="146-127">
            <data key="Label">parentNode</data>
            <data key="dependencyType">parentNode</data>
        </edge>
        <edge id="147-146-body" source="147" target="146" label="147-146">
            <data key="Label">body</data>
            <data key="dependencyType">body</data>
        </edge>
        <edge id="148-127-parentNode" source="148" target="127" label="148-127">
            <data key="Label">parentNode</data>
            <data key="dependencyType">parentNode</data>
        </edge>
        <edge id="149-148-body" source="149" target="148" label="149-148">
            <data key="Label">body</data>
            <data key="dependencyType">body</data>
        </edge>
        <edge id="15-14-parentNode" source="15" target="14" label="15-14">
            <data key="Label">parentNode</data>
            <data key="dependencyType">parentNode</data>
        </edge>
        <edge id="150-127-parentNode" source="150" target="127" label="150-127">
            <data key="Label">parentNode</data>
            <data key="dependencyType">parentNode</data>
        </edge>
        <edge id="151-150-body" source="151" target="150" label="151-150">
            <data key="Label">body</data>
            <data key="dependencyType">body</data>
        </edge>
        <edge id="152-127-parentNode" source="152" target="127" label="152-127">
            <data key="Label">parentNode</data>
            <data key="dependencyType">parentNode</data>
        </edge>
        <edge id="153-152-body" source="153" target="152" label="153-152">
            <data key="Label">body</data>
            <data key="dependencyType">body</data>
        </edge>
        <edge id="154-127-parentNode" source="154" target="127" label="154-127">
            <data key="Label">parentNode</data>
            <data key="dependencyType">parentNode</data>
        </edge>
        <edge id="155-154-body" source="155" target="154" label="155-154">
            <data key="Label">body</data>
            <data key="dependencyType">body</data>
        </edge>
        <edge id="156-127-parentNode" source="156" target="127" label="156-127">
            <data key="Label">parentNode</data>
            <data key="dependencyType">parentNode</data>
        </edge>
        <edge id="157-156-body" source="157" target="156" label="157-156">
            <data key="Label">body</data>
            <data key="dependencyType">body</data>
        </edge>
        <edge id="158-127-parentNode" source="158" target="127" label="158-127">
            <data key="Label">parentNode</data>
            <data key="dependencyType">parentNode</data>
        </edge>
        <edge id="159-158-body" source="159" target="158" label="159-158">
            <data key="Label">body</data>
            <data key="dependencyType">body</data>
        </edge>
        <edge id="16-15-parentNode" source="16" target="15" label="16-15">
            <data key="Label">parentNode</data>
            <data key="dependencyType">parentNode</data>
        </edge>
        <edge id="160-127-parentNode" source="160" target="127" label="160-127">
            <data key="Label">parentNode</data>
            <data key="dependencyType">parentNode</data>
        </edge>
        <edge id="161-160-body" source="161" target="160" label="161-160">
            <data key="Label">body</data>
            <data key="dependencyType">body</data>
        </edge>
        <edge id="162-127-parentNode" source="162" target="127" label="162-127">
            <data key="Label">parentNode</data>
            <data key="dependencyType">parentNode</data>
        </edge>
        <edge id="163-162-body" source="163" target="162" label="163-162">
            <data key="Label">body</data>
            <data key="dependencyType">body</data>
        </edge>
        <edge id="164-127-parentNode" source="164" target="127" label="164-127">
            <data key="Label">parentNode</data>
            <data key="dependencyType">parentNode</data>
        </edge>
        <edge id="165-164-body" source="165" target="164" label="165-164">
            <data key="Label">body</data>
            <data key="dependencyType">body</data>
        </edge>
        <edge id="166-127-parentNode" source="166" target="127" label="166-127">
            <data key="Label">parentNode</data>
            <data key="dependencyType">parentNode</data>
        </edge>
        <edge id="167-166-body" source="167" target="166" label="167-166">
            <data key="Label">body</data>
            <data key="dependencyType">body</data>
        </edge>
        <edge id="168-127-parentNode" source="168" target="127" label="168-127">
            <data key="Label">parentNode</data>
            <data key="dependencyType">parentNode</data>
        </edge>
        <edge id="169-168-body" source="169" target="168" label="169-168">
            <data key="Label">body</data>
            <data key="dependencyType">body</data>
        </edge>
        <edge id="17-16-body" source="17" target="16" label="17-16">
            <data key="Label">body</data>
            <data key="dependencyType">body</data>
        </edge>
        <edge id="170-127-parentNode" source="170" target="127" label="170-127">
            <data key="Label">parentNode</data>
            <data key="dependencyType">parentNode</data>
        </edge>
        <edge id="171-170-body" source="171" target="170" label="171-170">
            <data key="Label">body</data>
            <data key="dependencyType">body</data>
        </edge>
        <edge id="172-127-parentNode" source="172" target="127" label="172-127">
            <data key="Label">parentNode</data>
            <data key="dependencyType">parentNode</data>
        </edge>
        <edge id="173-172-body" source="173" target="172" label="173-172">
            <data key="Label">body</data>
            <data key="dependencyType">body</data>
        </edge>
        <edge id="174-127-parentNode" source="174" target="127" label="174-127">
            <data key="Label">parentNode</data>
            <data key="dependencyType">parentNode</data>
        </edge>
        <edge id="175-174-body" source="175" target="174" label="175-174">
            <data key="Label">body</data>
            <data key="dependencyType">body</data>
        </edge>
        <edge id="177-176-parentNode" source="177" target="176" label="177-176">
            <data key="Label">parentNode</data>
            <data key="dependencyType">parentNode</data>
        </edge>
        <edge id="178-177-parentNode" source="178" target="177" label="178-177">
            <data key="Label">parentNode</data>
            <data key="dependencyType">parentNode</data>
        </edge>
        <edge id="179-178-body" source="179" target="178" label="179-178">
            <data key="Label">body</data>
            <data key="dependencyType">body</data>
        </edge>
        <edge id="18-15-parentNode" source="18" target="15" label="18-15">
            <data key="Label">parentNode</data>
            <data key="dependencyType">parentNode</data>
        </edge>
        <edge id="180-177-parentNode" source="180" target="177" label="180-177">
            <data key="Label">parentNode</data>
            <data key="dependencyType">parentNode</data>
        </edge>
        <edge id="181-180-body" source="181" target="180" label="181-180">
            <data key="Label">body</data>
            <data key="dependencyType">body</data>
        </edge>
        <edge id="182-177-parentNode" source="182" target="177" label="182-177">
            <data key="Label">parentNode</data>
            <data key="dependencyType">parentNode</data>
        </edge>
        <edge id="183-182-body" source="183" target="182" label="183-182">
            <data key="Label">body</data>
            <data key="dependencyType">body</data>
        </edge>
        <edge id="184-177-parentNode" source="184" target="177" label="184-177">
            <data key="Label">parentNode</data>
            <data key="dependencyType">parentNode</data>
        </edge>
        <edge id="185-184-body" source="185" target="184" label="185-184">
            <data key="Label">body</data>
            <data key="dependencyType">body</data>
        </edge>
        <edge id="186-177-parentNode" source="186" target="177" label="186-177">
            <data key="Label">parentNode</data>
            <data key="dependencyType">parentNode</data>
        </edge>
        <edge id="187-186-body" source="187" target="186" label="187-186">
            <data key="Label">body</data>
            <data key="dependencyType">body</data>
        </edge>
        <edge id="188-177-parentNode" source="188" target="177" label="188-177">
            <data key="Label">parentNode</data>
            <data key="dependencyType">parentNode</data>
        </edge>
        <edge id="189-188-body" source="189" target="188" label="189-188">
            <data key="Label">body</data>
            <data key="dependencyType">body</data>
        </edge>
        <edge id="19-18-body" source="19" target="18" label="19-18">
            <data key="Label">body</data>
            <data key="dependencyType">body</data>
        </edge>
        <edge id="190-177-parentNode" source="190" target="177" label="190-177">
            <data key="Label">parentNode</data>
            <data key="dependencyType">parentNode</data>
        </edge>
        <edge id="191-190-body" source="191" target="190" label="191-190">
            <data key="Label">body</data>
            <data key="dependencyType">body</data>
        </edge>
        <edge id="192-177-parentNode" source="192" target="177" label="192-177">
            <data key="Label">parentNode</data>
            <data key="dependencyType">parentNode</data>
        </edge>
        <edge id="193-192-body" source="193" target="192" label="193-192">
            <data key="Label">body</data>
            <data key="dependencyType">body</data>
        </edge>
        <edge id="194-177-parentNode" source="194" target="177" label="194-177">
            <data key="Label">parentNode</data>
            <data key="dependencyType">parentNode</data>
        </edge>
        <edge id="195-194-body" source="195" target="194" label="195-194">
            <data key="Label">body</data>
            <data key="dependencyType">body</data>
        </edge>
        <edge id="196-177-parentNode" source="196" target="177" label="196-177">
            <data key="Label">parentNode</data>
            <data key="dependencyType">parentNode</data>
        </edge>
        <edge id="197-196-body" source="197" target="196" label="197-196">
            <data key="Label">body</data>
            <data key="dependencyType">body</data>
        </edge>
        <edge id="198-177-parentNode" source="198" target="177" label="198-177">
            <data key="Label">parentNode</data>
            <data key="dependencyType">parentNode</data>
        </edge>
        <edge id="199-198-body" source="199" target="198" label="199-198">
            <data key="Label">body</data>
            <data key="dependencyType">body</data>
        </edge>
        <edge id="2-1-parentNode" source="2" target="1" label="2-1">
            <data key="Label">parentNode</data>
            <data key="dependencyType">parentNode</data>
        </edge>
        <edge id="20-15-parentNode" source="20" target="15" label="20-15">
            <data key="Label">parentNode</data>
            <data key="dependencyType">parentNode</data>
        </edge>
        <edge id="200-177-parentNode" source="200" target="177" label="200-177">
            <data key="Label">parentNode</data>
            <data key="dependencyType">parentNode</data>
        </edge>
        <edge id="201-200-body" source="201" target="200" label="201-200">
            <data key="Label">body</data>
            <data key="dependencyType">body</data>
        </edge>
        <edge id="202-177-parentNode" source="202" target="177" label="202-177">
            <data key="Label">parentNode</data>
            <data key="dependencyType">parentNode</data>
        </edge>
        <edge id="203-202-body" source="203" target="202" label="203-202">
            <data key="Label">body</data>
            <data key="dependencyType">body</data>
        </edge>
        <edge id="204-177-parentNode" source="204" target="177" label="204-177">
            <data key="Label">parentNode</data>
            <data key="dependencyType">parentNode</data>
        </edge>
        <edge id="205-204-body" source="205" target="204" label="205-204">
            <data key="Label">body</data>
            <data key="dependencyType">body</data>
        </edge>
        <edge id="206-177-parentNode" source="206" target="177" label="206-177">
            <data key="Label">parentNode</data>
            <data key="dependencyType">parentNode</data>
        </edge>
        <edge id="207-206-body" source="207" target="206" label="207-206">
            <data key="Label">body</data>
            <data key="dependencyType">body</data>
        </edge>
        <edge id="208-177-parentNode" source="208" target="177" label="208-177">
            <data key="Label">parentNode</data>
            <data key="dependencyType">parentNode</data>
        </edge>
        <edge id="209-208-body" source="209" target="208" label="209-208">
            <data key="Label">body</data>
            <data key="dependencyType">body</data>
        </edge>
        <edge id="21-20-body" source="21" target="20" label="21-20">
            <data key="Label">body</data>
            <data key="dependencyType">body</data>
        </edge>
        <edge id="210-177-parentNode" source="210" target="177" label="210-177">
            <data key="Label">parentNode</data>
            <data key="dependencyType">parentNode</data>
        </edge>
        <edge id="211-177-parentNode" source="211" target="177" label="211-177">
            <data key="Label">parentNode</data>
            <data key="dependencyType">parentNode</data>
        </edge>
        <edge id="212-211-body" source="212" target="211" label="212-211">
            <data key="Label">body</data>
            <data key="dependencyType">body</data>
        </edge>
        <edge id="214-213-parentNode" source="214" target="213" label="214-213">
            <data key="Label">parentNode</data>
            <data key="dependencyType">parentNode</data>
        </edge>
        <edge id="215-214-parentNode" source="215" target="214" label="215-214">
            <data key="Label">parentNode</data>
            <data key="dependencyType">parentNode</data>
        </edge>
        <edge id="216-215-body" source="216" target="215" label="216-215">
            <data key="Label">body</data>
            <data key="dependencyType">body</data>
        </edge>
        <edge id="217-214-parentNode" source="217" target="214" label="217-214">
            <data key="Label">parentNode</data>
            <data key="dependencyType">parentNode</data>
        </edge>
        <edge id="218-217-body" source="218" target="217" label="218-217">
            <data key="Label">body</data>
            <data key="dependencyType">body</data>
        </edge>
        <edge id="219-214-parentNode" source="219" target="214" label="219-214">
            <data key="Label">parentNode</data>
            <data key="dependencyType">parentNode</data>
        </edge>
        <edge id="22-15-parentNode" source="22" target="15" label="22-15">
            <data key="Label">parentNode</data>
            <data key="dependencyType">parentNode</data>
        </edge>
        <edge id="220-219-body" source="220" target="219" label="220-219">
            <data key="Label">body</data>
            <data key="dependencyType">body</data>
        </edge>
        <edge id="221-214-parentNode" source="221" target="214" label="221-214">
            <data key="Label">parentNode</data>
            <data key="dependencyType">parentNode</data>
        </edge>
        <edge id="222-221-body" source="222" target="221" label="222-221">
            <data key="Label">body</data>
            <data key="dependencyType">body</data>
        </edge>
        <edge id="223-214-parentNode" source="223" target="214" label="223-214">
            <data key="Label">parentNode</data>
            <data key="dependencyType">parentNode</data>
        </edge>
        <edge id="224-223-body" source="224" target="223" label="224-223">
            <data key="Label">body</data>
            <data key="dependencyType">body</data>
        </edge>
        <edge id="225-214-parentNode" source="225" target="214" label="225-214">
            <data key="Label">parentNode</data>
            <data key="dependencyType">parentNode</data>
        </edge>
        <edge id="226-225-body" source="226" target="225" label="226-225">
            <data key="Label">body</data>
            <data key="dependencyType">body</data>
        </edge>
        <edge id="227-214-parentNode" source="227" target="214" label="227-214">
            <data key="Label">parentNode</data>
            <data key="dependencyType">parentNode</data>
        </edge>
        <edge id="228-227-body" source="228" target="227" label="228-227">
            <data key="Label">body</data>
            <data key="dependencyType">body</data>
        </edge>
        <edge id="229-214-parentNode" source="229" target="214" label="229-214">
            <data key="Label">parentNode</data>
            <data key="dependencyType">parentNode</data>
        </edge>
        <edge id="23-22-body" source="23" target="22" label="23-22">
            <data key="Label">body</data>
            <data key="dependencyType">body</data>
        </edge>
        <edge id="230-229-body" source="230" target="229" label="230-229">
            <data key="Label">body</data>
            <data key="dependencyType">body</data>
        </edge>
        <edge id="231-214-parentNode" source="231" target="214" label="231-214">
            <data key="Label">parentNode</data>
            <data key="dependencyType">parentNode</data>
        </edge>
        <edge id="232-231-body" source="232" target="231" label="232-231">
            <data key="Label">body</data>
            <data key="dependencyType">body</data>
        </edge>
        <edge id="233-214-parentNode" source="233" target="214" label="233-214">
            <data key="Label">parentNode</data>
            <data key="dependencyType">parentNode</data>
        </edge>
        <edge id="234-233-body" source="234" target="233" label="234-233">
            <data key="Label">body</data>
            <data key="dependencyType">body</data>
        </edge>
        <edge id="235-214-parentNode" source="235" target="214" label="235-214">
            <data key="Label">parentNode</data>
            <data key="dependencyType">parentNode</data>
        </edge>
        <edge id="236-235-body" source="236" target="235" label="236-235">
            <data key="Label">body</data>
            <data key="dependencyType">body</data>
        </edge>
        <edge id="237-15-parentNode" source="237" target="15" label="237-15">
            <data key="Label">parentNode</data>
            <data key="dependencyType">parentNode</data>
        </edge>
        <edge id="238-237-body" source="238" target="237" label="238-237">
            <data key="Label">body</data>
            <data key="dependencyType">body</data>
        </edge>
        <edge id="239-15-parentNode" source="239" target="15" label="239-15">
            <data key="Label">parentNode</data>
            <data key="dependencyType">parentNode</data>
        </edge>
        <edge id="24-15-parentNode" source="24" target="15" label="24-15">
            <data key="Label">parentNode</data>
            <data key="dependencyType">parentNode</data>
        </edge>
        <edge id="240-239-body" source="240" target="239" label="240-239">
            <data key="Label">body</data>
            <data key="dependencyType">body</data>
        </edge>
        <edge id="241-15-parentNode" source="241" target="15" label="241-15">
            <data key="Label">parentNode</data>
            <data key="dependencyType">parentNode</data>
        </edge>
        <edge id="242-241-body" source="242" target="241" label="242-241">
            <data key="Label">body</data>
            <data key="dependencyType">body</data>
        </edge>
        <edge id="243-177-parentNode" source="243" target="177" label="243-177">
            <data key="Label">parentNode</data>
            <data key="dependencyType">parentNode</data>
        </edge>
        <edge id="244-243-body" source="244" target="243" label="244-243">
            <data key="Label">body</data>
            <data key="dependencyType">body</data>
        </edge>
        <edge id="245-15-parentNode" source="245" target="15" label="245-15">
            <data key="Label">parentNode</data>
            <data key="dependencyType">parentNode</data>
        </edge>
        <edge id="246-245-body" source="246" target="245" label="246-245">
            <data key="Label">body</data>
            <data key="dependencyType">body</data>
        </edge>
        <edge id="247-15-parentNode" source="247" target="15" label="247-15">
            <data key="Label">parentNode</data>
            <data key="dependencyType">parentNode</data>
        </edge>
        <edge id="248-247-body" source="248" target="247" label="248-247">
            <data key="Label">body</data>
            <data key="dependencyType">body</data>
        </edge>
        <edge id="249-15-parentNode" source="249" target="15" label="249-15">
            <data key="Label">parentNode</data>
            <data key="dependencyType">parentNode</data>
        </edge>
        <edge id="25-24-body" source="25" target="24" label="25-24">
            <data key="Label">body</data>
            <data key="dependencyType">body</data>
        </edge>
        <edge id="250-249-body" source="250" target="249" label="250-249">
            <data key="Label">body</data>
            <data key="dependencyType">body</data>
        </edge>
        <edge id="251-177-parentNode" source="251" target="177" label="251-177">
            <data key="Label">parentNode</data>
            <data key="dependencyType">parentNode</data>
        </edge>
        <edge id="252-251-body" source="252" target="251" label="252-251">
            <data key="Label">body</data>
            <data key="dependencyType">body</data>
        </edge>
        <edge id="253-177-parentNode" source="253" target="177" label="253-177">
            <data key="Label">parentNode</data>
            <data key="dependencyType">parentNode</data>
        </edge>
        <edge id="254-253-body" source="254" target="253" label="254-253">
            <data key="Label">body</data>
            <data key="dependencyType">body</data>
        </edge>
        <edge id="255-177-parentNode" source="255" target="177" label="255-177">
            <data key="Label">parentNode</data>
            <data key="dependencyType">parentNode</data>
        </edge>
        <edge id="256-255-body" source="256" target="255" label="256-255">
            <data key="Label">body</data>
            <data key="dependencyType">body</data>
        </edge>
        <edge id="257-177-parentNode" source="257" target="177" label="257-177">
            <data key="Label">parentNode</data>
            <data key="dependencyType">parentNode</data>
        </edge>
        <edge id="258-257-body" source="258" target="257" label="258-257">
            <data key="Label">body</data>
            <data key="dependencyType">body</data>
        </edge>
        <edge id="259-177-parentNode" source="259" target="177" label="259-177">
            <data key="Label">parentNode</data>
            <data key="dependencyType">parentNode</data>
        </edge>
        <edge id="26-15-parentNode" source="26" target="15" label="26-15">
            <data key="Label">parentNode</data>
            <data key="dependencyType">parentNode</data>
        </edge>
        <edge id="260-259-body" source="260" target="259" label="260-259">
            <data key="Label">body</data>
            <data key="dependencyType">body</data>
        </edge>
        <edge id="261-177-parentNode" source="261" target="177" label="261-177">
            <data key="Label">parentNode</data>
            <data key="dependencyType">parentNode</data>
        </edge>
        <edge id="262-261-body" source="262" target="261" label="262-261">
            <data key="Label">body</data>
            <data key="dependencyType">body</data>
        </edge>
        <edge id="264-263-parentNode" source="264" target="263" label="264-263">
            <data key="Label">parentNode</data>
            <data key="dependencyType">parentNode</data>
        </edge>
        <edge id="265-264-parentNode" source="265" target="264" label="265-264">
            <data key="Label">parentNode</data>
            <data key="dependencyType">parentNode</data>
        </edge>
        <edge id="266-265-body" source="266" target="265" label="266-265">
            <data key="Label">body</data>
            <data key="dependencyType">body</data>
        </edge>
        <edge id="267-264-parentNode" source="267" target="264" label="267-264">
            <data key="Label">parentNode</data>
            <data key="dependencyType">parentNode</data>
        </edge>
        <edge id="268-267-body" source="268" target="267" label="268-267">
            <data key="Label">body</data>
            <data key="dependencyType">body</data>
        </edge>
        <edge id="269-264-parentNode" source="269" target="264" label="269-264">
            <data key="Label">parentNode</data>
            <data key="dependencyType">parentNode</data>
        </edge>
        <edge id="27-26-body" source="27" target="26" label="27-26">
            <data key="Label">body</data>
            <data key="dependencyType">body</data>
        </edge>
        <edge id="270-269-body" source="270" target="269" label="270-269">
            <data key="Label">body</data>
            <data key="dependencyType">body</data>
        </edge>
        <edge id="271-264-parentNode" source="271" target="264" label="271-264">
            <data key="Label">parentNode</data>
            <data key="dependencyType">parentNode</data>
        </edge>
        <edge id="272-271-body" source="272" target="271" label="272-271">
            <data key="Label">body</data>
            <data key="dependencyType">body</data>
        </edge>
        <edge id="273-264-parentNode" source="273" target="264" label="273-264">
            <data key="Label">parentNode</data>
            <data key="dependencyType">parentNode</data>
        </edge>
        <edge id="274-273-body" source="274" target="273" label="274-273">
            <data key="Label">body</data>
            <data key="dependencyType">body</data>
        </edge>
        <edge id="275-264-parentNode" source="275" target="264" label="275-264">
            <data key="Label">parentNode</data>
            <data key="dependencyType">parentNode</data>
        </edge>
        <edge id="276-275-body" source="276" target="275" label="276-275">
            <data key="Label">body</data>
            <data key="dependencyType">body</data>
        </edge>
        <edge id="277-264-parentNode" source="277" target="264" label="277-264">
            <data key="Label">parentNode</data>
            <data key="dependencyType">parentNode</data>
        </edge>
        <edge id="278-277-body" source="278" target="277" label="278-277">
            <data key="Label">body</data>
            <data key="dependencyType">body</data>
        </edge>
        <edge id="279-264-parentNode" source="279" target="264" label="279-264">
            <data key="Label">parentNode</data>
            <data key="dependencyType">parentNode</data>
        </edge>
        <edge id="28-15-parentNode" source="28" target="15" label="28-15">
            <data key="Label">parentNode</data>
            <data key="dependencyType">parentNode</data>
        </edge>
        <edge id="280-279-body" source="280" target="279" label="280-279">
            <data key="Label">body</data>
            <data key="dependencyType">body</data>
        </edge>
        <edge id="281-264-parentNode" source="281" target="264" label="281-264">
            <data key="Label">parentNode</data>
            <data key="dependencyType">parentNode</data>
        </edge>
        <edge id="282-281-body" source="282" target="281" label="282-281">
            <data key="Label">body</data>
            <data key="dependencyType">body</data>
        </edge>
        <edge id="284-283-parentNode" source="284" target="283" label="284-283">
            <data key="Label">parentNode</data>
            <data key="dependencyType">parentNode</data>
        </edge>
        <edge id="285-284-parentNode" source="285" target="284" label="285-284">
            <data key="Label">parentNode</data>
            <data key="dependencyType">parentNode</data>
        </edge>
        <edge id="286-285-body" source="286" target="285" label="286-285">
            <data key="Label">body</data>
            <data key="dependencyType">body</data>
        </edge>
        <edge id="287-284-parentNode" source="287" target="284" label="287-284">
            <data key="Label">parentNode</data>
            <data key="dependencyType">parentNode</data>
        </edge>
        <edge id="288-287-body" source="288" target="287" label="288-287">
            <data key="Label">body</data>
            <data key="dependencyType">body</data>
        </edge>
        <edge id="289-284-parentNode" source="289" target="284" label="289-284">
            <data key="Label">parentNode</data>
            <data key="dependencyType">parentNode</data>
        </edge>
        <edge id="29-28-body" source="29" target="28" label="29-28">
            <data key="Label">body</data>
            <data key="dependencyType">body</data>
        </edge>
        <edge id="290-289-body" source="290" target="289" label="290-289">
            <data key="Label">body</data>
            <data key="dependencyType">body</data>
        </edge>
        <edge id="291-284-parentNode" source="291" target="284" label="291-284">
            <data key="Label">parentNode</data>
            <data key="dependencyType">parentNode</data>
        </edge>
        <edge id="292-291-body" source="292" target="291" label="292-291">
            <data key="Label">body</data>
            <data key="dependencyType">body</data>
        </edge>
        <edge id="293-284-parentNode" source="293" target="284" label="293-284">
            <data key="Label">parentNode</data>
            <data key="dependencyType">parentNode</data>
        </edge>
        <edge id="294-293-body" source="294" target="293" label="294-293">
            <data key="Label">body</data>
            <data key="dependencyType">body</data>
        </edge>
        <edge id="295-284-parentNode" source="295" target="284" label="295-284">
            <data key="Label">parentNode</data>
            <data key="dependencyType">parentNode</data>
        </edge>
        <edge id="296-295-body" source="296" target="295" label="296-295">
            <data key="Label">body</data>
            <data key="dependencyType">body</data>
        </edge>
        <edge id="297-284-parentNode" source="297" target="284" label="297-284">
            <data key="Label">parentNode</data>
            <data key="dependencyType">parentNode</data>
        </edge>
        <edge id="298-297-body" source="298" target="297" label="298-297">
            <data key="Label">body</data>
            <data key="dependencyType">body</data>
        </edge>
        <edge id="299-284-parentNode" source="299" target="284" label="299-284">
            <data key="Label">parentNode</data>
            <data key="dependencyType">parentNode</data>
        </edge>
        <edge id="3-2-body" source="3" target="2" label="3-2">
            <data key="Label">body</data>
            <data key="dependencyType">body</data>
        </edge>
        <edge id="30-15-parentNode" source="30" target="15" label="30-15">
            <data key="Label">parentNode</data>
            <data key="dependencyType">parentNode</data>
        </edge>
        <edge id="300-299-body" source="300" target="299" label="300-299">
            <data key="Label">body</data>
            <data key="dependencyType">body</data>
        </edge>
        <edge id="301-284-parentNode" source="301" target="284" label="301-284">
            <data key="Label">parentNode</data>
            <data key="dependencyType">parentNode</data>
        </edge>
        <edge id="302-301-body" source="302" target="301" label="302-301">
            <data key="Label">body</data>
            <data key="dependencyType">body</data>
        </edge>
        <edge id="303-210-body" source="303" target="210" label="303-210">
            <data key="Label">body</data>
            <data key="dependencyType">body</data>
        </edge>
        <edge id="304-210-body" source="304" target="210" label="304-210">
            <data key="Label">body</data>
            <data key="dependencyType">body</data>
        </edge>
        <edge id="305-210-body" source="305" target="210" label="305-210">
            <data key="Label">body</data>
            <data key="dependencyType">body</data>
        </edge>
        <edge id="306-210-body" source="306" target="210" label="306-210">
            <data key="Label">body</data>
            <data key="dependencyType">body</data>
        </edge>
        <edge id="307-210-body" source="307" target="210" label="307-210">
            <data key="Label">body</data>
            <data key="dependencyType">body</data>
        </edge>
        <edge id="308-210-body" source="308" target="210" label="308-210">
            <data key="Label">body</data>
            <data key="dependencyType">body</data>
        </edge>
        <edge id="309-210-body" source="309" target="210" label="309-210">
            <data key="Label">body</data>
            <data key="dependencyType">body</data>
        </edge>
        <edge id="31-30-body" source="31" target="30" label="31-30">
            <data key="Label">body</data>
            <data key="dependencyType">body</data>
        </edge>
        <edge id="310-210-body" source="310" target="210" label="310-210">
            <data key="Label">body</data>
            <data key="dependencyType">body</data>
        </edge>
        <edge id="32-15-parentNode" source="32" target="15" label="32-15">
            <data key="Label">parentNode</data>
            <data key="dependencyType">parentNode</data>
        </edge>
        <edge id="33-32-body" source="33" target="32" label="33-32">
            <data key="Label">body</data>
            <data key="dependencyType">body</data>
        </edge>
        <edge id="34-15-parentNode" source="34" target="15" label="34-15">
            <data key="Label">parentNode</data>
            <data key="dependencyType">parentNode</data>
        </edge>
        <edge id="35-34-body" source="35" target="34" label="35-34">
            <data key="Label">body</data>
            <data key="dependencyType">body</data>
        </edge>
        <edge id="36-15-parentNode" source="36" target="15" label="36-15">
            <data key="Label">parentNode</data>
            <data key="dependencyType">parentNode</data>
        </edge>
        <edge id="37-36-body" source="37" target="36" label="37-36">
            <data key="Label">body</data>
            <data key="dependencyType">body</data>
        </edge>
        <edge id="38-15-parentNode" source="38" target="15" label="38-15">
            <data key="Label">parentNode</data>
            <data key="dependencyType">parentNode</data>
        </edge>
        <edge id="39-38-body" source="39" target="38" label="39-38">
            <data key="Label">body</data>
            <data key="dependencyType">body</data>
        </edge>
        <edge id="4-1-parentNode" source="4" target="1" label="4-1">
            <data key="Label">parentNode</data>
            <data key="dependencyType">parentNode</data>
        </edge>
        <edge id="40-15-parentNode" source="40" target="15" label="40-15">
            <data key="Label">parentNode</data>
            <data key="dependencyType">parentNode</data>
        </edge>
        <edge id="41-40-body" source="41" target="40" label="41-40">
            <data key="Label">body</data>
            <data key="dependencyType">body</data>
        </edge>
        <edge id="42-15-parentNode" source="42" target="15" label="42-15">
            <data key="Label">parentNode</data>
            <data key="dependencyType">parentNode</data>
        </edge>
        <edge id="43-42-body" source="43" target="42" label="43-42">
            <data key="Label">body</data>
            <data key="dependencyType">body</data>
        </edge>
        <edge id="44-15-parentNode" source="44" target="15" label="44-15">
            <data key="Label">parentNode</data>
            <data key="dependencyType">parentNode</data>
        </edge>
        <edge id="45-44-body" source="45" target="44" label="45-44">
            <data key="Label">body</data>
            <data key="dependencyType">body</data>
        </edge>
        <edge id="46-15-parentNode" source="46" target="15" label="46-15">
            <data key="Label">parentNode</data>
            <data key="dependencyType">parentNode</data>
        </edge>
        <edge id="47-46-body" source="47" target="46" label="47-46">
            <data key="Label">body</data>
            <data key="dependencyType">body</data>
        </edge>
        <edge id="48-15-parentNode" source="48" target="15" label="48-15">
            <data key="Label">parentNode</data>
            <data key="dependencyType">parentNode</data>
        </edge>
        <edge id="49-48-body" source="49" target="48" label="49-48">
            <data key="Label">body</data>
            <data key="dependencyType">body</data>
        </edge>
        <edge id="5-4-body" source="5" target="4" label="5-4">
            <data key="Label">body</data>
            <data key="dependencyType">body</data>
        </edge>
        <edge id="50-15-parentNode" source="50" target="15" label="50-15">
            <data key="Label">parentNode</data>
            <data key="dependencyType">parentNode</data>
        </edge>
        <edge id="51-50-body" source="51" target="50" label="51-50">
            <data key="Label">body</data>
            <data key="dependencyType">body</data>
        </edge>
        <edge id="52-15-parentNode" source="52" target="15" label="52-15">
            <data key="Label">parentNode</data>
            <data key="dependencyType">parentNode</data>
        </edge>
        <edge id="53-52-body" source="53" target="52" label="53-52">
            <data key="Label">body</data>
            <data key="dependencyType">body</data>
        </edge>
        <edge id="54-15-parentNode" source="54" target="15" label="54-15">
            <data key="Label">parentNode</data>
            <data key="dependencyType">parentNode</data>
        </edge>
        <edge id="55-54-body" source="55" target="54" label="55-54">
            <data key="Label">body</data>
            <data key="dependencyType">body</data>
        </edge>
        <edge id="56-15-parentNode" source="56" target="15" label="56-15">
            <data key="Label">parentNode</data>
            <data key="dependencyType">parentNode</data>
        </edge>
        <edge id="57-56-body" source="57" target="56" label="57-56">
            <data key="Label">body</data>
            <data key="dependencyType">body</data>
        </edge>
        <edge id="58-15-parentNode" source="58" target="15" label="58-15">
            <data key="Label">parentNode</data>
            <data key="dependencyType">parentNode</data>
        </edge>
        <edge id="59-58-body" source="59" target="58" label="59-58">
            <data key="Label">body</data>
            <data key="dependencyType">body</data>
        </edge>
        <edge id="6-1-parentNode" source="6" target="1" label="6-1">
            <data key="Label">parentNode</data>
            <data key="dependencyType">parentNode</data>
        </edge>
        <edge id="60-15-parentNode" source="60" target="15" label="60-15">
            <data key="Label">parentNode</data>
            <data key="dependencyType">parentNode</data>
        </edge>
        <edge id="61-60-body" source="61" target="60" label="61-60">
            <data key="Label">body</data>
            <data key="dependencyType">body</data>
        </edge>
        <edge id="62-15-parentNode" source="62" target="15" label="62-15">
            <data key="Label">parentNode</data>
            <data key="dependencyType">parentNode</data>
        </edge>
        <edge id="63-62-body" source="63" target="62" label="63-62">
            <data key="Label">body</data>
            <data key="dependencyType">body</data>
        </edge>
        <edge id="65-64-parentNode" source="65" target="64" label="65-64">
            <data key="Label">parentNode</data>
            <data key="dependencyType">parentNode</data>
        </edge>
        <edge id="66-65-parentNode" source="66" target="65" label="66-65">
            <data key="Label">parentNode</data>
            <data key="dependencyType">parentNode</data>
        </edge>
        <edge id="67-66-body" source="67" target="66" label="67-66">
            <data key="Label">body</data>
            <data key="dependencyType">body</data>
        </edge>
        <edge id="68-65-parentNode" source="68" target="65" label="68-65">
            <data key="Label">parentNode</data>
            <data key="dependencyType">parentNode</data>
        </edge>
        <edge id="69-68-body" source="69" target="68" label="69-68">
            <data key="Label">body</data>
            <data key="dependencyType">body</data>
        </edge>
        <edge id="7-6-body" source="7" target="6" label="7-6">
            <data key="Label">body</data>
            <data key="dependencyType">body</data>
        </edge>
        <edge id="70-65-parentNode" source="70" target="65" label="70-65">
            <data key="Label">parentNode</data>
            <data key="dependencyType">parentNode</data>
        </edge>
        <edge id="71-70-body" source="71" target="70" label="71-70">
            <data key="Label">body</data>
            <data key="dependencyType">body</data>
        </edge>
        <edge id="72-65-parentNode" source="72" target="65" label="72-65">
            <data key="Label">parentNode</data>
            <data key="dependencyType">parentNode</data>
        </edge>
        <edge id="73-72-body" source="73" target="72" label="73-72">
            <data key="Label">body</data>
            <data key="dependencyType">body</data>
        </edge>
        <edge id="74-65-parentNode" source="74" target="65" label="74-65">
            <data key="Label">parentNode</data>
            <data key="dependencyType">parentNode</data>
        </edge>
        <edge id="75-74-body" source="75" target="74" label="75-74">
            <data key="Label">body</data>
            <data key="dependencyType">body</data>
        </edge>
        <edge id="76-65-parentNode" source="76" target="65" label="76-65">
            <data key="Label">parentNode</data>
            <data key="dependencyType">parentNode</data>
        </edge>
        <edge id="77-76-body" source="77" target="76" label="77-76">
            <data key="Label">body</data>
            <data key="dependencyType">body</data>
        </edge>
        <edge id="78-65-parentNode" source="78" target="65" label="78-65">
            <data key="Label">parentNode</data>
            <data key="dependencyType">parentNode</data>
        </edge>
        <edge id="79-78-body" source="79" target="78" label="79-78">
            <data key="Label">body</data>
            <data key="dependencyType">body</data>
        </edge>
        <edge id="8-1-parentNode" source="8" target="1" label="8-1">
            <data key="Label">parentNode</data>
            <data key="dependencyType">parentNode</data>
        </edge>
        <edge id="80-65-parentNode" source="80" target="65" label="80-65">
            <data key="Label">parentNode</data>
            <data key="dependencyType">parentNode</data>
        </edge>
        <edge id="81-80-body" source="81" target="80" label="81-80">
            <data key="Label">body</data>
            <data key="dependencyType">body</data>
        </edge>
        <edge id="82-65-parentNode" source="82" target="65" label="82-65">
            <data key="Label">parentNode</data>
            <data key="dependencyType">parentNode</data>
        </edge>
        <edge id="83-82-body" source="83" target="82" label="83-82">
            <data key="Label">body</data>
            <data key="dependencyType">body</data>
        </edge>
        <edge id="85-84-parentNode" source="85" target="84" label="85-84">
            <data key="Label">parentNode</data>
            <data key="dependencyType">parentNode</data>
        </edge>
        <edge id="86-85-parentNode" source="86" target="85" label="86-85">
            <data key="Label">parentNode</data>
            <data key="dependencyType">parentNode</data>
        </edge>
        <edge id="87-86-body" source="87" target="86" label="87-86">
            <data key="Label">body</data>
            <data key="dependencyType">body</data>
        </edge>
        <edge id="88-85-parentNode" source="88" target="85" label="88-85">
            <data key="Label">parentNode</data>
            <data key="dependencyType">parentNode</data>
        </edge>
        <edge id="89-88-body" source="89" target="88" label="89-88">
            <data key="Label">body</data>
            <data key="dependencyType">body</data>
        </edge>
        <edge id="9-8-body" source="9" target="8" label="9-8">
            <data key="Label">body</data>
            <data key="dependencyType">body</data>
        </edge>
        <edge id="90-85-parentNode" source="90" target="85" label="90-85">
            <data key="Label">parentNode</data>
            <data key="dependencyType">parentNode</data>
        </edge>
        <edge id="91-90-body" source="91" target="90" label="91-90">
            <data key="Label">body</data>
            <data key="dependencyType">body</data>
        </edge>
        <edge id="92-85-parentNode" source="92" target="85" label="92-85">
            <data key="Label">parentNode</data>
            <data key="dependencyType">parentNode</data>
        </edge>
        <edge id="93-92-body" source="93" target="92" label="93-92">
            <data key="Label">body</data>
            <data key="dependencyType">body</data>
        </edge>
        <edge id="94-85-parentNode" source="94" target="85" label="94-85">
            <data key="Label">parentNode</data>
            <data key="dependencyType">parentNode</data>
        </edge>
        <edge id="95-94-body" source="95" target="94" label="95-94">
            <data key="Label">body</data>
            <data key="dependencyType">body</data>
        </edge>
        <edge id="96-85-parentNode" source="96" target="85" label="96-85">
            <data key="Label">parentNode</data>
            <data key="dependencyType">parentNode</data>
        </edge>
        <edge id="97-96-body" source="97" target="96" label="97-96">
            <data key="Label">body</data>
            <data key="dependencyType">body</data>
        </edge>
        <edge id="98-85-parentNode" source="98" target="85" label="98-85">
            <data key="Label">parentNode</data>
            <data key="dependencyType">parentNode</data>
        </edge>
        <edge id="99-98-body" source="99" target="98" label="99-98">
            <data key="Label">body</data>
            <data key="dependencyType">body</data>
        </edge>
    </graph>
</graphml>