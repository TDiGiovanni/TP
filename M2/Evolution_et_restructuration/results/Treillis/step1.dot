digraph G { 
	rankdir=BT;
subgraph Collections { 
label="Collections";
10 [shape=record,label="{Concept_Collections_9|int add(java.lang.Object, int)\nint remove(java.lang.Object, int)\nvoid clear()\nint count(java.lang.Object)\nboolean isEmpty()\nboolean contains(java.lang.Object)\nint size()\ninterface java.util.Iterator iterator()\ninterface java.util.Set entrySet()\nvoid forEachEntry(java.util.function.ObjIntConsumer)\nint setCount(java.lang.Object, int)\ninterface java.util.Set elementSet()\nboolean add(java.lang.Object)\nboolean remove(java.lang.Object)\nboolean addAll(java.util.Collection)\nboolean retainAll(java.util.Collection)\nboolean removeAll(java.util.Collection)\nboolean setCount(java.lang.Object, int, int)\nclass [Ljava.lang.Object; toArray([Ljava.lang.Object;)\nclass [Ljava.lang.Object; toArray()\nboolean containsAll(java.util.Collection)\ninterface java.util.stream.Stream stream()\nclass [Ljava.lang.Object; toArray(java.util.function.IntFunction)\ninterface java.util.Spliterator spliterator()\nboolean removeIf(java.util.function.Predicate)\ninterface java.util.stream.Stream parallelStream()\nvoid forEach(java.util.function.Consumer)\n|com.google.common.collect.ForwardingMultiset\n}"];
11 [shape=record,label="{Concept_Collections_1|int add(java.lang.Enum, int)\nclass com.google.common.collect.EnumMultiset create(java.lang.Class)\nclass com.google.common.collect.EnumMultiset create(java.lang.Iterable)\nclass com.google.common.collect.EnumMultiset create(java.lang.Iterable, java.lang.Class)\nint setCount(java.lang.Enum, int)\n|com.google.common.collect.EnumMultiset\n}"];
12 [shape=record,label="{Concept_Collections_0||}"];
13 [shape=record,label="{Concept_Collections_2|class com.google.common.collect.HashMultiset create()\nclass com.google.common.collect.HashMultiset create(int)\nclass com.google.common.collect.HashMultiset create(java.lang.Iterable)\n|com.google.common.collect.HashMultiset\n}"];
14 [shape=record,label="{Concept_Collections_3|class com.google.common.collect.TreeMultiset create()\nclass com.google.common.collect.TreeMultiset create(java.lang.Iterable)\nclass com.google.common.collect.TreeMultiset create(java.util.Comparator)\n|com.google.common.collect.TreeMultiset\n}"];
15 [shape=record,label="{Concept_Collections_8|interface java.util.Comparator comparator()\ninterface com.google.common.collect.Multiset$Entry pollFirstEntry()\ninterface com.google.common.collect.Multiset$Entry pollLastEntry()\ninterface com.google.common.collect.Multiset$Entry firstEntry()\ninterface com.google.common.collect.Multiset$Entry lastEntry()\ninterface com.google.common.collect.SortedMultiset tailMultiset(java.lang.Object, com.google.common.collect.BoundType)\ninterface com.google.common.collect.SortedMultiset descendingMultiset()\ninterface com.google.common.collect.SortedMultiset headMultiset(java.lang.Object, com.google.common.collect.BoundType)\ninterface com.google.common.collect.SortedMultiset subMultiset(java.lang.Object, com.google.common.collect.BoundType, java.lang.Object, com.google.common.collect.BoundType)\ninterface java.util.NavigableSet elementSet()\ninterface java.util.SortedSet elementSet()\n|com.google.common.collect.ForwardingSortedMultiset\n}"];
16 [shape=record,label="{Concept_Collections_4|class com.google.common.collect.ImmutableSortedMultiset copyOf(java.util.Iterator)\nclass com.google.common.collect.ImmutableSortedMultiset copyOf(java.lang.Iterable)\nclass com.google.common.collect.ImmutableSortedMultiset copyOf([Ljava.lang.Comparable;)\nclass com.google.common.collect.ImmutableSortedMultiset copyOf(java.util.Comparator, java.util.Iterator)\nclass com.google.common.collect.ImmutableSortedMultiset copyOf(java.util.Comparator, java.lang.Iterable)\nclass com.google.common.collect.ImmutableSortedMultiset of(java.lang.Comparable, java.lang.Comparable, java.lang.Comparable)\nclass com.google.common.collect.ImmutableSortedMultiset of(java.lang.Comparable, java.lang.Comparable)\nclass com.google.common.collect.ImmutableSortedMultiset of(java.lang.Comparable)\nclass com.google.common.collect.ImmutableSortedMultiset of()\nclass com.google.common.collect.ImmutableSortedMultiset of(java.lang.Comparable, java.lang.Comparable, java.lang.Comparable, java.lang.Comparable)\nclass com.google.common.collect.ImmutableSortedMultiset of(java.lang.Comparable, java.lang.Comparable, java.lang.Comparable, java.lang.Comparable, java.lang.Comparable)\nclass com.google.common.collect.ImmutableSortedMultiset of(java.lang.Comparable, java.lang.Comparable, java.lang.Comparable, java.lang.Comparable, java.lang.Comparable, java.lang.Comparable, [Ljava.lang.Comparable;)\nclass com.google.common.collect.ImmutableSortedMultiset$Builder reverseOrder()\nclass com.google.common.collect.ImmutableSortedMultiset$Builder naturalOrder()\nclass com.google.common.collect.ImmutableSortedMultiset tailMultiset(java.lang.Object, com.google.common.collect.BoundType)\nclass com.google.common.collect.ImmutableSortedMultiset descendingMultiset()\nclass com.google.common.collect.ImmutableSortedMultiset headMultiset(java.lang.Object, com.google.common.collect.BoundType)\nclass com.google.common.collect.ImmutableSortedMultiset subMultiset(java.lang.Object, com.google.common.collect.BoundType, java.lang.Object, com.google.common.collect.BoundType)\nclass com.google.common.collect.ImmutableSortedSet elementSet()\ninterface java.util.stream.Collector toImmutableSortedMultiset(java.util.Comparator, java.util.function.Function, java.util.function.ToIntFunction)\ninterface java.util.stream.Collector toImmutableSortedMultiset(java.util.Comparator)\nclass com.google.common.collect.ImmutableSortedMultiset copyOfSorted(com.google.common.collect.SortedMultiset)\nclass com.google.common.collect.ImmutableSortedMultiset$Builder orderedBy(java.util.Comparator)\nclass com.google.common.collect.ImmutableSortedMultiset copyOf([Ljava.lang.Object;)\nclass com.google.common.collect.ImmutableSortedMultiset$Builder builder()\nclass com.google.common.collect.ImmutableSortedMultiset of(java.lang.Object, java.lang.Object)\nclass com.google.common.collect.ImmutableSortedMultiset of(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)\nclass com.google.common.collect.ImmutableSortedMultiset of(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)\nclass com.google.common.collect.ImmutableSortedMultiset of(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, [Ljava.lang.Object;)\nclass com.google.common.collect.ImmutableSortedMultiset of(java.lang.Object, java.lang.Object, java.lang.Object)\nclass com.google.common.collect.ImmutableSortedMultiset of(java.lang.Object)\n|com.google.common.collect.ImmutableSortedMultiset\n}"];
17 [shape=record,label="{Concept_Collections_7|class com.google.common.collect.ImmutableMultiset copyOf(java.lang.Iterable)\nclass com.google.common.collect.ImmutableMultiset copyOf(java.util.Iterator)\nclass com.google.common.collect.ImmutableMultiset copyOf([Ljava.lang.Object;)\nclass com.google.common.collect.ImmutableMultiset$Builder builder()\nclass com.google.common.collect.UnmodifiableIterator iterator()\nclass com.google.common.collect.ImmutableMultiset of(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)\nclass com.google.common.collect.ImmutableMultiset of(java.lang.Object)\nclass com.google.common.collect.ImmutableMultiset of(java.lang.Object, java.lang.Object, java.lang.Object)\nclass com.google.common.collect.ImmutableMultiset of()\nclass com.google.common.collect.ImmutableMultiset of(java.lang.Object, java.lang.Object)\nclass com.google.common.collect.ImmutableMultiset of(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)\nclass com.google.common.collect.ImmutableMultiset of(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, [Ljava.lang.Object;)\nclass com.google.common.collect.ImmutableSet entrySet()\nclass com.google.common.collect.ImmutableList asList()\nclass com.google.common.collect.ImmutableSet elementSet()\ninterface java.util.stream.Collector toImmutableMultiset(java.util.function.Function, java.util.function.ToIntFunction)\ninterface java.util.stream.Collector toImmutableMultiset()\n|com.google.common.collect.ImmutableMultiset\n}"];
18 [shape=record,label="{Concept_Collections_5|class com.google.common.collect.LinkedHashMultiset create()\nclass com.google.common.collect.LinkedHashMultiset create(int)\nclass com.google.common.collect.LinkedHashMultiset create(java.lang.Iterable)\n|com.google.common.collect.LinkedHashMultiset\n}"];
19 [shape=record,label="{Concept_Collections_6|class com.google.common.collect.ConcurrentHashMultiset create(java.lang.Iterable)\nclass com.google.common.collect.ConcurrentHashMultiset create(java.util.concurrent.ConcurrentMap)\nclass com.google.common.collect.ConcurrentHashMultiset create()\ninterface java.util.Set createEntrySet()\nboolean removeExactly(java.lang.Object, int)\n|com.google.common.collect.ConcurrentHashMultiset\n}"];
	11 -> 10
	13 -> 10
	18 -> 10
	19 -> 10
	17 -> 10
	15 -> 10
	12 -> 11
	12 -> 13
	12 -> 14
	14 -> 15
	16 -> 15
	12 -> 16
	16 -> 17
	12 -> 18
	12 -> 19
}
}